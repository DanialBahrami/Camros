{
	"name": "df_bo_invoices_doclines",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_bo_sap_invoices",
						"type": "DatasetReference"
					},
					"name": "apiOrders"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sql_bo_orders_lines",
						"type": "DatasetReference"
					},
					"name": "SinkToSQLTable"
				}
			],
			"transformations": [
				{
					"name": "FlattenDocumentLines"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     httpMethod: 'GET',",
				"     timeout: 30,",
				"     responseFormat: ['type' -> 'json', 'documentForm' -> 'arrayOfDocuments']) ~> apiOrders",
				"apiOrders foldDown(unroll(body.value.DocumentLines),",
				"     mapColumn(",
				"          CardCode = body.value.CardCode,",
				"          CardName = body.value.CardName,",
				"          DocDate = body.value.DocDate,",
				"          DocDueDate = body.value.DocDueDate,",
				"          DocNum = body.value.DocNum,",
				"          DocTime = body.value.DocTime,",
				"          AccountCode = body.value.DocumentLines.AccountCode,",
				"          ActualBaseEntry = body.value.DocumentLines.ActualBaseEntry,",
				"          ActualBaseLine = body.value.DocumentLines.ActualBaseLine,",
				"          ActualDeliveryDate = body.value.DocumentLines.ActualDeliveryDate,",
				"          Address = body.value.DocumentLines.Address,",
				"          AgreementNo = body.value.DocumentLines.AgreementNo,",
				"          AgreementRowNumber = body.value.DocumentLines.AgreementRowNumber,",
				"          AppliedTax = body.value.DocumentLines.AppliedTax,",
				"          AppliedTaxFC = body.value.DocumentLines.AppliedTaxFC,",
				"          AppliedTaxSC = body.value.DocumentLines.AppliedTaxSC,",
				"          BackOrder = body.value.DocumentLines.BackOrder,",
				"          BarCode = body.value.DocumentLines.BarCode,",
				"          BaseEntry = body.value.DocumentLines.BaseEntry,",
				"          BaseLine = body.value.DocumentLines.BaseLine,",
				"          BaseOpenQuantity = body.value.DocumentLines.BaseOpenQuantity,",
				"          BaseType = body.value.DocumentLines.BaseType,",
				"          CESTCode = body.value.DocumentLines.CESTCode,",
				"          CFOPCode = body.value.DocumentLines.CFOPCode,",
				"          CNJPMan = body.value.DocumentLines.CNJPMan,",
				"          COGSAccountCode = body.value.DocumentLines.COGSAccountCode,",
				"          COGSCostingCode = body.value.DocumentLines.COGSCostingCode,",
				"          COGSCostingCode2 = body.value.DocumentLines.COGSCostingCode2,",
				"          COGSCostingCode3 = body.value.DocumentLines.COGSCostingCode3,",
				"          COGSCostingCode4 = body.value.DocumentLines.COGSCostingCode4,",
				"          COGSCostingCode5 = body.value.DocumentLines.COGSCostingCode5,",
				"          CSTCode = body.value.DocumentLines.CSTCode,",
				"          CSTforCOFINS = body.value.DocumentLines.CSTforCOFINS,",
				"          CSTforIPI = body.value.DocumentLines.CSTforIPI,",
				"          CSTforPIS = body.value.DocumentLines.CSTforPIS,",
				"          CUSplit = body.value.DocumentLines.CUSplit,",
				"          ChangeAssemlyBoMWarehouse = body.value.DocumentLines.ChangeAssemlyBoMWarehouse,",
				"          ChangeInventoryQuantityIndependently = body.value.DocumentLines.ChangeInventoryQuantityIndependently,",
				"          CommisionPercent = body.value.DocumentLines.CommisionPercent,",
				"          CommodityClassification = body.value.DocumentLines.CommodityClassification,",
				"          ConsiderQuantity = body.value.DocumentLines.ConsiderQuantity,",
				"          ConsumerSalesForecast = body.value.DocumentLines.ConsumerSalesForecast,",
				"          CorrInvAmountToDiffAcct = body.value.DocumentLines.CorrInvAmountToDiffAcct,",
				"          CorrInvAmountToStock = body.value.DocumentLines.CorrInvAmountToStock,",
				"          CorrectionInvoiceItem = body.value.DocumentLines.CorrectionInvoiceItem,",
				"          CostingCode = body.value.DocumentLines.CostingCode,",
				"          CostingCode2 = body.value.DocumentLines.CostingCode2,",
				"          CostingCode3 = body.value.DocumentLines.CostingCode3,",
				"          CostingCode4 = body.value.DocumentLines.CostingCode4,",
				"          CostingCode5 = body.value.DocumentLines.CostingCode5,",
				"          CountryOrg = body.value.DocumentLines.CountryOrg,",
				"          CreditOriginCode = body.value.DocumentLines.CreditOriginCode,",
				"          CtrSealQty = body.value.DocumentLines.CtrSealQty,",
				"          Currency = body.value.DocumentLines.Currency,",
				"          DefectAndBreakup = body.value.DocumentLines.DefectAndBreakup,",
				"          DeferredTax = body.value.DocumentLines.DeferredTax,",
				"          DestinationCountryForImport = body.value.DocumentLines.DestinationCountryForImport,",
				"          DestinationRegionForImport = body.value.DocumentLines.DestinationRegionForImport,",
				"          DiscountPercent = body.value.DocumentLines.DiscountPercent,",
				"          DistributeExpense = body.value.DocumentLines.DistributeExpense,",
				"          DocEntry = body.value.DocumentLines.DocEntry,",
				"          EqualizationTaxPercent = body.value.DocumentLines.EqualizationTaxPercent,",
				"          ExLineNo = body.value.DocumentLines.ExLineNo,",
				"          ExciseAmount = body.value.DocumentLines.ExciseAmount,",
				"          ExpenseOperationType = body.value.DocumentLines.ExpenseOperationType,",
				"          ExpenseType = body.value.DocumentLines.ExpenseType,",
				"          ExternalCalcTaxAmount = body.value.DocumentLines.ExternalCalcTaxAmount,",
				"          ExternalCalcTaxAmountFC = body.value.DocumentLines.ExternalCalcTaxAmountFC,",
				"          ExternalCalcTaxAmountSC = body.value.DocumentLines.ExternalCalcTaxAmountSC,",
				"          ExternalCalcTaxRate = body.value.DocumentLines.ExternalCalcTaxRate,",
				"          Factor1 = body.value.DocumentLines.Factor1,",
				"          Factor2 = body.value.DocumentLines.Factor2,",
				"          Factor3 = body.value.DocumentLines.Factor3,",
				"          Factor4 = body.value.DocumentLines.Factor4,",
				"          FederalTaxID = body.value.DocumentLines.FederalTaxID,",
				"          FreeOfChargeBP = body.value.DocumentLines.FreeOfChargeBP,",
				"          FreeText = body.value.DocumentLines.FreeText,",
				"          GrossBase = body.value.DocumentLines.GrossBase,",
				"          GrossBuyPrice = body.value.DocumentLines.GrossBuyPrice,",
				"          GrossPrice = body.value.DocumentLines.GrossPrice,",
				"          GrossProfit = body.value.DocumentLines.GrossProfit,",
				"          GrossProfitFC = body.value.DocumentLines.GrossProfitFC,",
				"          GrossProfitSC = body.value.DocumentLines.GrossProfitSC,",
				"          GrossProfitTotalBasePrice = body.value.DocumentLines.GrossProfitTotalBasePrice,",
				"          GrossTotal = body.value.DocumentLines.GrossTotal,",
				"          GrossTotalFC = body.value.DocumentLines.GrossTotalFC,",
				"          GrossTotalSC = body.value.DocumentLines.GrossTotalSC,",
				"          HSNEntry = body.value.DocumentLines.HSNEntry,",
				"          Height1 = body.value.DocumentLines.Height1,",
				"          Height2 = body.value.DocumentLines.Height2,",
				"          Height2Unit = body.value.DocumentLines.Height2Unit,",
				"          Hight1Unit = body.value.DocumentLines.Hight1Unit,",
				"          Incoterms = body.value.DocumentLines.Incoterms,",
				"          IndEscala = body.value.DocumentLines.IndEscala,",
				"          InventoryQuantity = body.value.DocumentLines.InventoryQuantity,",
				"          ItemCode = body.value.DocumentLines.ItemCode,",
				"          ItemDescription = body.value.DocumentLines.ItemDescription,",
				"          ItemDetails = body.value.DocumentLines.ItemDetails,",
				"          ItemType = body.value.DocumentLines.ItemType,",
				"          LastBuyDistributeSum = body.value.DocumentLines.LastBuyDistributeSum,",
				"          LastBuyDistributeSumFc = body.value.DocumentLines.LastBuyDistributeSumFc,",
				"          LastBuyDistributeSumSc = body.value.DocumentLines.LastBuyDistributeSumSc,",
				"          LastBuyInmPrice = body.value.DocumentLines.LastBuyInmPrice,",
				"          Lengh1 = body.value.DocumentLines.Lengh1,",
				"          Lengh1Unit = body.value.DocumentLines.Lengh1Unit,",
				"          Lengh2 = body.value.DocumentLines.Lengh2,",
				"          Lengh2Unit = body.value.DocumentLines.Lengh2Unit,",
				"          LineNum = body.value.DocumentLines.LineNum,",
				"          LineStatus = body.value.DocumentLines.LineStatus,",
				"          LineTotal = body.value.DocumentLines.LineTotal,",
				"          LineType = body.value.DocumentLines.LineType,",
				"          LocationCode = body.value.DocumentLines.LocationCode,",
				"          MeasureUnit = body.value.DocumentLines.MeasureUnit,",
				"          NCMCode = body.value.DocumentLines.NCMCode,",
				"          NVECode = body.value.DocumentLines.NVECode,",
				"          NatureOfTransaction = body.value.DocumentLines.NatureOfTransaction,",
				"          NetTaxAmount = body.value.DocumentLines.NetTaxAmount,",
				"          NetTaxAmountFC = body.value.DocumentLines.NetTaxAmountFC,",
				"          NetTaxAmountSC = body.value.DocumentLines.NetTaxAmountSC,",
				"          OpenAmount = body.value.DocumentLines.OpenAmount,",
				"          OpenAmountFC = body.value.DocumentLines.OpenAmountFC,",
				"          OpenAmountSC = body.value.DocumentLines.OpenAmountSC,",
				"          OriginCountryForExport = body.value.DocumentLines.OriginCountryForExport,",
				"          OriginRegionForExport = body.value.DocumentLines.OriginRegionForExport,",
				"          OriginalItem = body.value.DocumentLines.OriginalItem,",
				"          OwnerCode = body.value.DocumentLines.OwnerCode,",
				"          POTargetEntry = body.value.DocumentLines.POTargetEntry,",
				"          POTargetNum = body.value.DocumentLines.POTargetNum,",
				"          POTargetRowNum = body.value.DocumentLines.POTargetRowNum,",
				"          PackageQuantity = body.value.DocumentLines.PackageQuantity,",
				"          ParentLineNum = body.value.DocumentLines.ParentLineNum,",
				"          PartialRetirement = body.value.DocumentLines.PartialRetirement,",
				"          PickListIdNumber = body.value.DocumentLines.PickListIdNumber,",
				"          PickQuantity = body.value.DocumentLines.PickQuantity,",
				"          PickStatus = body.value.DocumentLines.PickStatus,",
				"          PickStatusEx = body.value.DocumentLines.PickStatusEx,",
				"          PoItmNum = body.value.DocumentLines.PoItmNum,",
				"          PoNum = body.value.DocumentLines.PoNum,",
				"          Price = body.value.DocumentLines.Price,",
				"          PriceAfterVAT = body.value.DocumentLines.PriceAfterVAT,",
				"          PriceSource = body.value.DocumentLines.PriceSource,",
				"          ProjectCode = body.value.DocumentLines.ProjectCode,",
				"          Quantity = body.value.DocumentLines.Quantity,",
				"          Rate = body.value.DocumentLines.Rate,",
				"          ReceiptNumber = body.value.DocumentLines.ReceiptNumber,",
				"          RemainingOpenInventoryQuantity = body.value.DocumentLines.RemainingOpenInventoryQuantity,",
				"          RemainingOpenQuantity = body.value.DocumentLines.RemainingOpenQuantity,",
				"          RequiredDate = body.value.DocumentLines.RequiredDate,",
				"          RequiredQuantity = body.value.DocumentLines.RequiredQuantity,",
				"          RetirementAPC = body.value.DocumentLines.RetirementAPC,",
				"          RetirementQuantity = body.value.DocumentLines.RetirementQuantity,",
				"          ReverseCharge = body.value.DocumentLines.ReverseCharge,",
				"          RowTotalFC = body.value.DocumentLines.RowTotalFC,",
				"          RowTotalSC = body.value.DocumentLines.RowTotalSC,",
				"          SACEntry = body.value.DocumentLines.SACEntry,",
				"          SWW = body.value.DocumentLines.SWW,",
				"          SalesPersonCode = body.value.DocumentLines.SalesPersonCode,",
				"          SerialNum = body.value.DocumentLines.SerialNum,",
				"          ShipDate = body.value.DocumentLines.ShipDate,",
				"          ShipToCode = body.value.DocumentLines.ShipToCode,",
				"          ShipToDescription = body.value.DocumentLines.ShipToDescription,",
				"          ShippingMethod = body.value.DocumentLines.ShippingMethod,",
				"          Shortages = body.value.DocumentLines.Shortages,",
				"          StandardItemIdentification = body.value.DocumentLines.StandardItemIdentification,",
				"          StgDesc = body.value.DocumentLines.StgDesc,",
				"          StgEntry = body.value.DocumentLines.StgEntry,",
				"          StgSeqNum = body.value.DocumentLines.StgSeqNum,",
				"          StockDistributesum = body.value.DocumentLines.StockDistributesum,",
				"          StockDistributesumForeign = body.value.DocumentLines.StockDistributesumForeign,",
				"          StockDistributesumSystem = body.value.DocumentLines.StockDistributesumSystem,",
				"          StockInmPrice = body.value.DocumentLines.StockInmPrice,",
				"          SupplierCatNum = body.value.DocumentLines.SupplierCatNum,",
				"          Surpluses = body.value.DocumentLines.Surpluses,",
				"          TaxBeforeDPM = body.value.DocumentLines.TaxBeforeDPM,",
				"          TaxBeforeDPMFC = body.value.DocumentLines.TaxBeforeDPMFC,",
				"          TaxBeforeDPMSC = body.value.DocumentLines.TaxBeforeDPMSC,",
				"          TaxCode = body.value.DocumentLines.TaxCode,",
				"          TaxLiable = body.value.DocumentLines.TaxLiable,",
				"          TaxOnly = body.value.DocumentLines.TaxOnly,",
				"          TaxPerUnit = body.value.DocumentLines.TaxPerUnit,",
				"          TaxPercentagePerRow = body.value.DocumentLines.TaxPercentagePerRow,",
				"          TaxTotal = body.value.DocumentLines.TaxTotal,",
				"          TaxType = body.value.DocumentLines.TaxType,",
				"          Text = body.value.DocumentLines.Text,",
				"          ThirdParty = body.value.DocumentLines.ThirdParty,",
				"          TotalEqualizationTax = body.value.DocumentLines.TotalEqualizationTax,",
				"          TotalEqualizationTaxFC = body.value.DocumentLines.TotalEqualizationTaxFC,",
				"          TotalEqualizationTaxSC = body.value.DocumentLines.TotalEqualizationTaxSC,",
				"          TotalInclTax = body.value.DocumentLines.TotalInclTax,",
				"          TransactionType = body.value.DocumentLines.TransactionType,",
				"          TransportMode = body.value.DocumentLines.TransportMode,",
				"          TreeType = body.value.DocumentLines.TreeType,",
				"          UFFiscalBenefitCode = body.value.DocumentLines.UFFiscalBenefitCode,",
				"          U_AIG_DDate = body.value.DocumentLines.U_AIG_DDate,",
				"          U_AIG_IA = body.value.DocumentLines.U_AIG_IA,",
				"          U_AIG_ID = body.value.DocumentLines.U_AIG_ID,",
				"          U_AIG_IN = body.value.DocumentLines.U_AIG_IN,",
				"          U_AIG_IR = body.value.DocumentLines.U_AIG_IR,",
				"          U_AIG_PD = body.value.DocumentLines.U_AIG_PD,",
				"          U_AIG_PDate = body.value.DocumentLines.U_AIG_PDate,",
				"          U_Codebars = body.value.DocumentLines.U_Codebars,",
				"          U_DSS_Charge = body.value.DocumentLines.U_DSS_Charge,",
				"          U_DSS_ProdOrdr = body.value.DocumentLines.U_DSS_ProdOrdr,",
				"          U_Installasjon = body.value.DocumentLines.U_Installasjon,",
				"          U_PItemCode = body.value.DocumentLines.U_PItemCode,",
				"          U_ParentItem = body.value.DocumentLines.U_ParentItem,",
				"          U_PlannedQty = body.value.DocumentLines.U_PlannedQty,",
				"          U_U_AIG_DDate = body.value.DocumentLines.U_U_AIG_DDate,",
				"          UnencumberedReason = body.value.DocumentLines.UnencumberedReason,",
				"          UnitPrice = body.value.DocumentLines.UnitPrice,",
				"          UnitsOfMeasurment = body.value.DocumentLines.UnitsOfMeasurment,",
				"          UoMCode = body.value.DocumentLines.UoMCode,",
				"          UoMEntry = body.value.DocumentLines.UoMEntry,",
				"          Usage = body.value.DocumentLines.Usage,",
				"          UseBaseUnits = body.value.DocumentLines.UseBaseUnits,",
				"          VatGroup = body.value.DocumentLines.VatGroup,",
				"          VendorNum = body.value.DocumentLines.VendorNum,",
				"          VisualOrder = body.value.DocumentLines.VisualOrder,",
				"          Volume = body.value.DocumentLines.Volume,",
				"          VolumeUnit = body.value.DocumentLines.VolumeUnit,",
				"          WTLiable = body.value.DocumentLines.WTLiable,",
				"          WarehouseCode = body.value.DocumentLines.WarehouseCode,",
				"          Weight1 = body.value.DocumentLines.Weight1,",
				"          Weight1Unit = body.value.DocumentLines.Weight1Unit,",
				"          Weight2 = body.value.DocumentLines.Weight2,",
				"          Weight2Unit = body.value.DocumentLines.Weight2Unit,",
				"          Width1 = body.value.DocumentLines.Width1,",
				"          Width1Unit = body.value.DocumentLines.Width1Unit,",
				"          Width2 = body.value.DocumentLines.Width2,",
				"          Width2Unit = body.value.DocumentLines.Width2Unit,",
				"          WithoutInventoryMovement = body.value.DocumentLines.WithoutInventoryMovement",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlattenDocumentLines",
				"FlattenDocumentLines sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SinkToSQLTable"
			]
		}
	}
}