{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Bondura-SAP"
		},
		"AzureBlobStorage_json_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage_json'"
		},
		"AzureSqlDatabase_Bondura_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_Bondura'"
		},
		"BonduraServiceLayer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'BonduraServiceLayer'"
		},
		"BonduraServiceLayerV1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'BonduraServiceLayerV1'"
		},
		"OData_Semantic_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OData_Semantic'"
		},
		"RestService_Bondura_Invoices_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService_Bondura_Invoices'"
		},
		"RestService_Bondura_SE_invoives_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService_Bondura_SE_invoives'"
		},
		"RestService_Semantic_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService_Semantic'"
		},
		"RestService_bo_businessPartners_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService_bo_businessPartners'"
		},
		"RestService_bo_invoices_incparam_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService_bo_invoices_incparam'"
		},
		"RestService_bo_orders_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService_bo_orders'"
		},
		"RestService_bo_orders_pag_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService_bo_orders_pag'"
		},
		"RestService_bondura_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService_bondura'"
		},
		"RestService_bse_businessPartners_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService_bse_businessPartners'"
		},
		"RestService_orders_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService_orders'"
		},
		"RestService_orders_bse_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestService_orders_bse'"
		},
		"SapEcc_Bondura_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SapEcc_Bondura'"
		},
		"link_DL_Uinvest_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'link_DL_Uinvest'"
		},
		"link_bo_sap_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'link_bo_sap'"
		},
		"linkedService_bo_budgets_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService_bo_budgets'"
		},
		"linkedService_bo_inc_log_blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService_bo_inc_log_blob'"
		},
		"linkedService_bo_log_budgets_lines_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService_bo_log_budgets_lines'"
		},
		"AzureKeyVault_bo_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://camrosKeys.vault.azure.net/"
		},
		"AzureKeyVault_bo_sap_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://camrosKeys.vault.azure.net/"
		},
		"BonduraServiceLayer_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/"
		},
		"BonduraServiceLayer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"BonduraServiceLayerV1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/"
		},
		"BonduraServiceLayerV1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"OData_Semantic_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/sml.svc/SalesAnalysisQuery"
		},
		"OData_Semantic_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"RestService_Bondura_Invoices_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/Invoices?$count=true&$top=1&$skip={skip}"
		},
		"RestService_Bondura_Invoices_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"RestService_Bondura_SE_invoives_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/Invoices?$count=true&$skip={skip}"
		},
		"RestService_Bondura_SE_invoives_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA_SE\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"RestService_Semantic_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/sml.svc/SalesAnalysisQuery"
		},
		"RestService_Semantic_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"RestService_bo_businessPartners_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/BusinessPartners?$count=true&$skip={skip}"
		},
		"RestService_bo_businessPartners_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"RestService_bo_invoices_incparam_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/Invoices"
		},
		"RestService_bo_invoices_incparam_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"RestService_bo_orders_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/Orders?$count=true"
		},
		"RestService_bo_orders_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA_SE\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"RestService_bo_orders_pag_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/Orders?$count=true&$skip={skip}"
		},
		"RestService_bo_orders_pag_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"RestService_bondura_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/"
		},
		"RestService_bondura_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"RestService_bse_businessPartners_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/BusinessPartners?$count=True&$skip={skip}"
		},
		"RestService_bse_businessPartners_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA_SE\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"RestService_orders_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/Orders?$count=true&$top=1&$skip={skip}"
		},
		"RestService_orders_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"RestService_orders_bse_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/Orders?$count=true&$skip={skip}"
		},
		"RestService_orders_bse_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA_SE\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"SapEcc_Bondura_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/"
		},
		"SapEcc_Bondura_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		},
		"link_DL_Uinvest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://uinvestlake.dfs.core.windows.net/"
		},
		"link_bo_sap_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/"
		},
		"link_bo_sap_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pip_api_blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AllPagesFetched",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(bool(variables('repeat')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyApiToBlob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "setOfObjects"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_bo_sap_parametrized",
											"type": "DatasetReference",
											"parameters": {
												"ResPath": {
													"value": "@variables('nextLink')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_blob_bondura",
											"type": "DatasetReference",
											"parameters": {
												"Directory": {
													"value": "@pipeline().parameters.Stream",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat(utcnow(), '.json')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "ApiCallPagination",
									"description": "call api again and get next link",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "CopyApiToBlob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@concat(variables('baseUrl'),variables('nextLink'),'&$select=DocNum')",
											"type": "Expression"
										},
										"authentication": {
											"type": "Basic",
											"username": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}",
											"password": {
												"type": "AzureKeyVaultSecret",
												"store": {
													"referenceName": "AzureKeyVault_bo_sap",
													"type": "LinkedServiceReference"
												},
												"secretName": "Bondura"
											}
										}
									}
								},
								{
									"name": "SetNextLink",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ApiCallPagination",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "nextLink",
										"value": {
											"value": "@if(contains(activity('ApiCallPagination').output, '@odata.nextLink'), replace(activity('ApiCallPagination').output['@odata.nextLink'],'&$select=DocNum' , '' ), 'false')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SetRepeat",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SetNextLink",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "repeat",
										"value": {
											"value": "@if(not(equals(variables('nextLink'), 'false')), true, false)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stop",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CopyApiToBlob",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "ApiCallPagination",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "SetNextLink",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "SetRepeat",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "repeat",
										"value": {
											"value": "@bool(0)",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Stream": {
						"type": "string",
						"defaultValue": "Invoices"
					}
				},
				"variables": {
					"baseUrl": {
						"type": "String",
						"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/"
					},
					"nextLink": {
						"type": "String",
						"defaultValue": "Invoices?$filter=DocDate%20gt%20%272024-01-01%27&$skip=0"
					},
					"repeat": {
						"type": "Boolean",
						"defaultValue": true
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bo_sap_parametrized')]",
				"[concat(variables('factoryId'), '/datasets/ds_blob_bondura')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_bo_sap')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_blob_sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ListFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_blob_bondura",
								"type": "DatasetReference",
								"parameters": {
									"Directory": {
										"value": "@pipeline().parameters.Stream",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.WildCard",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ListFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ListFiles').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "JsonToSqlMast",
									"type": "Copy",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "m_ds",
													"value": "'Bondura'"
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureBlobStorage_json",
													"type": "LinkedServiceReference"
												},
												"path": "copyactivity-logs"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['DocEntry']"
													},
													"sink": {
														"name": "DocEntry",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "[['DocNum']"
													},
													"sink": {
														"name": "DocNum",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "[['DocType']"
													},
													"sink": {
														"name": "DocType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['HandWritten']"
													},
													"sink": {
														"name": "HandWritten",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Printed']"
													},
													"sink": {
														"name": "Printed",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DocDate']"
													},
													"sink": {
														"name": "DocDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "[['DocDueDate']"
													},
													"sink": {
														"name": "DocDueDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "[['CardCode']"
													},
													"sink": {
														"name": "CardCode",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "[['CardName']"
													},
													"sink": {
														"name": "CardName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Address']"
													},
													"sink": {
														"name": "Address",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NumAtCard']"
													},
													"sink": {
														"name": "NumAtCard",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DocTotal']"
													},
													"sink": {
														"name": "DocTotal",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['AttachmentEntry']"
													},
													"sink": {
														"name": "AttachmentEntry",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DocCurrency']"
													},
													"sink": {
														"name": "DocCurrency",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DocRate']"
													},
													"sink": {
														"name": "DocRate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Reference1']"
													},
													"sink": {
														"name": "Reference1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Reference2']"
													},
													"sink": {
														"name": "Reference2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Comments']"
													},
													"sink": {
														"name": "Comments",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['JournalMemo']"
													},
													"sink": {
														"name": "JournalMemo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PaymentGroupCode']"
													},
													"sink": {
														"name": "PaymentGroupCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DocTime']"
													},
													"sink": {
														"name": "DocTime",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SalesPersonCode']"
													},
													"sink": {
														"name": "SalesPersonCode",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "[['TransportationCode']"
													},
													"sink": {
														"name": "TransportationCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Confirmed']"
													},
													"sink": {
														"name": "Confirmed",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ImportFileNum']"
													},
													"sink": {
														"name": "ImportFileNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SummeryType']"
													},
													"sink": {
														"name": "SummeryType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ContactPersonCode']"
													},
													"sink": {
														"name": "ContactPersonCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ShowSCN']"
													},
													"sink": {
														"name": "ShowSCN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Series']"
													},
													"sink": {
														"name": "Series",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TaxDate']"
													},
													"sink": {
														"name": "TaxDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PartialSupply']"
													},
													"sink": {
														"name": "PartialSupply",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DocObjectCode']"
													},
													"sink": {
														"name": "DocObjectCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ShipToCode']"
													},
													"sink": {
														"name": "ShipToCode"
													}
												},
												{
													"source": {
														"path": "[['Indicator']"
													},
													"sink": {
														"name": "Indicator",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FederalTaxID']"
													},
													"sink": {
														"name": "FederalTaxID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DiscountPercent']"
													},
													"sink": {
														"name": "DiscountPercent",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PaymentReference']"
													},
													"sink": {
														"name": "PaymentReference",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CreationDate']"
													},
													"sink": {
														"name": "CreationDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "[['UpdateDate']"
													},
													"sink": {
														"name": "UpdateDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "[['FinancialPeriod']"
													},
													"sink": {
														"name": "FinancialPeriod",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UserSign']"
													},
													"sink": {
														"name": "UserSign",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TransNum']"
													},
													"sink": {
														"name": "TransNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VatSum']"
													},
													"sink": {
														"name": "VatSum",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['VatSumSys']"
													},
													"sink": {
														"name": "VatSumSys",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['VatSumFc']"
													},
													"sink": {
														"name": "VatSumFc",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['NetProcedure']"
													},
													"sink": {
														"name": "NetProcedure",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DocTotalFc']"
													},
													"sink": {
														"name": "DocTotalFc",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['DocTotalSys']"
													},
													"sink": {
														"name": "DocTotalSys",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['Form1099']"
													},
													"sink": {
														"name": "Form1099",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Box1099']"
													},
													"sink": {
														"name": "Box1099",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RevisionPo']"
													},
													"sink": {
														"name": "RevisionPo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RequriedDate']"
													},
													"sink": {
														"name": "RequriedDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "[['CancelDate']"
													},
													"sink": {
														"name": "CancelDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "[['BlockDunning']"
													},
													"sink": {
														"name": "BlockDunning",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Submitted']"
													},
													"sink": {
														"name": "Submitted",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Segment']"
													},
													"sink": {
														"name": "Segment",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PickStatus']"
													},
													"sink": {
														"name": "PickStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Pick']"
													},
													"sink": {
														"name": "Pick",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PaymentMethod']"
													},
													"sink": {
														"name": "PaymentMethod",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PaymentBlock']"
													},
													"sink": {
														"name": "PaymentBlock",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PaymentBlockEntry']"
													},
													"sink": {
														"name": "PaymentBlockEntry",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CentralBankIndicator']"
													},
													"sink": {
														"name": "CentralBankIndicator",
														"type": "Single"
													}
												},
												{
													"source": {
														"path": "[['MaximumCashDiscount']"
													},
													"sink": {
														"name": "MaximumCashDiscount",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Reserve']"
													},
													"sink": {
														"name": "Reserve",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Project']"
													},
													"sink": {
														"name": "Project",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ExemptionValidityDateFrom']"
													},
													"sink": {
														"name": "ExemptionValidityDateFrom",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ExemptionValidityDateTo']"
													},
													"sink": {
														"name": "ExemptionValidityDateTo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WareHouseUpdateType']"
													},
													"sink": {
														"name": "WareHouseUpdateType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Rounding']"
													},
													"sink": {
														"name": "Rounding",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ExternalCorrectedDocNum']"
													},
													"sink": {
														"name": "ExternalCorrectedDocNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['InternalCorrectedDocNum']"
													},
													"sink": {
														"name": "InternalCorrectedDocNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NextCorrectingDocument']"
													},
													"sink": {
														"name": "NextCorrectingDocument",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DeferredTax']"
													},
													"sink": {
														"name": "value'][0]['DeferredTax",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TaxExemptionLetterNum']"
													},
													"sink": {
														"name": "TaxExemptionLetterNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WTApplied']"
													},
													"sink": {
														"name": "WTApplied",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WTAppliedFC']"
													},
													"sink": {
														"name": "WTAppliedFC",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BillOfExchangeReserved']"
													},
													"sink": {
														"name": "BillOfExchangeReserved",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AgentCode']"
													},
													"sink": {
														"name": "AgentCode",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "[['WTAppliedSC']"
													},
													"sink": {
														"name": "WTAppliedSC",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TotalEqualizationTax']"
													},
													"sink": {
														"name": "TotalEqualizationTax",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['TotalEqualizationTaxFC']"
													},
													"sink": {
														"name": "TotalEqualizationTaxFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['TotalEqualizationTaxSC']"
													},
													"sink": {
														"name": "TotalEqualizationTaxSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['NumberOfInstallments']"
													},
													"sink": {
														"name": "NumberOfInstallments",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "[['ApplyTaxOnFirstInstallment']"
													},
													"sink": {
														"name": "ApplyTaxOnFirstInstallment",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WTNonSubjectAmount']"
													},
													"sink": {
														"name": "WTNonSubjectAmount",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['WTNonSubjectAmountSC']"
													},
													"sink": {
														"name": "WTNonSubjectAmountSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['WTNonSubjectAmountFC']"
													},
													"sink": {
														"name": "WTNonSubjectAmountFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['WTExemptedAmount']"
													},
													"sink": {
														"name": "WTExemptedAmount",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['WTExemptedAmountSC']"
													},
													"sink": {
														"name": "WTExemptedAmountSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['WTExemptedAmountFC']"
													},
													"sink": {
														"name": "WTExemptedAmountFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['BaseAmount']"
													},
													"sink": {
														"name": "BaseAmount",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['BaseAmountSC']"
													},
													"sink": {
														"name": "BaseAmountSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['BaseAmountFC']"
													},
													"sink": {
														"name": "BaseAmountFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['WTAmount']"
													},
													"sink": {
														"name": "WTAmount",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['WTAmountSC']"
													},
													"sink": {
														"name": "WTAmountSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['WTAmountFC']"
													},
													"sink": {
														"name": "WTAmountFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['VatDate']"
													},
													"sink": {
														"name": "VatDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "[['DocumentsOwner']"
													},
													"sink": {
														"name": "DocumentsOwner",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FolioPrefixString']"
													},
													"sink": {
														"name": "FolioPrefixString",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FolioNumber']"
													},
													"sink": {
														"name": "FolioNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DocumentSubType']"
													},
													"sink": {
														"name": "DocumentSubType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BPChannelCode']"
													},
													"sink": {
														"name": "BPChannelCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BPChannelContact']"
													},
													"sink": {
														"name": "BPChannelContact",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Address2']"
													},
													"sink": {
														"name": "Address2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DocumentStatus']"
													},
													"sink": {
														"name": "DocumentStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PeriodIndicator']"
													},
													"sink": {
														"name": "PeriodIndicator",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PayToCode']"
													},
													"sink": {
														"name": "PayToCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ManualNumber']"
													},
													"sink": {
														"name": "ManualNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UseShpdGoodsAct']"
													},
													"sink": {
														"name": "UseShpdGoodsAct",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IsPayToBank']"
													},
													"sink": {
														"name": "IsPayToBank",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PayToBankCountry']"
													},
													"sink": {
														"name": "PayToBankCountry",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PayToBankCode']"
													},
													"sink": {
														"name": "PayToBankCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PayToBankAccountNo']"
													},
													"sink": {
														"name": "PayToBankAccountNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PayToBankBranch']"
													},
													"sink": {
														"name": "PayToBankBranch",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BPL_IDAssignedToInvoice']"
													},
													"sink": {
														"name": "BPL_IDAssignedToInvoice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DownPayment']"
													},
													"sink": {
														"name": "DownPayment",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['ReserveInvoice']"
													},
													"sink": {
														"name": "ReserveInvoice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LanguageCode']"
													},
													"sink": {
														"name": "LanguageCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TrackingNumber']"
													},
													"sink": {
														"name": "TrackingNumber",
														"type": "Single"
													}
												},
												{
													"source": {
														"path": "[['PickRemark']"
													},
													"sink": {
														"name": "PickRemark",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ClosingDate']"
													},
													"sink": {
														"name": "ClosingDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "[['SequenceCode']"
													},
													"sink": {
														"name": "SequenceCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SequenceSerial']"
													},
													"sink": {
														"name": "SequenceSerial",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SeriesString']"
													},
													"sink": {
														"name": "SeriesString",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SubSeriesString']"
													},
													"sink": {
														"name": "SubSeriesString",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SequenceModel']"
													},
													"sink": {
														"name": "SequenceModel",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UseCorrectionVATGroup']"
													},
													"sink": {
														"name": "UseCorrectionVATGroup",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TotalDiscount']"
													},
													"sink": {
														"name": "TotalDiscount",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['DownPaymentAmount']"
													},
													"sink": {
														"name": "DownPaymentAmount",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['DownPaymentPercentage']"
													},
													"sink": {
														"name": "DownPaymentPercentage",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['DownPaymentType']"
													},
													"sink": {
														"name": "DownPaymentType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DownPaymentAmountSC']"
													},
													"sink": {
														"name": "DownPaymentAmountSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['DownPaymentAmountFC']"
													},
													"sink": {
														"name": "DownPaymentAmountFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['VatPercent']"
													},
													"sink": {
														"name": "VatPercent",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['ServiceGrossProfitPercent']"
													},
													"sink": {
														"name": "ServiceGrossProfitPercent",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['OpeningRemarks']"
													},
													"sink": {
														"name": "OpeningRemarks",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ClosingRemarks']"
													},
													"sink": {
														"name": "ClosingRemarks",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RoundingDiffAmount']"
													},
													"sink": {
														"name": "RoundingDiffAmount",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RoundingDiffAmountFC']"
													},
													"sink": {
														"name": "RoundingDiffAmountFC",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RoundingDiffAmountSC']"
													},
													"sink": {
														"name": "RoundingDiffAmountSC",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Cancelled']"
													},
													"sink": {
														"name": "Cancelled",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SignatureInputMessage']"
													},
													"sink": {
														"name": "SignatureInputMessage",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SignatureDigest']"
													},
													"sink": {
														"name": "SignatureDigest",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CertificationNumber']"
													},
													"sink": {
														"name": "CertificationNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PrivateKeyVersion']"
													},
													"sink": {
														"name": "PrivateKeyVersion",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ControlAccount']"
													},
													"sink": {
														"name": "ControlAccount",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['InsuranceOperation347']"
													},
													"sink": {
														"name": "InsuranceOperation347",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ArchiveNonremovableSalesQuotation']"
													},
													"sink": {
														"name": "ArchiveNonremovableSalesQuotation",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['GTSChecker']"
													},
													"sink": {
														"name": "GTSChecker",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['GTSPayee']"
													},
													"sink": {
														"name": "GTSPayee",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ExtraMonth']"
													},
													"sink": {
														"name": "ExtraMonth",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ExtraDays']"
													},
													"sink": {
														"name": "ExtraDays",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CashDiscountDateOffset']"
													},
													"sink": {
														"name": "CashDiscountDateOffset",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['StartFrom']"
													},
													"sink": {
														"name": "StartFrom",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NTSApproved']"
													},
													"sink": {
														"name": "NTSApproved",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ETaxWebSite']"
													},
													"sink": {
														"name": "ETaxWebSite",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ETaxNumber']"
													},
													"sink": {
														"name": "ETaxNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['NTSApprovedNumber']"
													},
													"sink": {
														"name": "NTSApprovedNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['EDocGenerationType']"
													},
													"sink": {
														"name": "EDocGenerationType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['EDocSeries']"
													},
													"sink": {
														"name": "EDocSeries",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['EDocNum']"
													},
													"sink": {
														"name": "EDocNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['EDocExportFormat']"
													},
													"sink": {
														"name": "EDocExportFormat",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['EDocStatus']"
													},
													"sink": {
														"name": "EDocStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['EDocErrorCode']"
													},
													"sink": {
														"name": "EDocErrorCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['EDocErrorMessage']"
													},
													"sink": {
														"name": "EDocErrorMessage",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DownPaymentStatus']"
													},
													"sink": {
														"name": "DownPaymentStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['GroupSeries']"
													},
													"sink": {
														"name": "GroupSeries",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['GroupNumber']"
													},
													"sink": {
														"name": "GroupNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['GroupHandWritten']"
													},
													"sink": {
														"name": "GroupHandWritten",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ReopenOriginalDocument']"
													},
													"sink": {
														"name": "ReopenOriginalDocument",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ReopenManuallyClosedOrCanceledDocument']"
													},
													"sink": {
														"name": "ReopenManuallyClosedOrCanceledDocument",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CreateOnlineQuotation']"
													},
													"sink": {
														"name": "CreateOnlineQuotation",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSEquipmentNumber']"
													},
													"sink": {
														"name": "POSEquipmentNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSManufacturerSerialNumber']"
													},
													"sink": {
														"name": "POSManufacturerSerialNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSCashierNumber']"
													},
													"sink": {
														"name": "POSCashierNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ApplyCurrentVATRatesForDownPaymentsToDraw']"
													},
													"sink": {
														"name": "ApplyCurrentVATRatesForDownPaymentsToDraw",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ClosingOption']"
													},
													"sink": {
														"name": "ClosingOption",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SpecifiedClosingDate']"
													},
													"sink": {
														"name": "SpecifiedClosingDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['OpenForLandedCosts']"
													},
													"sink": {
														"name": "OpenForLandedCosts",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AuthorizationStatus']"
													},
													"sink": {
														"name": "AuthorizationStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['TotalDiscountFC']"
													},
													"sink": {
														"name": "TotalDiscountFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['TotalDiscountSC']"
													},
													"sink": {
														"name": "TotalDiscountSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['RelevantToGTS']"
													},
													"sink": {
														"name": "RelevantToGTS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BPLName']"
													},
													"sink": {
														"name": "BPLName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VATRegNum']"
													},
													"sink": {
														"name": "VATRegNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AnnualInvoiceDeclarationReference']"
													},
													"sink": {
														"name": "AnnualInvoiceDeclarationReference",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Supplier']"
													},
													"sink": {
														"name": "Supplier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Releaser']"
													},
													"sink": {
														"name": "Releaser",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Receiver']"
													},
													"sink": {
														"name": "Receiver",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BlanketAgreementNumber']"
													},
													"sink": {
														"name": "BlanketAgreementNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IsAlteration']"
													},
													"sink": {
														"name": "IsAlteration",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CancelStatus']"
													},
													"sink": {
														"name": "CancelStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AssetValueDate']"
													},
													"sink": {
														"name": "AssetValueDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['InvoicePayment']"
													},
													"sink": {
														"name": "InvoicePayment",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DocumentDelivery']"
													},
													"sink": {
														"name": "DocumentDelivery",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AuthorizationCode']"
													},
													"sink": {
														"name": "AuthorizationCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['StartDeliveryDate']"
													},
													"sink": {
														"name": "StartDeliveryDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "[['StartDeliveryTime']"
													},
													"sink": {
														"name": "StartDeliveryTime",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['EndDeliveryDate']"
													},
													"sink": {
														"name": "EndDeliveryDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "[['EndDeliveryTime']"
													},
													"sink": {
														"name": "EndDeliveryTime",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['VehiclePlate']"
													},
													"sink": {
														"name": "VehiclePlate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ATDocumentType']"
													},
													"sink": {
														"name": "ATDocumentType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ElecCommStatus']"
													},
													"sink": {
														"name": "ElecCommStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ElecCommMessage']"
													},
													"sink": {
														"name": "ElecCommMessage",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ReuseDocumentNum']"
													},
													"sink": {
														"name": "ReuseDocumentNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ReuseNotaFiscalNum']"
													},
													"sink": {
														"name": "ReuseNotaFiscalNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PrintSEPADirect']"
													},
													"sink": {
														"name": "PrintSEPADirect",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FiscalDocNum']"
													},
													"sink": {
														"name": "FiscalDocNum",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "[['POSDailySummaryNo']"
													},
													"sink": {
														"name": "POSDailySummaryNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POSReceiptNo']"
													},
													"sink": {
														"name": "POSReceiptNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PointOfIssueCode']"
													},
													"sink": {
														"name": "PointOfIssueCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Letter']"
													},
													"sink": {
														"name": "Letter",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FolioNumberFrom']"
													},
													"sink": {
														"name": "FolioNumberFrom",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FolioNumberTo']"
													},
													"sink": {
														"name": "FolioNumberTo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['InterimType']"
													},
													"sink": {
														"name": "InterimType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RelatedType']"
													},
													"sink": {
														"name": "RelatedType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RelatedEntry']"
													},
													"sink": {
														"name": "RelatedEntry",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['SAPPassport']"
													},
													"sink": {
														"name": "SAPPassport",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DocumentTaxID']"
													},
													"sink": {
														"name": "DocumentTaxID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DateOfReportingControlStatementVAT']"
													},
													"sink": {
														"name": "DateOfReportingControlStatementVAT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ReportingSectionControlStatementVAT']"
													},
													"sink": {
														"name": "ReportingSectionControlStatementVAT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ExcludeFromTaxReportControlStatementVAT']"
													},
													"sink": {
														"name": "ExcludeFromTaxReportControlStatementVAT",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['POS_CashRegister']"
													},
													"sink": {
														"name": "POS_CashRegister",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UpdateTime']"
													},
													"sink": {
														"name": "UpdateTime",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CreateQRCodeFrom']"
													},
													"sink": {
														"name": "CreateQRCodeFrom",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PriceMode']"
													},
													"sink": {
														"name": "PriceMode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Revision']"
													},
													"sink": {
														"name": "Revision",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['OriginalRefNo']"
													},
													"sink": {
														"name": "OriginalRefNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['OriginalRefDate']"
													},
													"sink": {
														"name": "OriginalRefDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['GSTTransactionType']"
													},
													"sink": {
														"name": "GSTTransactionType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['OriginalCreditOrDebitNo']"
													},
													"sink": {
														"name": "OriginalCreditOrDebitNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['OriginalCreditOrDebitDate']"
													},
													"sink": {
														"name": "OriginalCreditOrDebitDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ECommerceOperator']"
													},
													"sink": {
														"name": "ECommerceOperator",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ECommerceGSTIN']"
													},
													"sink": {
														"name": "ECommerceGSTIN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ShipFrom']"
													},
													"sink": {
														"name": "ShipFrom",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CommissionTrade']"
													},
													"sink": {
														"name": "CommissionTrade",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CommissionTradeReturn']"
													},
													"sink": {
														"name": "CommissionTradeReturn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UseBillToAddrToDetermineTax']"
													},
													"sink": {
														"name": "UseBillToAddrToDetermineTax",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IssuingReason']"
													},
													"sink": {
														"name": "IssuingReason",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Cig']"
													},
													"sink": {
														"name": "Cig",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Cup']"
													},
													"sink": {
														"name": "Cup",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['EDocType']"
													},
													"sink": {
														"name": "EDocType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FCEAsPaymentMeans']"
													},
													"sink": {
														"name": "FCEAsPaymentMeans",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PaidToDate']"
													},
													"sink": {
														"name": "PaidToDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PaidToDateFC']"
													},
													"sink": {
														"name": "PaidToDateFC",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['PaidToDateSys']"
													},
													"sink": {
														"name": "PaidToDateSys",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BaseType']"
													},
													"sink": {
														"name": "BaseType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['BaseEntry']"
													},
													"sink": {
														"name": "BaseEntry",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FatherCard']"
													},
													"sink": {
														"name": "FatherCard",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FatherType']"
													},
													"sink": {
														"name": "FatherType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ShipState']"
													},
													"sink": {
														"name": "ShipState",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ShipPlace']"
													},
													"sink": {
														"name": "ShipPlace",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CustOffice']"
													},
													"sink": {
														"name": "CustOffice",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FCI']"
													},
													"sink": {
														"name": "FCI",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AddLegIn']"
													},
													"sink": {
														"name": "AddLegIn",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LegTextF']"
													},
													"sink": {
														"name": "LegTextF",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DANFELgTxt']"
													},
													"sink": {
														"name": "DANFELgTxt",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IndFinal']"
													},
													"sink": {
														"name": "IndFinal",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DataVersion']"
													},
													"sink": {
														"name": "DataVersion",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['LastPageFolioNumber']"
													},
													"sink": {
														"name": "LastPageFolioNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['U_AIG_KID']"
													},
													"sink": {
														"name": "U_AIG_KID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['U_Ordrenummer']"
													},
													"sink": {
														"name": "U_Ordrenummer",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['U_esurl']"
													},
													"sink": {
														"name": "U_esurl",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['U_sluttkunde']"
													},
													"sink": {
														"name": "U_sluttkunde",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['U_Levbet']"
													},
													"sink": {
														"name": "U_Levbet",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['U_Sted']"
													},
													"sink": {
														"name": "U_Sted",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['U_Opperk']"
													},
													"sink": {
														"name": "U_Opperk",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['U_DSS_SendStatus']"
													},
													"sink": {
														"name": "U_DSS_SendStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['U_DSS_EHFBuyersRef']"
													},
													"sink": {
														"name": "U_DSS_EHFBuyersRef",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['m_ds']"
													},
													"sink": {
														"name": "m_ds",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DocumentAdditionalExpenses'][0]['ExpenseCode']"
													},
													"sink": {
														"name": "AdditionalExpenses_ExpenseCode",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "[['DocumentAdditionalExpenses'][0]['LineTotal']"
													},
													"sink": {
														"name": "AdditionalExpenses_LineTotal",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['DocumentAdditionalExpenses'][0]['LineTotalFC']"
													},
													"sink": {
														"name": "AdditionalExpenses_LineTotalFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "[['DocumentAdditionalExpenses'][0]['LineTotalSys']"
													},
													"sink": {
														"name": "AdditionalExpenses_LineTotalSys",
														"type": "Double"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "ds_blob_bondura",
											"type": "DatasetReference",
											"parameters": {
												"Directory": {
													"value": "@pipeline().parameters.Stream",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sql_bo_sap_invoices",
											"type": "DatasetReference",
											"parameters": {
												"tableName": "stg_invoices_mast"
											}
										}
									]
								},
								{
									"name": "JsonToSqlDet",
									"type": "Copy",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['value'][0]['DocNum']"
													},
													"sink": {
														"name": "DocNum",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocDate']"
													},
													"sink": {
														"name": "DocDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocDueDate']"
													},
													"sink": {
														"name": "DocDueDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['CardCode']"
													},
													"sink": {
														"name": "CardCode",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['CardName']"
													},
													"sink": {
														"name": "CardName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['LineNum']"
													},
													"sink": {
														"name": "LineNum",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ItemCode']"
													},
													"sink": {
														"name": "ItemCode",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ItemDescription']"
													},
													"sink": {
														"name": "ItemDescription",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Quantity']"
													},
													"sink": {
														"name": "Quantity",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ShipDate']"
													},
													"sink": {
														"name": "ShipDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Price']"
													},
													"sink": {
														"name": "Price",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['PriceAfterVAT']"
													},
													"sink": {
														"name": "PriceAfterVAT",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Currency']"
													},
													"sink": {
														"name": "Currency",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Rate']"
													},
													"sink": {
														"name": "Rate",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['DiscountPercent']"
													},
													"sink": {
														"name": "DiscountPercent",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['VendorNum']"
													},
													"sink": {
														"name": "VendorNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['SerialNum']"
													},
													"sink": {
														"name": "SerialNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['WarehouseCode']"
													},
													"sink": {
														"name": "WarehouseCode",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['SalesPersonCode']"
													},
													"sink": {
														"name": "SalesPersonCode",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CommisionPercent']"
													},
													"sink": {
														"name": "CommisionPercent",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TreeType']"
													},
													"sink": {
														"name": "TreeType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['AccountCode']"
													},
													"sink": {
														"name": "AccountCode",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['UseBaseUnits']"
													},
													"sink": {
														"name": "UseBaseUnits",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['SupplierCatNum']"
													},
													"sink": {
														"name": "SupplierCatNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CostingCode']"
													},
													"sink": {
														"name": "CostingCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ProjectCode']"
													},
													"sink": {
														"name": "ProjectCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['BarCode']"
													},
													"sink": {
														"name": "BarCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['VatGroup']"
													},
													"sink": {
														"name": "VatGroup",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Height1']"
													},
													"sink": {
														"name": "Height1",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Hight1Unit']"
													},
													"sink": {
														"name": "Hight1Unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Height2']"
													},
													"sink": {
														"name": "Height2",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Height2Unit']"
													},
													"sink": {
														"name": "Height2Unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Lengh1']"
													},
													"sink": {
														"name": "Lengh1",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Lengh1Unit']"
													},
													"sink": {
														"name": "Lengh1Unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Lengh2']"
													},
													"sink": {
														"name": "Lengh2",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Lengh2Unit']"
													},
													"sink": {
														"name": "Lengh2Unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Weight1']"
													},
													"sink": {
														"name": "Weight1",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Weight1Unit']"
													},
													"sink": {
														"name": "Weight1Unit",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Weight2']"
													},
													"sink": {
														"name": "Weight2",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Weight2Unit']"
													},
													"sink": {
														"name": "Weight2Unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Factor1']"
													},
													"sink": {
														"name": "Factor1",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Factor2']"
													},
													"sink": {
														"name": "Factor2",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Factor3']"
													},
													"sink": {
														"name": "Factor3",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Factor4']"
													},
													"sink": {
														"name": "Factor4",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['BaseType']"
													},
													"sink": {
														"name": "BaseType",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['BaseEntry']"
													},
													"sink": {
														"name": "BaseEntry",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['BaseLine']"
													},
													"sink": {
														"name": "BaseLine",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Volume']"
													},
													"sink": {
														"name": "Volume",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['VolumeUnit']"
													},
													"sink": {
														"name": "VolumeUnit",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Width1']"
													},
													"sink": {
														"name": "Width1",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Width1Unit']"
													},
													"sink": {
														"name": "Width1Unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Width2']"
													},
													"sink": {
														"name": "Width2",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Width2Unit']"
													},
													"sink": {
														"name": "Width2Unit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Address']"
													},
													"sink": {
														"name": "Address",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TaxCode']"
													},
													"sink": {
														"name": "TaxCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TaxType']"
													},
													"sink": {
														"name": "TaxType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TaxLiable']"
													},
													"sink": {
														"name": "TaxLiable",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['PickStatus']"
													},
													"sink": {
														"name": "PickStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['PickQuantity']"
													},
													"sink": {
														"name": "PickQuantity",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['PickListIdNumber']"
													},
													"sink": {
														"name": "PickListIdNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['OriginalItem']"
													},
													"sink": {
														"name": "OriginalItem",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['BackOrder']"
													},
													"sink": {
														"name": "BackOrder",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['FreeText']"
													},
													"sink": {
														"name": "FreeText",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ShippingMethod']"
													},
													"sink": {
														"name": "ShippingMethod",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['POTargetNum']"
													},
													"sink": {
														"name": "POTargetNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['POTargetEntry']"
													},
													"sink": {
														"name": "POTargetEntry",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['POTargetRowNum']"
													},
													"sink": {
														"name": "POTargetRowNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CorrectionInvoiceItem']"
													},
													"sink": {
														"name": "CorrectionInvoiceItem",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CorrInvAmountToStock']"
													},
													"sink": {
														"name": "CorrInvAmountToStock",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CorrInvAmountToDiffAcct']"
													},
													"sink": {
														"name": "CorrInvAmountToDiffAcct",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['AppliedTax']"
													},
													"sink": {
														"name": "AppliedTax",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['AppliedTaxFC']"
													},
													"sink": {
														"name": "AppliedTaxFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['AppliedTaxSC']"
													},
													"sink": {
														"name": "AppliedTaxSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['WTLiable']"
													},
													"sink": {
														"name": "WTLiable",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['DeferredTax']"
													},
													"sink": {
														"name": "DeferredTax",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['EqualizationTaxPercent']"
													},
													"sink": {
														"name": "EqualizationTaxPercent",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TotalEqualizationTax']"
													},
													"sink": {
														"name": "TotalEqualizationTax",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TotalEqualizationTaxFC']"
													},
													"sink": {
														"name": "TotalEqualizationTaxFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TotalEqualizationTaxSC']"
													},
													"sink": {
														"name": "TotalEqualizationTaxSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['NetTaxAmount']"
													},
													"sink": {
														"name": "NetTaxAmount",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['NetTaxAmountFC']"
													},
													"sink": {
														"name": "NetTaxAmountFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['NetTaxAmountSC']"
													},
													"sink": {
														"name": "NetTaxAmountSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['MeasureUnit']"
													},
													"sink": {
														"name": "MeasureUnit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['UnitsOfMeasurment']"
													},
													"sink": {
														"name": "UnitsOfMeasurment",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['LineTotal']"
													},
													"sink": {
														"name": "LineTotal",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TaxPercentagePerRow']"
													},
													"sink": {
														"name": "TaxPercentagePerRow",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TaxTotal']"
													},
													"sink": {
														"name": "TaxTotal",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ConsumerSalesForecast']"
													},
													"sink": {
														"name": "ConsumerSalesForecast",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ExciseAmount']"
													},
													"sink": {
														"name": "ExciseAmount",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TaxPerUnit']"
													},
													"sink": {
														"name": "TaxPerUnit",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TotalInclTax']"
													},
													"sink": {
														"name": "TotalInclTax",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CountryOrg']"
													},
													"sink": {
														"name": "CountryOrg",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['SWW']"
													},
													"sink": {
														"name": "SWW",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TransactionType']"
													},
													"sink": {
														"name": "TransactionType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['DistributeExpense']"
													},
													"sink": {
														"name": "DistributeExpense",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['RowTotalFC']"
													},
													"sink": {
														"name": "RowTotalFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['RowTotalSC']"
													},
													"sink": {
														"name": "RowTotalSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['LastBuyInmPrice']"
													},
													"sink": {
														"name": "LastBuyInmPrice",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['LastBuyDistributeSumFc']"
													},
													"sink": {
														"name": "LastBuyDistributeSumFc",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['LastBuyDistributeSumSc']"
													},
													"sink": {
														"name": "LastBuyDistributeSumSc",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['LastBuyDistributeSum']"
													},
													"sink": {
														"name": "LastBuyDistributeSum",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['StockDistributesumForeign']"
													},
													"sink": {
														"name": "StockDistributesumForeign",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['StockDistributesumSystem']"
													},
													"sink": {
														"name": "StockDistributesumSystem",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['StockDistributesum']"
													},
													"sink": {
														"name": "StockDistributesum",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['StockInmPrice']"
													},
													"sink": {
														"name": "StockInmPrice",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['PickStatusEx']"
													},
													"sink": {
														"name": "PickStatusEx",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TaxBeforeDPM']"
													},
													"sink": {
														"name": "TaxBeforeDPM",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TaxBeforeDPMFC']"
													},
													"sink": {
														"name": "TaxBeforeDPMFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TaxBeforeDPMSC']"
													},
													"sink": {
														"name": "TaxBeforeDPMSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CFOPCode']"
													},
													"sink": {
														"name": "CFOPCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CSTCode']"
													},
													"sink": {
														"name": "CSTCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Usage']"
													},
													"sink": {
														"name": "Usage",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TaxOnly']"
													},
													"sink": {
														"name": "TaxOnly",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['VisualOrder']"
													},
													"sink": {
														"name": "VisualOrder",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['BaseOpenQuantity']"
													},
													"sink": {
														"name": "BaseOpenQuantity",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['UnitPrice']"
													},
													"sink": {
														"name": "UnitPrice",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['LineStatus']"
													},
													"sink": {
														"name": "LineStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['PackageQuantity']"
													},
													"sink": {
														"name": "PackageQuantity",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Text']"
													},
													"sink": {
														"name": "Text",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['LineType']"
													},
													"sink": {
														"name": "LineType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['COGSCostingCode']"
													},
													"sink": {
														"name": "COGSCostingCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['COGSAccountCode']"
													},
													"sink": {
														"name": "COGSAccountCode",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ChangeAssemlyBoMWarehouse']"
													},
													"sink": {
														"name": "ChangeAssemlyBoMWarehouse",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['GrossBuyPrice']"
													},
													"sink": {
														"name": "GrossBuyPrice",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['GrossBase']"
													},
													"sink": {
														"name": "GrossBase",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['GrossProfitTotalBasePrice']"
													},
													"sink": {
														"name": "GrossProfitTotalBasePrice",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CostingCode2']"
													},
													"sink": {
														"name": "CostingCode2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CostingCode3']"
													},
													"sink": {
														"name": "CostingCode3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CostingCode4']"
													},
													"sink": {
														"name": "CostingCode4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CostingCode5']"
													},
													"sink": {
														"name": "CostingCode5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ItemDetails']"
													},
													"sink": {
														"name": "ItemDetails",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['LocationCode']"
													},
													"sink": {
														"name": "LocationCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ActualDeliveryDate']"
													},
													"sink": {
														"name": "ActualDeliveryDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['RemainingOpenQuantity']"
													},
													"sink": {
														"name": "RemainingOpenQuantity",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['OpenAmount']"
													},
													"sink": {
														"name": "OpenAmount",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['OpenAmountFC']"
													},
													"sink": {
														"name": "OpenAmountFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['OpenAmountSC']"
													},
													"sink": {
														"name": "OpenAmountSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ExLineNo']"
													},
													"sink": {
														"name": "ExLineNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['RequiredDate']"
													},
													"sink": {
														"name": "RequiredDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['RequiredQuantity']"
													},
													"sink": {
														"name": "RequiredQuantity",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['COGSCostingCode2']"
													},
													"sink": {
														"name": "COGSCostingCode2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['COGSCostingCode3']"
													},
													"sink": {
														"name": "COGSCostingCode3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['COGSCostingCode4']"
													},
													"sink": {
														"name": "COGSCostingCode4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['COGSCostingCode5']"
													},
													"sink": {
														"name": "COGSCostingCode5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CSTforIPI']"
													},
													"sink": {
														"name": "CSTforIPI",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CSTforPIS']"
													},
													"sink": {
														"name": "CSTforPIS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CSTforCOFINS']"
													},
													"sink": {
														"name": "CSTforCOFINS",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CreditOriginCode']"
													},
													"sink": {
														"name": "CreditOriginCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['WithoutInventoryMovement']"
													},
													"sink": {
														"name": "WithoutInventoryMovement",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['AgreementNo']"
													},
													"sink": {
														"name": "AgreementNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['AgreementRowNumber']"
													},
													"sink": {
														"name": "AgreementRowNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ActualBaseEntry']"
													},
													"sink": {
														"name": "ActualBaseEntry",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ActualBaseLine']"
													},
													"sink": {
														"name": "ActualBaseLine",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['DocEntry']"
													},
													"sink": {
														"name": "DocEntry",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Surpluses']"
													},
													"sink": {
														"name": "Surpluses",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['DefectAndBreakup']"
													},
													"sink": {
														"name": "DefectAndBreakup",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Shortages']"
													},
													"sink": {
														"name": "Shortages",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ConsiderQuantity']"
													},
													"sink": {
														"name": "ConsiderQuantity",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['PartialRetirement']"
													},
													"sink": {
														"name": "PartialRetirement",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['RetirementQuantity']"
													},
													"sink": {
														"name": "RetirementQuantity",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['RetirementAPC']"
													},
													"sink": {
														"name": "RetirementAPC",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ThirdParty']"
													},
													"sink": {
														"name": "ThirdParty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['PoNum']"
													},
													"sink": {
														"name": "PoNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['PoItmNum']"
													},
													"sink": {
														"name": "PoItmNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ExpenseType']"
													},
													"sink": {
														"name": "ExpenseType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ReceiptNumber']"
													},
													"sink": {
														"name": "ReceiptNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ExpenseOperationType']"
													},
													"sink": {
														"name": "ExpenseOperationType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['FederalTaxID']"
													},
													"sink": {
														"name": "FederalTaxID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['GrossProfit']"
													},
													"sink": {
														"name": "GrossProfit",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['GrossProfitFC']"
													},
													"sink": {
														"name": "GrossProfitFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['GrossProfitSC']"
													},
													"sink": {
														"name": "GrossProfitSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['PriceSource']"
													},
													"sink": {
														"name": "PriceSource",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['StgSeqNum']"
													},
													"sink": {
														"name": "StgSeqNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['StgEntry']"
													},
													"sink": {
														"name": "StgEntry",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['StgDesc']"
													},
													"sink": {
														"name": "StgDesc",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['UoMEntry']"
													},
													"sink": {
														"name": "UoMEntry",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['UoMCode']"
													},
													"sink": {
														"name": "UoMCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['InventoryQuantity']"
													},
													"sink": {
														"name": "InventoryQuantity",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['RemainingOpenInventoryQuantity']"
													},
													"sink": {
														"name": "RemainingOpenInventoryQuantity",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ParentLineNum']"
													},
													"sink": {
														"name": "ParentLineNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['Incoterms']"
													},
													"sink": {
														"name": "Incoterms",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['TransportMode']"
													},
													"sink": {
														"name": "TransportMode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['NatureOfTransaction']"
													},
													"sink": {
														"name": "NatureOfTransaction",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['DestinationCountryForImport']"
													},
													"sink": {
														"name": "DestinationCountryForImport",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['DestinationRegionForImport']"
													},
													"sink": {
														"name": "DestinationRegionForImport",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['OriginCountryForExport']"
													},
													"sink": {
														"name": "OriginCountryForExport",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['OriginRegionForExport']"
													},
													"sink": {
														"name": "OriginRegionForExport",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ItemType']"
													},
													"sink": {
														"name": "ItemType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ChangeInventoryQuantityIndependently']"
													},
													"sink": {
														"name": "ChangeInventoryQuantityIndependently",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['FreeOfChargeBP']"
													},
													"sink": {
														"name": "FreeOfChargeBP",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['SACEntry']"
													},
													"sink": {
														"name": "SACEntry",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['HSNEntry']"
													},
													"sink": {
														"name": "HSNEntry",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['GrossPrice']"
													},
													"sink": {
														"name": "GrossPrice",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['GrossTotal']"
													},
													"sink": {
														"name": "GrossTotal",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['GrossTotalFC']"
													},
													"sink": {
														"name": "GrossTotalFC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['GrossTotalSC']"
													},
													"sink": {
														"name": "GrossTotalSC",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['NCMCode']"
													},
													"sink": {
														"name": "NCMCode",
														"type": "Int16"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['NVECode']"
													},
													"sink": {
														"name": "NVECode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['IndEscala']"
													},
													"sink": {
														"name": "IndEscala",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CtrSealQty']"
													},
													"sink": {
														"name": "CtrSealQty",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CNJPMan']"
													},
													"sink": {
														"name": "CNJPMan",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CESTCode']"
													},
													"sink": {
														"name": "CESTCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['UFFiscalBenefitCode']"
													},
													"sink": {
														"name": "UFFiscalBenefitCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ReverseCharge']"
													},
													"sink": {
														"name": "ReverseCharge",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ShipToCode']"
													},
													"sink": {
														"name": "ShipToCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ShipToDescription']"
													},
													"sink": {
														"name": "ShipToDescription",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ExternalCalcTaxRate']"
													},
													"sink": {
														"name": "ExternalCalcTaxRate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ExternalCalcTaxAmount']"
													},
													"sink": {
														"name": "ExternalCalcTaxAmount",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ExternalCalcTaxAmountFC']"
													},
													"sink": {
														"name": "ExternalCalcTaxAmountFC",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['ExternalCalcTaxAmountSC']"
													},
													"sink": {
														"name": "ExternalCalcTaxAmountSC",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['StandardItemIdentification']"
													},
													"sink": {
														"name": "StandardItemIdentification",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CommodityClassification']"
													},
													"sink": {
														"name": "CommodityClassification",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['UnencumberedReason']"
													},
													"sink": {
														"name": "UnencumberedReason",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['CUSplit']"
													},
													"sink": {
														"name": "CUSplit",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_Installasjon']"
													},
													"sink": {
														"name": "U_Installasjon",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_ParentItem']"
													},
													"sink": {
														"name": "U_ParentItem",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_Codebars']"
													},
													"sink": {
														"name": "U_Codebars",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_PlannedQty']"
													},
													"sink": {
														"name": "U_PlannedQty",
														"type": "Double"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_AIG_IN']"
													},
													"sink": {
														"name": "U_AIG_IN",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_AIG_IA']"
													},
													"sink": {
														"name": "U_AIG_IA",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_AIG_PD']"
													},
													"sink": {
														"name": "U_AIG_PD",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_AIG_PDate']"
													},
													"sink": {
														"name": "U_AIG_PDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_AIG_ID']"
													},
													"sink": {
														"name": "U_AIG_ID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_PItemCode']"
													},
													"sink": {
														"name": "U_PItemCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_AIG_IR']"
													},
													"sink": {
														"name": "U_AIG_IR",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_AIG_DDate']"
													},
													"sink": {
														"name": "U_AIG_DDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_U_AIG_DDate']"
													},
													"sink": {
														"name": "U_U_AIG_DDate",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['U_DSS_Charge']"
													},
													"sink": {
														"name": "U_DSS_Charge",
														"type": "String"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "ds_blob_bondura",
											"type": "DatasetReference",
											"parameters": {
												"Directory": {
													"value": "@pipeline().parameters.Stream",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "sql_bo_sap_invoices",
											"type": "DatasetReference",
											"parameters": {
												"tableName": "stg_invoices_lines_test"
											}
										}
									]
								},
								{
									"name": "JsonParserSql",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_jsonParse_Sql",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"ReadJsonFile": {},
												"SinkSQL": {
													"tableName": "stg_invoices_det"
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Stream": {
						"type": "string",
						"defaultValue": "Invoices_new"
					},
					"WildCard": {
						"type": "string",
						"defaultValue": "*"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_bondura')]",
				"[concat(variables('factoryId'), '/datasets/sql_bo_sap_invoices')]",
				"[concat(variables('factoryId'), '/dataflows/df_jsonParse_Sql')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_bo_sap_invoices_docLines')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AllPagesFetched",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(bool(variables('repeat')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ApiCallPagination",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "ETLDocLines",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@concat(variables('baseUrl'),variables('nextLink'),'&$select=DocNum')",
											"type": "Expression"
										},
										"authentication": {
											"type": "Basic",
											"username": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}",
											"password": {
												"type": "AzureKeyVaultSecret",
												"store": {
													"referenceName": "AzureKeyVault_bo",
													"type": "LinkedServiceReference"
												},
												"secretName": "Bondura"
											}
										}
									}
								},
								{
									"name": "GetNextLink",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ApiCallPagination",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "nextLink",
										"value": {
											"value": "@if(contains(activity('ApiCallPagination').output, '@odata.nextLink'), replace(activity('ApiCallPagination').output['@odata.nextLink'],'&$select=DocNum' , '' ), 'false')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ETLDocLines",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "ETLInvoices",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_bo_invoices_doclines",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"apiOrders": {
													"resPath": "Invoices?$skip=2622"
												},
												"SinkToSQLTable": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 16,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								},
								{
									"name": "ETLInvoices",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_bo_invoices",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"ApiCall": {},
												"SinkToSQLTable": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 16,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								},
								{
									"name": "ErrorStop",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "GetNextLink",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "ApiCallPagination",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "ETLDocLines",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "ETLInvoices",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "CheckRepeat",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "repeat",
										"value": {
											"value": "@bool(0)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "CheckRepeat",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "GetNextLink",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "repeat",
										"value": {
											"value": "@if(not(equals(variables('nextLink'), 'false')), true, false)",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"baseUrl": {
						"type": "String",
						"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/"
					},
					"nextLink": {
						"type": "String",
						"defaultValue": "Invoices?$skip=0"
					},
					"repeat": {
						"type": "Boolean",
						"defaultValue": true
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_bo_invoices_doclines')]",
				"[concat(variables('factoryId'), '/dataflows/df_bo_invoices')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_bo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_bo_sap_invoices_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AllPagesFetched",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(bool(variables('repeat')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ApiCallPagination",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "ETLInvoices",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@concat(variables('baseUrl'),variables('nextLink'),'&$select=DocNum')",
											"type": "Expression"
										},
										"authentication": {
											"type": "Basic",
											"username": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}",
											"password": {
												"type": "AzureKeyVaultSecret",
												"store": {
													"referenceName": "AzureKeyVault_bo",
													"type": "LinkedServiceReference"
												},
												"secretName": "Bondura"
											}
										}
									}
								},
								{
									"name": "GetNextLink",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ApiCallPagination",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "nextLink",
										"value": {
											"value": "@if(contains(activity('ApiCallPagination').output, '@odata.nextLink'), replace(activity('ApiCallPagination').output['@odata.nextLink'],'&$select=DocNum' , '' ), 'false')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ETLInvoices",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_bo_invoices",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"ApiCall": {
													"resPath": "Invoices?$skip=2622"
												},
												"SinkToSQLTable": {
													"tableName": "sample_invoices_master"
												}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								},
								{
									"name": "ErrorStop",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "GetNextLink",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "ApiCallPagination",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "ETLInvoices",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "CheckRepeat",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "repeat",
										"value": {
											"value": "@bool(0)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "CheckRepeat",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "GetNextLink",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "repeat",
										"value": {
											"value": "@if(not(equals(variables('nextLink'), 'false')), true, false)",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"baseUrl": {
						"type": "String",
						"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/"
					},
					"nextLink": {
						"type": "String",
						"defaultValue": "Invoices?$filter=DocDate%20gt%20%272024-01-01%27&$skip=0"
					},
					"repeat": {
						"type": "Boolean",
						"defaultValue": true
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_bo_invoices')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_bo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_bo_sap_orders_docLines')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AllPagesFetched",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('nextLink'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ApiCallPagination",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "ETLDocLines",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@concat(variables('baseUrl'),variables('nextLink'),'&$select=DocNum')",
											"type": "Expression"
										},
										"authentication": {
											"type": "Basic",
											"username": "{\"CompanyDB\":\"BONDURA\",\"UserName\":\"CLOUD\\\\ui.report\"}",
											"password": {
												"type": "AzureKeyVaultSecret",
												"store": {
													"referenceName": "AzureKeyVault_bo",
													"type": "LinkedServiceReference"
												},
												"secretName": "Bondura"
											}
										}
									}
								},
								{
									"name": "GetNextLink",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "ApiCallPagination",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "nextLink",
										"value": {
											"value": "@replace(activity('ApiCallPagination').output['@odata.nextLink'],'&$select=DocNum' , '' )",
											"type": "Expression"
										}
									}
								},
								{
									"name": "ETLDocLines",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "ETLOrders",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_bo_orders_doclines",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"apiOrders": {
													"QueryParam": {
														"value": "@variables('nextLink')",
														"type": "Expression"
													}
												},
												"SinkToSQLTable": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 16,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								},
								{
									"name": "ETLOrders",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "df_bo_orders",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"ApiCall": {
													"QueryParam": {
														"value": "@variables('nextLink')",
														"type": "Expression"
													}
												},
												"SinkToSQLTable": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 16,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								},
								{
									"name": "setEmpty",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "GetNextLink",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "ApiCallPagination",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "ETLDocLines",
											"dependencyConditions": [
												"Failed"
											]
										},
										{
											"activity": "ETLOrders",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "nextLink",
										"value": {
											"value": "''",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"baseUrl": {
						"type": "String",
						"defaultValue": "https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/"
					},
					"nextLink": {
						"type": "String",
						"defaultValue": "Orders?$skip=0"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_bo_orders_doclines')]",
				"[concat(variables('factoryId'), '/dataflows/df_bo_orders')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_bo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_salePersons_api')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ApiCall",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"QueryParameters.{skip}": "RANGE:0:35:1"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['value'][0]['SalesEmployeeCode']"
										},
										"sink": {
											"name": "SalesEmployeeCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['SalesEmployeeName']"
										},
										"sink": {
											"name": "SalesEmployeeName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Remarks']"
										},
										"sink": {
											"name": "Remarks",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CommissionForSalesEmployee']"
										},
										"sink": {
											"name": "CommissionForSalesEmployee",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CommissionGroup']"
										},
										"sink": {
											"name": "CommissionGroup",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Locked']"
										},
										"sink": {
											"name": "Locked",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['EmployeeID']"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Active']"
										},
										"sink": {
											"name": "Active",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Telephone']"
										},
										"sink": {
											"name": "Telephone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Mobile']"
										},
										"sink": {
											"name": "Mobile",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Fax']"
										},
										"sink": {
											"name": "Fax",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Email']"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "ds_bo_sap_salepersons",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sql_bo_sap_salespersons",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bo_sap_salepersons')]",
				"[concat(variables('factoryId'), '/datasets/sql_bo_sap_salespersons')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_salesPersons_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cpyJsonSql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['value'][0]['SalesEmployeeCode']"
										},
										"sink": {
											"name": "SalesEmployeeCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['SalesEmployeeName']"
										},
										"sink": {
											"name": "SalesEmployeeName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Remarks']"
										},
										"sink": {
											"name": "Remarks",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CommissionForSalesEmployee']"
										},
										"sink": {
											"name": "CommissionForSalesEmployee",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CommissionGroup']"
										},
										"sink": {
											"name": "CommissionGroup",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Locked']"
										},
										"sink": {
											"name": "Locked",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['EmployeeID']"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Active']"
										},
										"sink": {
											"name": "Active",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Telephone']"
										},
										"sink": {
											"name": "Telephone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Mobile']"
										},
										"sink": {
											"name": "Mobile",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Fax']"
										},
										"sink": {
											"name": "Fax",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Email']"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_blob_sap",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sql_bo_sap_salespersons",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_sap')]",
				"[concat(variables('factoryId'), '/datasets/sql_bo_sap_salespersons')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pip_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfParser",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_jsonParse_Sql",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadJsonFile": {},
									"SinkSQL": {
										"tableName": "stg_invoices_det"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$['@odata.nextLink']"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['value'][0]['SalesEmployeeCode']"
										},
										"sink": {
											"name": "SalesEmployeeCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['SalesEmployeeName']"
										},
										"sink": {
											"name": "SalesEmployeeName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Remarks']"
										},
										"sink": {
											"name": "Remarks",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CommissionForSalesEmployee']"
										},
										"sink": {
											"name": "CommissionForSalesEmployee",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CommissionGroup']"
										},
										"sink": {
											"name": "CommissionGroup",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Locked']"
										},
										"sink": {
											"name": "Locked",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['EmployeeID']"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Active']"
										},
										"sink": {
											"name": "Active",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Telephone']"
										},
										"sink": {
											"name": "Telephone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Mobile']"
										},
										"sink": {
											"name": "Mobile",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Fax']"
										},
										"sink": {
											"name": "Fax",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Email']"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ds_bo_sap_salepersons",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_blob_bondura",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "SalesPersons",
									"FileName": {
										"value": "@concat('salesPersons_', utcnow(), '.json')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_jsonParse_Sql')]",
				"[concat(variables('factoryId'), '/datasets/ds_bo_sap_salepersons')]",
				"[concat(variables('factoryId'), '/datasets/ds_blob_bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Json_Sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Json_SQL_Invoices",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Json_Pars",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SapAPI": {},
									"AzureSQL": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-25T11:07:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Json_Pars')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_bo_budgets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "api_call_all",
						"description": "all records in AccountCode=3000",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "m_ds",
										"value": "Bondura"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "linkedService_bo_budgets",
										"type": "LinkedServiceReference"
									},
									"path": "bondura"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['StartofFiscalYear']"
										},
										"sink": {
											"name": "StartofFiscalYear",
											"type": "Date"
										}
									},
									{
										"source": {
											"path": "[['TotalAnnualBudgetCreditSys']"
										},
										"sink": {
											"name": "TotalAnnualBudgetCreditSys",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['TotalAnnualBudgetCreditLoc']"
										},
										"sink": {
											"name": "TotalAnnualBudgetCreditLoc",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['BudgetScenario']"
										},
										"sink": {
											"name": "BudgetScenario",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "$['m_ds']"
										},
										"sink": {
											"name": "m_ds",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource_bo_budgets",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable_bo_budgets",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource_bo_budgets')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_bo_budgets')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService_bo_budgets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_bo_budgets_lines')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ReadBudgetLine",
						"description": "Create Dim for Budgets",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_budget_lines",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadAPI": {},
									"SqlDimTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_budget_lines')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_bo_businessPartners')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "api_call",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "m_ds",
										"value": "Bondura"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"QueryParameters.{skip}": "RANGE:0:1960:1"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "linkedService_bo_inc_log_blob",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['value'][0]['CardCode']"
										},
										"sink": {
											"name": "CardCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CardName']"
										},
										"sink": {
											"name": "CardName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CardType']"
										},
										"sink": {
											"name": "CardType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Currency']"
										},
										"sink": {
											"name": "Currency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['City']"
										},
										"sink": {
											"name": "City",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Country']"
										},
										"sink": {
											"name": "Country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['PeymentMethodCode']"
										},
										"sink": {
											"name": "PeymentMethodCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['ContactEmployees'][0]['CardCode']"
										},
										"sink": {
											"name": "ContactEmployees_CardCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['ContactEmployees'][0]['Name']"
										},
										"sink": {
											"name": "ContactEmployees_Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['m_ds']"
										},
										"sink": {
											"name": "m_ds",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource_bo_businessPartners",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable_bo_businessPartners",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource_bo_businessPartners')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_bo_businessPartners')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService_bo_inc_log_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_bse_businessPartners')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "api_call",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "m_ds",
										"value": "Bondura_SE"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"QueryParameters.{skip}": "RANGE:0:85:1"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "linkedService_bo_inc_log_blob",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['value'][0]['CardCode']"
										},
										"sink": {
											"name": "CardCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CardName']"
										},
										"sink": {
											"name": "CardName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CardType']"
										},
										"sink": {
											"name": "CardType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Currency']"
										},
										"sink": {
											"name": "Currency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['City']"
										},
										"sink": {
											"name": "City",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Country']"
										},
										"sink": {
											"name": "Country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['PeymentMethodCode']"
										},
										"sink": {
											"name": "PeymentMethodCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['ContactEmployees'][0]['CardCode']"
										},
										"sink": {
											"name": "ContactEmployees_CardCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['ContactEmployees'][0]['Name']"
										},
										"sink": {
											"name": "ContactEmployees_Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['m_ds']"
										},
										"sink": {
											"name": "m_ds",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource_bse_businessPartners",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable_bo_businessPartners",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource_bse_businessPartners')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_bo_businessPartners')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService_bo_inc_log_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_copy_blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0, 1)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "get_all_data_api",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"QueryParameters.{skip}": "RANGE:0:8676:20"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestResource_invoices",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Json_output",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-25T11:07:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource_invoices')]",
				"[concat(variables('factoryId'), '/datasets/Json_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_invoices_bo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "call_api_all_records",
						"description": "Call SAP API and get all records. looping for each row with Skip param",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "m_ds",
										"value": "Bondura"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"QueryParameters.{skip}": "RANGE:0:8684:1"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['value'][0]['DocEntry']"
										},
										"sink": {
											"name": "DocEntry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocNum']"
										},
										"sink": {
											"name": "DocNum",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocDate']"
										},
										"sink": {
											"name": "DocDate",
											"type": "Date"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocDueDate']"
										},
										"sink": {
											"name": "DocDueDate",
											"type": "Date"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CardCode']"
										},
										"sink": {
											"name": "CardCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CardName']"
										},
										"sink": {
											"name": "CardName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['NumAtCard']"
										},
										"sink": {
											"name": "NumAtCard",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocTotal']"
										},
										"sink": {
											"name": "DocTotal",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocCurrency']"
										},
										"sink": {
											"name": "DocCurrency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['SalesPersonCode']"
										},
										"sink": {
											"name": "SalesPersonCode",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['FederalTaxID']"
										},
										"sink": {
											"name": "FederalTaxID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['VatSum']"
										},
										"sink": {
											"name": "VatSum",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Address2']"
										},
										"sink": {
											"name": "Address2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocumentAdditionalExpenses'][0]['LineTotal']"
										},
										"sink": {
											"name": "LineTotal",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['m_ds']"
										},
										"sink": {
											"name": "m_ds",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource_invoices",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable_invoives_all_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource_invoices')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_invoives_all_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_invoices_bo_inc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_max_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT MAX(DocDate) AS date FROM [dbo].[Invoices_Dump]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sql_invoices_dump",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_inc_api",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "get_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "m_ds",
										"value": "Bondura"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "linkedService_bo_inc_log_blob",
										"type": "LinkedServiceReference"
									},
									"path": "bondura"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['DocEntry']"
										},
										"sink": {
											"name": "DocEntry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DocNum']"
										},
										"sink": {
											"name": "DocNum",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['DocDate']"
										},
										"sink": {
											"name": "DocDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['DocDueDate']"
										},
										"sink": {
											"name": "DocDueDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['CardCode']"
										},
										"sink": {
											"name": "CardCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['CardName']"
										},
										"sink": {
											"name": "CardName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['NumAtCard']"
										},
										"sink": {
											"name": "NumAtCard",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DocTotal']"
										},
										"sink": {
											"name": "DocTotal",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['DocCurrency']"
										},
										"sink": {
											"name": "DocCurrency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['SalesPersonCode']"
										},
										"sink": {
											"name": "SalesPersonCode",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "[['FederalTaxID']"
										},
										"sink": {
											"name": "FederalTaxID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VatSum']"
										},
										"sink": {
											"name": "VatSum",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['Address2']"
										},
										"sink": {
											"name": "Address2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DocumentAdditionalExpenses'][0]['LineTotal']"
										},
										"sink": {
											"name": "LineTotal",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['m_ds']"
										},
										"sink": {
											"name": "m_ds",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource_bo_invoices_inc",
								"type": "DatasetReference",
								"parameters": {
									"QueryParamInc": {
										"value": "?$filter=DocDate ge '@{activity('get_max_date').output.firstRow.date}'",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSql_invoices_update",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_invoices_dump')]",
				"[concat(variables('factoryId'), '/datasets/RestResource_bo_invoices_inc')]",
				"[concat(variables('factoryId'), '/datasets/AzureSql_invoices_update')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService_bo_inc_log_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_invoices_bse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "call_api_all_records",
						"description": "Call SAP API and get all records. looping for each row with Skip param",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "m_ds",
										"value": "Bondura_SE"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"QueryParameters.{skip}": "RANGE:0:101:1"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['value'][0]['DocEntry']"
										},
										"sink": {
											"name": "DocEntry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocNum']"
										},
										"sink": {
											"name": "DocNum",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocDate']"
										},
										"sink": {
											"name": "DocDate",
											"type": "Date"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocDueDate']"
										},
										"sink": {
											"name": "DocDueDate",
											"type": "Date"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CardCode']"
										},
										"sink": {
											"name": "CardCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CardName']"
										},
										"sink": {
											"name": "CardName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['NumAtCard']"
										},
										"sink": {
											"name": "NumAtCard",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocTotal']"
										},
										"sink": {
											"name": "DocTotal",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocCurrency']"
										},
										"sink": {
											"name": "DocCurrency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['SalesPersonCode']"
										},
										"sink": {
											"name": "SalesPersonCode",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['FederalTaxID']"
										},
										"sink": {
											"name": "FederalTaxID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['VatSum']"
										},
										"sink": {
											"name": "VatSum",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Address2']"
										},
										"sink": {
											"name": "Address2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocumentAdditionalExpenses'][0]['LineTotal']"
										},
										"sink": {
											"name": "LineTotal",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['m_ds']"
										},
										"sink": {
											"name": "m_ds",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource_invoices_se",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable_invoives_all_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource_invoices_se')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_invoives_all_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_invoices_dump')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0, 1)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data_api",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"QueryParameters.{skip}": "RANGE:0:8678:1"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['value'][0]['DocEntry']"
													},
													"sink": {
														"name": "DocEntry",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocNum']"
													},
													"sink": {
														"name": "DocNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocDate']"
													},
													"sink": {
														"name": "DocDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocDueDate']"
													},
													"sink": {
														"name": "DocDueDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['CardCode']"
													},
													"sink": {
														"name": "CardCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['CardName']"
													},
													"sink": {
														"name": "CardName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['NumAtCard']"
													},
													"sink": {
														"name": "NumAtCard",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocTotal']"
													},
													"sink": {
														"name": "DocTotal",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocCurrency']"
													},
													"sink": {
														"name": "DocCurrency",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['VatSum']"
													},
													"sink": {
														"name": "VatSum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentAdditionalExpenses'][0]['LineTotal']"
													},
													"sink": {
														"name": "LineTotal",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "RestResource_invoices",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable_orders_all_src",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-25T11:07:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource_invoices')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_orders_all_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_orders_bo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "call_api_all_records",
						"description": "Call SAP API and get all records. looping for each row with Skip param",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "m_ds",
										"value": "Bondura"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"QueryParameters.{skip}": "RANGE:0:8217:1"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['value'][0]['DocEntry']"
										},
										"sink": {
											"name": "DocEntry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocNum']"
										},
										"sink": {
											"name": "DocNum",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocDate']"
										},
										"sink": {
											"name": "DocDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocDueDate']"
										},
										"sink": {
											"name": "DocDueDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CardCode']"
										},
										"sink": {
											"name": "CardCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CardName']"
										},
										"sink": {
											"name": "CardName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['NumAtCard']"
										},
										"sink": {
											"name": "NumAtCard",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocTotal']"
										},
										"sink": {
											"name": "DocTotal",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocCurrency']"
										},
										"sink": {
											"name": "DocCurrency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['SalesPersonCode']"
										},
										"sink": {
											"name": "SalesPersonCode",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['FederalTaxID']"
										},
										"sink": {
											"name": "FederalTaxID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['VatSum']"
										},
										"sink": {
											"name": "VatSum",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Address2']"
										},
										"sink": {
											"name": "Address2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocumentAdditionalExpenses'][0]['LineTotal']"
										},
										"sink": {
											"name": "LineTotal",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['m_ds']"
										},
										"sink": {
											"name": "m_ds",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource_orders",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable_orders_all_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource_orders')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_orders_all_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_orders_bo_inc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_max_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT MAX(DocDate) AS date FROM [dbo].[Orders_Dump]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sql_orders_dump",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_inc_api",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "get_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "m_ds",
										"value": "Bondura"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "linkedService_bo_inc_log_blob",
										"type": "LinkedServiceReference"
									},
									"path": "bondura"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['DocEntry']"
										},
										"sink": {
											"name": "DocEntry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DocNum']"
										},
										"sink": {
											"name": "DocNum",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['DocDate']"
										},
										"sink": {
											"name": "DocDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['DocDueDate']"
										},
										"sink": {
											"name": "DocDueDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['CardCode']"
										},
										"sink": {
											"name": "CardCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['CardName']"
										},
										"sink": {
											"name": "CardName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['NumAtCard']"
										},
										"sink": {
											"name": "NumAtCard",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DocTotal']"
										},
										"sink": {
											"name": "DocTotal",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['DocCurrency']"
										},
										"sink": {
											"name": "DocCurrency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['SalesPersonCode']"
										},
										"sink": {
											"name": "SalesPersonCode",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "[['FederalTaxID']"
										},
										"sink": {
											"name": "FederalTaxID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['VatSum']"
										},
										"sink": {
											"name": "VatSum",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "[['Address2']"
										},
										"sink": {
											"name": "Address2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DocumentAdditionalExpenses'][0]['LineTotal']"
										},
										"sink": {
											"name": "LineTotal",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['m_ds']"
										},
										"sink": {
											"name": "m_ds",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource_orders_bo",
								"type": "DatasetReference",
								"parameters": {
									"QueryParamInc": {
										"value": "?$filter=DocDate ge '@{activity('get_max_date').output.firstRow.date}'",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable_orders_update",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_orders_dump')]",
				"[concat(variables('factoryId'), '/datasets/RestResource_orders_bo')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_orders_update')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService_bo_inc_log_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_orders_bse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "call_api_all_records",
						"description": "Call SAP API and get all records. looping for each row with Skip param",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "m_ds",
										"value": "Bondura_SE"
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"QueryParameters.{skip}": "RANGE:0:110:1"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['value'][0]['DocEntry']"
										},
										"sink": {
											"name": "DocEntry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocNum']"
										},
										"sink": {
											"name": "DocNum",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocDate']"
										},
										"sink": {
											"name": "DocDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocDueDate']"
										},
										"sink": {
											"name": "DocDueDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CardCode']"
										},
										"sink": {
											"name": "CardCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['CardName']"
										},
										"sink": {
											"name": "CardName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['NumAtCard']"
										},
										"sink": {
											"name": "NumAtCard",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocTotal']"
										},
										"sink": {
											"name": "DocTotal",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocCurrency']"
										},
										"sink": {
											"name": "DocCurrency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['SalesPersonCode']"
										},
										"sink": {
											"name": "SalesPersonCode",
											"type": "Int16"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['FederalTaxID']"
										},
										"sink": {
											"name": "FederalTaxID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['VatSum']"
										},
										"sink": {
											"name": "VatSum",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['Address2']"
										},
										"sink": {
											"name": "Address2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['value'][0]['DocumentAdditionalExpenses'][0]['LineTotal']"
										},
										"sink": {
											"name": "LineTotal",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['m_ds']"
										},
										"sink": {
											"name": "m_ds",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource_orders_bse",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable_orders_all_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource_orders_bse')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_orders_all_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_orders_dump')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0, 1)",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data_api",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['value'][0]['DocEntry']"
													},
													"sink": {
														"name": "DocEntry",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocNum']"
													},
													"sink": {
														"name": "DocNum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocDate']"
													},
													"sink": {
														"name": "DocDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocDueDate']"
													},
													"sink": {
														"name": "DocDueDate",
														"type": "Date"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['CardCode']"
													},
													"sink": {
														"name": "CardCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['CardName']"
													},
													"sink": {
														"name": "CardName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['NumAtCard']"
													},
													"sink": {
														"name": "NumAtCard",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocCurrency']"
													},
													"sink": {
														"name": "DocCurrency",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['VatSum']"
													},
													"sink": {
														"name": "VatSum",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['Address2']"
													},
													"sink": {
														"name": "Address2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['SalesPersonCode']"
													},
													"sink": {
														"name": "SalesPersonCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['DocumentLines'][0]['FederalTaxID']"
													},
													"sink": {
														"name": "FederalTaxID",
														"type": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSqlTable_orders_all_src",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable_orders_all_src",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-25T11:07:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_orders_all_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_bo_budgets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FutureAnnualExpensesCreditSys",
						"type": "float",
						"precision": 15
					},
					{
						"name": "FutureAnnualExpensesCreditLoc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "FutureAnnualExpensesDebitSys",
						"type": "float",
						"precision": 15
					},
					{
						"name": "FutureAnnualExpensesDebitLoc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "FutureAnnualRevenuesCredit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "FutureAnnualRevenuesDebit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "FutureRevenuesDebitSys",
						"type": "float",
						"precision": 15
					},
					{
						"name": "FutureRevenuesDebitLoc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ParentAccPercent",
						"type": "float",
						"precision": 15
					},
					{
						"name": "StartofFiscalYear",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "ParentAccountKey",
						"type": "nvarchar"
					},
					{
						"name": "TotalAnnualBudgetDebitSys",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BudgetBalanceDebitSys",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BudgetBalanceDebitLoc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalAnnualBudgetDebitLoc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalAnnualBudgetCreditSys",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalAnnualBudgetCreditLoc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BudgetBalanceCreditSys",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BudgetBalanceCreditLoc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DivisionCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountCode",
						"type": "nvarchar"
					},
					{
						"name": "Numerator",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BudgetScenario",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Budgets_Dump"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_bo_budgets_lines')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BudgetScenario",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "PrecentOfAnnualBudgetAmount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RowNumber",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "BudgetTotCredit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "BudgetSysTotCredit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "m_ds",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Budgets_Lines"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_bo_businessPartners')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "BusinessPartners"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_invoives_all_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Invoices_Dump"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_orders_all_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DocEntry",
						"type": "nvarchar"
					},
					{
						"name": "DocNum",
						"type": "nvarchar"
					},
					{
						"name": "DocDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DocDueDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "CardCode",
						"type": "nvarchar"
					},
					{
						"name": "CardName",
						"type": "nvarchar"
					},
					{
						"name": "NumAtCard",
						"type": "nvarchar"
					},
					{
						"name": "DocTotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DocCurrency",
						"type": "nvarchar"
					},
					{
						"name": "SalesPersonCode",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "FederalTaxID",
						"type": "nvarchar"
					},
					{
						"name": "VatSum",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Address2",
						"type": "nvarchar"
					},
					{
						"name": "LineTotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "m_ds",
						"type": "nvarchar"
					},
					{
						"name": "DocDueDateYearMonth",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_Dump"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_orders_update')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DocEntry",
						"type": "nvarchar"
					},
					{
						"name": "DocNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DocDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DocDueDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "CardCode",
						"type": "nvarchar"
					},
					{
						"name": "CardName",
						"type": "nvarchar"
					},
					{
						"name": "NumAtCard",
						"type": "nvarchar"
					},
					{
						"name": "DocTotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DocCurrency",
						"type": "nvarchar"
					},
					{
						"name": "SalesPersonCode",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "FederalTaxID",
						"type": "nvarchar"
					},
					{
						"name": "VatSum",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Address2",
						"type": "nvarchar"
					},
					{
						"name": "LineTotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "m_ds",
						"type": "nvarchar"
					},
					{
						"name": "DocDueDateYearMonth",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_Dump"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "invoices_lines_test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSql_invoices_update')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DocEntry",
						"type": "nvarchar"
					},
					{
						"name": "DocNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DocDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DocDueDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "CardCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CardName",
						"type": "nvarchar"
					},
					{
						"name": "NumAtCard",
						"type": "nvarchar"
					},
					{
						"name": "DocTotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DocCurrency",
						"type": "nvarchar"
					},
					{
						"name": "SalesPersonCode",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "FederalTaxID",
						"type": "nvarchar"
					},
					{
						"name": "VatSum",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Address2",
						"type": "nvarchar"
					},
					{
						"name": "LineTotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "m_ds",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Invoices_Dump"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JSON_Invoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_Bondura_Invoices",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_Bondura_Invoices')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonFlatten')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Invoices_Historical"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_dump')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_json",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data_5b9bf0fc-d291-43a4-9733-db090d193601_71638bfd-55cf-45af-910d-0b45d89c9832.json",
						"container": "bondura"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"@odata.count": {
							"type": "integer"
						},
						"@odata.context": {
							"type": "string"
						},
						"value": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"@odata.etag": {
										"type": "string"
									},
									"DocEntry": {
										"type": "integer"
									},
									"DocNum": {
										"type": "integer"
									},
									"DocType": {
										"type": "string"
									},
									"HandWritten": {
										"type": "string"
									},
									"Printed": {
										"type": "string"
									},
									"DocDate": {
										"type": "string"
									},
									"DocDueDate": {
										"type": "string"
									},
									"CardCode": {
										"type": "string"
									},
									"CardName": {
										"type": "string"
									},
									"Address": {
										"type": "string"
									},
									"NumAtCard": {
										"type": "string"
									},
									"DocTotal": {
										"type": "number"
									},
									"AttachmentEntry": {
										"type": "null"
									},
									"DocCurrency": {
										"type": "string"
									},
									"DocRate": {
										"type": "number"
									},
									"Reference1": {
										"type": "string"
									},
									"Reference2": {
										"type": "null"
									},
									"Comments": {
										"type": "string"
									},
									"JournalMemo": {
										"type": "string"
									},
									"PaymentGroupCode": {
										"type": "integer"
									},
									"DocTime": {
										"type": "string"
									},
									"SalesPersonCode": {
										"type": "integer"
									},
									"TransportationCode": {
										"type": "integer"
									},
									"Confirmed": {
										"type": "string"
									},
									"ImportFileNum": {
										"type": "null"
									},
									"SummeryType": {
										"type": "string"
									},
									"ContactPersonCode": {
										"type": "integer"
									},
									"ShowSCN": {
										"type": "string"
									},
									"Series": {
										"type": "integer"
									},
									"TaxDate": {
										"type": "string"
									},
									"PartialSupply": {
										"type": "string"
									},
									"DocObjectCode": {
										"type": "string"
									},
									"ShipToCode": {
										"type": "string"
									},
									"Indicator": {
										"type": "null"
									},
									"FederalTaxID": {
										"type": "string"
									},
									"DiscountPercent": {
										"type": "number"
									},
									"PaymentReference": {
										"type": "string"
									},
									"CreationDate": {
										"type": "string"
									},
									"UpdateDate": {
										"type": "string"
									},
									"FinancialPeriod": {
										"type": "integer"
									},
									"UserSign": {
										"type": "integer"
									},
									"TransNum": {
										"type": "integer"
									},
									"VatSum": {
										"type": "number"
									},
									"VatSumSys": {
										"type": "number"
									},
									"VatSumFc": {
										"type": "number"
									},
									"NetProcedure": {
										"type": "string"
									},
									"DocTotalFc": {
										"type": "number"
									},
									"DocTotalSys": {
										"type": "number"
									},
									"Form1099": {
										"type": "null"
									},
									"Box1099": {
										"type": "null"
									},
									"RevisionPo": {
										"type": "string"
									},
									"RequriedDate": {
										"type": "null"
									},
									"CancelDate": {
										"type": "null"
									},
									"BlockDunning": {
										"type": "string"
									},
									"Submitted": {
										"type": "string"
									},
									"Segment": {
										"type": "integer"
									},
									"PickStatus": {
										"type": "string"
									},
									"Pick": {
										"type": "string"
									},
									"PaymentMethod": {
										"type": "string"
									},
									"PaymentBlock": {
										"type": "string"
									},
									"PaymentBlockEntry": {
										"type": "null"
									},
									"CentralBankIndicator": {
										"type": "null"
									},
									"MaximumCashDiscount": {
										"type": "string"
									},
									"Reserve": {
										"type": "string"
									},
									"Project": {
										"type": "null"
									},
									"ExemptionValidityDateFrom": {
										"type": "null"
									},
									"ExemptionValidityDateTo": {
										"type": "null"
									},
									"WareHouseUpdateType": {
										"type": "string"
									},
									"Rounding": {
										"type": "string"
									},
									"ExternalCorrectedDocNum": {
										"type": "null"
									},
									"InternalCorrectedDocNum": {
										"type": "null"
									},
									"NextCorrectingDocument": {
										"type": "null"
									},
									"DeferredTax": {
										"type": "string"
									},
									"TaxExemptionLetterNum": {
										"type": "null"
									},
									"WTApplied": {
										"type": "number"
									},
									"WTAppliedFC": {
										"type": "number"
									},
									"BillOfExchangeReserved": {
										"type": "string"
									},
									"AgentCode": {
										"type": "null"
									},
									"WTAppliedSC": {
										"type": "number"
									},
									"TotalEqualizationTax": {
										"type": "number"
									},
									"TotalEqualizationTaxFC": {
										"type": "number"
									},
									"TotalEqualizationTaxSC": {
										"type": "number"
									},
									"NumberOfInstallments": {
										"type": "integer"
									},
									"ApplyTaxOnFirstInstallment": {
										"type": "string"
									},
									"WTNonSubjectAmount": {
										"type": "number"
									},
									"WTNonSubjectAmountSC": {
										"type": "number"
									},
									"WTNonSubjectAmountFC": {
										"type": "number"
									},
									"WTExemptedAmount": {
										"type": "number"
									},
									"WTExemptedAmountSC": {
										"type": "number"
									},
									"WTExemptedAmountFC": {
										"type": "number"
									},
									"BaseAmount": {
										"type": "number"
									},
									"BaseAmountSC": {
										"type": "number"
									},
									"BaseAmountFC": {
										"type": "number"
									},
									"WTAmount": {
										"type": "number"
									},
									"WTAmountSC": {
										"type": "number"
									},
									"WTAmountFC": {
										"type": "number"
									},
									"VatDate": {
										"type": "null"
									},
									"DocumentsOwner": {
										"type": "integer"
									},
									"FolioPrefixString": {
										"type": "null"
									},
									"FolioNumber": {
										"type": "null"
									},
									"DocumentSubType": {
										"type": "string"
									},
									"BPChannelCode": {
										"type": "null"
									},
									"BPChannelContact": {
										"type": "null"
									},
									"Address2": {
										"type": "string"
									},
									"DocumentStatus": {
										"type": "string"
									},
									"PeriodIndicator": {
										"type": "string"
									},
									"PayToCode": {
										"type": "string"
									},
									"ManualNumber": {
										"type": "null"
									},
									"UseShpdGoodsAct": {
										"type": "string"
									},
									"IsPayToBank": {
										"type": "string"
									},
									"PayToBankCountry": {
										"type": "null"
									},
									"PayToBankCode": {
										"type": "null"
									},
									"PayToBankAccountNo": {
										"type": "null"
									},
									"PayToBankBranch": {
										"type": "null"
									},
									"BPL_IDAssignedToInvoice": {
										"type": "null"
									},
									"DownPayment": {
										"type": "number"
									},
									"ReserveInvoice": {
										"type": "string"
									},
									"LanguageCode": {
										"type": "integer"
									},
									"TrackingNumber": {
										"type": "null"
									},
									"PickRemark": {
										"type": "string"
									},
									"ClosingDate": {
										"type": "null"
									},
									"SequenceCode": {
										"type": "null"
									},
									"SequenceSerial": {
										"type": "null"
									},
									"SeriesString": {
										"type": "null"
									},
									"SubSeriesString": {
										"type": "null"
									},
									"SequenceModel": {
										"type": "string"
									},
									"UseCorrectionVATGroup": {
										"type": "string"
									},
									"TotalDiscount": {
										"type": "number"
									},
									"DownPaymentAmount": {
										"type": "number"
									},
									"DownPaymentPercentage": {
										"type": "number"
									},
									"DownPaymentType": {
										"type": "string"
									},
									"DownPaymentAmountSC": {
										"type": "number"
									},
									"DownPaymentAmountFC": {
										"type": "number"
									},
									"VatPercent": {
										"type": "number"
									},
									"ServiceGrossProfitPercent": {
										"type": "null"
									},
									"OpeningRemarks": {
										"type": "string"
									},
									"ClosingRemarks": {
										"type": "string"
									},
									"RoundingDiffAmount": {
										"type": "number"
									},
									"RoundingDiffAmountFC": {
										"type": "number"
									},
									"RoundingDiffAmountSC": {
										"type": "number"
									},
									"Cancelled": {
										"type": "string"
									},
									"SignatureInputMessage": {
										"type": "null"
									},
									"SignatureDigest": {
										"type": "null"
									},
									"CertificationNumber": {
										"type": "null"
									},
									"PrivateKeyVersion": {
										"type": "null"
									},
									"ControlAccount": {
										"type": "string"
									},
									"InsuranceOperation347": {
										"type": "string"
									},
									"ArchiveNonremovableSalesQuotation": {
										"type": "string"
									},
									"GTSChecker": {
										"type": "null"
									},
									"GTSPayee": {
										"type": "null"
									},
									"ExtraMonth": {
										"type": "integer"
									},
									"ExtraDays": {
										"type": "integer"
									},
									"CashDiscountDateOffset": {
										"type": "integer"
									},
									"StartFrom": {
										"type": "string"
									},
									"NTSApproved": {
										"type": "string"
									},
									"ETaxWebSite": {
										"type": "null"
									},
									"ETaxNumber": {
										"type": "null"
									},
									"NTSApprovedNumber": {
										"type": "null"
									},
									"EDocGenerationType": {
										"type": "string"
									},
									"EDocSeries": {
										"type": "null"
									},
									"EDocNum": {
										"type": "null"
									},
									"EDocExportFormat": {
										"type": "null"
									},
									"EDocStatus": {
										"type": "string"
									},
									"EDocErrorCode": {
										"type": "null"
									},
									"EDocErrorMessage": {
										"type": "null"
									},
									"DownPaymentStatus": {
										"type": "string"
									},
									"GroupSeries": {
										"type": "null"
									},
									"GroupNumber": {
										"type": "null"
									},
									"GroupHandWritten": {
										"type": "string"
									},
									"ReopenOriginalDocument": {
										"type": "null"
									},
									"ReopenManuallyClosedOrCanceledDocument": {
										"type": "null"
									},
									"CreateOnlineQuotation": {
										"type": "string"
									},
									"POSEquipmentNumber": {
										"type": "null"
									},
									"POSManufacturerSerialNumber": {
										"type": "null"
									},
									"POSCashierNumber": {
										"type": "null"
									},
									"ApplyCurrentVATRatesForDownPaymentsToDraw": {
										"type": "string"
									},
									"ClosingOption": {
										"type": "string"
									},
									"SpecifiedClosingDate": {
										"type": "null"
									},
									"OpenForLandedCosts": {
										"type": "string"
									},
									"AuthorizationStatus": {
										"type": "string"
									},
									"TotalDiscountFC": {
										"type": "number"
									},
									"TotalDiscountSC": {
										"type": "number"
									},
									"RelevantToGTS": {
										"type": "string"
									},
									"BPLName": {
										"type": "null"
									},
									"VATRegNum": {
										"type": "null"
									},
									"AnnualInvoiceDeclarationReference": {
										"type": "null"
									},
									"Supplier": {
										"type": "null"
									},
									"Releaser": {
										"type": "null"
									},
									"Receiver": {
										"type": "null"
									},
									"BlanketAgreementNumber": {
										"type": "null"
									},
									"IsAlteration": {
										"type": "string"
									},
									"CancelStatus": {
										"type": "string"
									},
									"AssetValueDate": {
										"type": "null"
									},
									"InvoicePayment": {
										"type": "string"
									},
									"DocumentDelivery": {
										"type": "string"
									},
									"AuthorizationCode": {
										"type": "null"
									},
									"StartDeliveryDate": {
										"type": "null"
									},
									"StartDeliveryTime": {
										"type": "null"
									},
									"EndDeliveryDate": {
										"type": "null"
									},
									"EndDeliveryTime": {
										"type": "null"
									},
									"VehiclePlate": {
										"type": "null"
									},
									"ATDocumentType": {
										"type": "null"
									},
									"ElecCommStatus": {
										"type": "null"
									},
									"ElecCommMessage": {
										"type": "null"
									},
									"ReuseDocumentNum": {
										"type": "string"
									},
									"ReuseNotaFiscalNum": {
										"type": "string"
									},
									"PrintSEPADirect": {
										"type": "string"
									},
									"FiscalDocNum": {
										"type": "null"
									},
									"POSDailySummaryNo": {
										"type": "null"
									},
									"POSReceiptNo": {
										"type": "null"
									},
									"PointOfIssueCode": {
										"type": "null"
									},
									"Letter": {
										"type": "null"
									},
									"FolioNumberFrom": {
										"type": "null"
									},
									"FolioNumberTo": {
										"type": "null"
									},
									"InterimType": {
										"type": "string"
									},
									"RelatedType": {
										"type": "integer"
									},
									"RelatedEntry": {
										"type": "null"
									},
									"SAPPassport": {
										"type": "null"
									},
									"DocumentTaxID": {
										"type": "null"
									},
									"DateOfReportingControlStatementVAT": {
										"type": "null"
									},
									"ReportingSectionControlStatementVAT": {
										"type": "null"
									},
									"ExcludeFromTaxReportControlStatementVAT": {
										"type": "string"
									},
									"POS_CashRegister": {
										"type": "null"
									},
									"UpdateTime": {
										"type": "string"
									},
									"CreateQRCodeFrom": {
										"type": "null"
									},
									"PriceMode": {
										"type": "null"
									},
									"Revision": {
										"type": "string"
									},
									"OriginalRefNo": {
										"type": "null"
									},
									"OriginalRefDate": {
										"type": "null"
									},
									"GSTTransactionType": {
										"type": "null"
									},
									"OriginalCreditOrDebitNo": {
										"type": "null"
									},
									"OriginalCreditOrDebitDate": {
										"type": "null"
									},
									"ECommerceOperator": {
										"type": "null"
									},
									"ECommerceGSTIN": {
										"type": "null"
									},
									"ShipFrom": {
										"type": "string"
									},
									"CommissionTrade": {
										"type": "string"
									},
									"CommissionTradeReturn": {
										"type": "string"
									},
									"UseBillToAddrToDetermineTax": {
										"type": "null"
									},
									"IssuingReason": {
										"type": "integer"
									},
									"Cig": {
										"type": "null"
									},
									"Cup": {
										"type": "null"
									},
									"EDocType": {
										"type": "string"
									},
									"FCEAsPaymentMeans": {
										"type": "string"
									},
									"PaidToDate": {
										"type": "number"
									},
									"PaidToDateFC": {
										"type": "number"
									},
									"PaidToDateSys": {
										"type": "number"
									},
									"BaseType": {
										"type": "integer"
									},
									"BaseEntry": {
										"type": "null"
									},
									"FatherCard": {
										"type": "null"
									},
									"FatherType": {
										"type": "string"
									},
									"ShipState": {
										"type": "null"
									},
									"ShipPlace": {
										"type": "null"
									},
									"CustOffice": {
										"type": "null"
									},
									"FCI": {
										"type": "null"
									},
									"AddLegIn": {
										"type": "null"
									},
									"LegTextF": {
										"type": "null"
									},
									"DANFELgTxt": {
										"type": "null"
									},
									"IndFinal": {
										"type": "string"
									},
									"DataVersion": {
										"type": "integer"
									},
									"LastPageFolioNumber": {
										"type": "null"
									},
									"U_AIG_KID": {
										"type": "null"
									},
									"U_Ordrenummer": {
										"type": "null"
									},
									"U_esurl": {
										"type": "null"
									},
									"U_sluttkunde": {
										"type": "null"
									},
									"U_Levbet": {
										"type": "null"
									},
									"U_Sted": {
										"type": "null"
									},
									"U_Opperk": {
										"type": "null"
									},
									"U_DSS_SendStatus": {
										"type": "integer"
									},
									"U_DSS_EHFBuyersRef": {
										"type": "null"
									},
									"Document_ApprovalRequests": {
										"type": "array"
									},
									"DocumentLines": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"LineNum": {
													"type": "integer"
												},
												"ItemCode": {
													"type": "string"
												},
												"ItemDescription": {
													"type": "string"
												},
												"Quantity": {
													"type": "number"
												},
												"ShipDate": {
													"type": "string"
												},
												"Price": {
													"type": "number"
												},
												"PriceAfterVAT": {
													"type": "number"
												},
												"Currency": {
													"type": "string"
												},
												"Rate": {
													"type": "number"
												},
												"DiscountPercent": {
													"type": "number"
												},
												"VendorNum": {
													"type": "string"
												},
												"SerialNum": {
													"type": "null"
												},
												"WarehouseCode": {
													"type": "string"
												},
												"SalesPersonCode": {
													"type": "integer"
												},
												"CommisionPercent": {
													"type": "number"
												},
												"TreeType": {
													"type": "string"
												},
												"AccountCode": {
													"type": "string"
												},
												"UseBaseUnits": {
													"type": "string"
												},
												"SupplierCatNum": {
													"type": "string"
												},
												"CostingCode": {
													"type": "string"
												},
												"ProjectCode": {
													"type": "string"
												},
												"BarCode": {
													"type": "string"
												},
												"VatGroup": {
													"type": "string"
												},
												"Height1": {
													"type": "number"
												},
												"Hight1Unit": {
													"type": "null"
												},
												"Height2": {
													"type": "number"
												},
												"Height2Unit": {
													"type": "null"
												},
												"Lengh1": {
													"type": "number"
												},
												"Lengh1Unit": {
													"type": "null"
												},
												"Lengh2": {
													"type": "number"
												},
												"Lengh2Unit": {
													"type": "null"
												},
												"Weight1": {
													"type": "number"
												},
												"Weight1Unit": {
													"type": "null"
												},
												"Weight2": {
													"type": "number"
												},
												"Weight2Unit": {
													"type": "null"
												},
												"Factor1": {
													"type": "number"
												},
												"Factor2": {
													"type": "number"
												},
												"Factor3": {
													"type": "number"
												},
												"Factor4": {
													"type": "number"
												},
												"BaseType": {
													"type": "integer"
												},
												"BaseEntry": {
													"type": "integer"
												},
												"BaseLine": {
													"type": "integer"
												},
												"Volume": {
													"type": "number"
												},
												"VolumeUnit": {
													"type": "integer"
												},
												"Width1": {
													"type": "number"
												},
												"Width1Unit": {
													"type": "null"
												},
												"Width2": {
													"type": "number"
												},
												"Width2Unit": {
													"type": "null"
												},
												"Address": {
													"type": "string"
												},
												"TaxCode": {
													"type": "null"
												},
												"TaxType": {
													"type": "string"
												},
												"TaxLiable": {
													"type": "string"
												},
												"PickStatus": {
													"type": "string"
												},
												"PickQuantity": {
													"type": "number"
												},
												"PickListIdNumber": {
													"type": "null"
												},
												"OriginalItem": {
													"type": "string"
												},
												"BackOrder": {
													"type": "string"
												},
												"FreeText": {
													"type": "null"
												},
												"ShippingMethod": {
													"type": "integer"
												},
												"POTargetNum": {
													"type": "null"
												},
												"POTargetEntry": {
													"type": "string"
												},
												"POTargetRowNum": {
													"type": "null"
												},
												"CorrectionInvoiceItem": {
													"type": "string"
												},
												"CorrInvAmountToStock": {
													"type": "number"
												},
												"CorrInvAmountToDiffAcct": {
													"type": "number"
												},
												"AppliedTax": {
													"type": "number"
												},
												"AppliedTaxFC": {
													"type": "number"
												},
												"AppliedTaxSC": {
													"type": "number"
												},
												"WTLiable": {
													"type": "string"
												},
												"DeferredTax": {
													"type": "string"
												},
												"EqualizationTaxPercent": {
													"type": "number"
												},
												"TotalEqualizationTax": {
													"type": "number"
												},
												"TotalEqualizationTaxFC": {
													"type": "number"
												},
												"TotalEqualizationTaxSC": {
													"type": "number"
												},
												"NetTaxAmount": {
													"type": "number"
												},
												"NetTaxAmountFC": {
													"type": "number"
												},
												"NetTaxAmountSC": {
													"type": "number"
												},
												"MeasureUnit": {
													"type": "string"
												},
												"UnitsOfMeasurment": {
													"type": "number"
												},
												"LineTotal": {
													"type": "number"
												},
												"TaxPercentagePerRow": {
													"type": "number"
												},
												"TaxTotal": {
													"type": "number"
												},
												"ConsumerSalesForecast": {
													"type": "string"
												},
												"ExciseAmount": {
													"type": "number"
												},
												"TaxPerUnit": {
													"type": "number"
												},
												"TotalInclTax": {
													"type": "number"
												},
												"CountryOrg": {
													"type": "string"
												},
												"SWW": {
													"type": "string"
												},
												"TransactionType": {
													"type": "null"
												},
												"DistributeExpense": {
													"type": "string"
												},
												"RowTotalFC": {
													"type": "number"
												},
												"RowTotalSC": {
													"type": "number"
												},
												"LastBuyInmPrice": {
													"type": "number"
												},
												"LastBuyDistributeSumFc": {
													"type": "number"
												},
												"LastBuyDistributeSumSc": {
													"type": "number"
												},
												"LastBuyDistributeSum": {
													"type": "number"
												},
												"StockDistributesumForeign": {
													"type": "number"
												},
												"StockDistributesumSystem": {
													"type": "number"
												},
												"StockDistributesum": {
													"type": "number"
												},
												"StockInmPrice": {
													"type": "number"
												},
												"PickStatusEx": {
													"type": "string"
												},
												"TaxBeforeDPM": {
													"type": "number"
												},
												"TaxBeforeDPMFC": {
													"type": "number"
												},
												"TaxBeforeDPMSC": {
													"type": "number"
												},
												"CFOPCode": {
													"type": "null"
												},
												"CSTCode": {
													"type": "null"
												},
												"Usage": {
													"type": "null"
												},
												"TaxOnly": {
													"type": "string"
												},
												"VisualOrder": {
													"type": "integer"
												},
												"BaseOpenQuantity": {
													"type": "number"
												},
												"UnitPrice": {
													"type": "number"
												},
												"LineStatus": {
													"type": "string"
												},
												"PackageQuantity": {
													"type": "number"
												},
												"Text": {
													"type": "null"
												},
												"LineType": {
													"type": "string"
												},
												"COGSCostingCode": {
													"type": "string"
												},
												"COGSAccountCode": {
													"type": "string"
												},
												"ChangeAssemlyBoMWarehouse": {
													"type": "string"
												},
												"GrossBuyPrice": {
													"type": "number"
												},
												"GrossBase": {
													"type": "integer"
												},
												"GrossProfitTotalBasePrice": {
													"type": "number"
												},
												"CostingCode2": {
													"type": "null"
												},
												"CostingCode3": {
													"type": "null"
												},
												"CostingCode4": {
													"type": "null"
												},
												"CostingCode5": {
													"type": "null"
												},
												"ItemDetails": {
													"type": "null"
												},
												"LocationCode": {
													"type": "null"
												},
												"ActualDeliveryDate": {
													"type": "string"
												},
												"RemainingOpenQuantity": {
													"type": "number"
												},
												"OpenAmount": {
													"type": "number"
												},
												"OpenAmountFC": {
													"type": "number"
												},
												"OpenAmountSC": {
													"type": "number"
												},
												"ExLineNo": {
													"type": "null"
												},
												"RequiredDate": {
													"type": "null"
												},
												"RequiredQuantity": {
													"type": "null"
												},
												"COGSCostingCode2": {
													"type": "null"
												},
												"COGSCostingCode3": {
													"type": "null"
												},
												"COGSCostingCode4": {
													"type": "null"
												},
												"COGSCostingCode5": {
													"type": "null"
												},
												"CSTforIPI": {
													"type": "null"
												},
												"CSTforPIS": {
													"type": "null"
												},
												"CSTforCOFINS": {
													"type": "null"
												},
												"CreditOriginCode": {
													"type": "null"
												},
												"WithoutInventoryMovement": {
													"type": "string"
												},
												"AgreementNo": {
													"type": "null"
												},
												"AgreementRowNumber": {
													"type": "null"
												},
												"ActualBaseEntry": {
													"type": "null"
												},
												"ActualBaseLine": {
													"type": "null"
												},
												"DocEntry": {
													"type": "integer"
												},
												"Surpluses": {
													"type": "null"
												},
												"DefectAndBreakup": {
													"type": "null"
												},
												"Shortages": {
													"type": "null"
												},
												"ConsiderQuantity": {
													"type": "string"
												},
												"PartialRetirement": {
													"type": "string"
												},
												"RetirementQuantity": {
													"type": "null"
												},
												"RetirementAPC": {
													"type": "null"
												},
												"ThirdParty": {
													"type": "string"
												},
												"PoNum": {
													"type": "null"
												},
												"PoItmNum": {
													"type": "null"
												},
												"ExpenseType": {
													"type": "null"
												},
												"ReceiptNumber": {
													"type": "null"
												},
												"ExpenseOperationType": {
													"type": "null"
												},
												"FederalTaxID": {
													"type": "null"
												},
												"GrossProfit": {
													"type": "number"
												},
												"GrossProfitFC": {
													"type": "number"
												},
												"GrossProfitSC": {
													"type": "number"
												},
												"PriceSource": {
													"type": "string"
												},
												"StgSeqNum": {
													"type": "null"
												},
												"StgEntry": {
													"type": "null"
												},
												"StgDesc": {
													"type": "null"
												},
												"UoMEntry": {
													"type": "integer"
												},
												"UoMCode": {
													"type": "string"
												},
												"InventoryQuantity": {
													"type": "number"
												},
												"RemainingOpenInventoryQuantity": {
													"type": "number"
												},
												"ParentLineNum": {
													"type": "null"
												},
												"Incoterms": {
													"type": "integer"
												},
												"TransportMode": {
													"type": "integer"
												},
												"NatureOfTransaction": {
													"type": "null"
												},
												"DestinationCountryForImport": {
													"type": "null"
												},
												"DestinationRegionForImport": {
													"type": "null"
												},
												"OriginCountryForExport": {
													"type": "null"
												},
												"OriginRegionForExport": {
													"type": "null"
												},
												"ItemType": {
													"type": "string"
												},
												"ChangeInventoryQuantityIndependently": {
													"type": "string"
												},
												"FreeOfChargeBP": {
													"type": "null"
												},
												"SACEntry": {
													"type": "null"
												},
												"HSNEntry": {
													"type": "null"
												},
												"GrossPrice": {
													"type": "number"
												},
												"GrossTotal": {
													"type": "number"
												},
												"GrossTotalFC": {
													"type": "number"
												},
												"GrossTotalSC": {
													"type": "number"
												},
												"NCMCode": {
													"type": "integer"
												},
												"NVECode": {
													"type": "null"
												},
												"IndEscala": {
													"type": "string"
												},
												"CtrSealQty": {
													"type": "null"
												},
												"CNJPMan": {
													"type": "null"
												},
												"CESTCode": {
													"type": "null"
												},
												"UFFiscalBenefitCode": {
													"type": "null"
												},
												"ReverseCharge": {
													"type": "string"
												},
												"ShipToCode": {
													"type": "string"
												},
												"ShipToDescription": {
													"type": "string"
												},
												"ExternalCalcTaxRate": {
													"type": "null"
												},
												"ExternalCalcTaxAmount": {
													"type": "null"
												},
												"ExternalCalcTaxAmountFC": {
													"type": "null"
												},
												"ExternalCalcTaxAmountSC": {
													"type": "null"
												},
												"StandardItemIdentification": {
													"type": "null"
												},
												"CommodityClassification": {
													"type": "null"
												},
												"UnencumberedReason": {
													"type": "null"
												},
												"CUSplit": {
													"type": "string"
												},
												"U_Installasjon": {
													"type": "string"
												},
												"U_ParentItem": {
													"type": "null"
												},
												"U_Codebars": {
													"type": "null"
												},
												"U_PlannedQty": {
													"type": "number"
												},
												"U_AIG_IN": {
													"type": "null"
												},
												"U_AIG_IA": {
													"type": "null"
												},
												"U_AIG_PD": {
													"type": "null"
												},
												"U_AIG_PDate": {
													"type": "null"
												},
												"U_AIG_ID": {
													"type": "null"
												},
												"U_PItemCode": {
													"type": "null"
												},
												"U_AIG_IR": {
													"type": "null"
												},
												"U_AIG_DDate": {
													"type": "null"
												},
												"U_U_AIG_DDate": {
													"type": "null"
												},
												"U_DSS_Charge": {
													"type": "null"
												},
												"U_DSS_ProdOrdr": {
													"type": "null"
												},
												"LineTaxJurisdictions": {
													"type": "array"
												},
												"ExportProcesses": {
													"type": "array"
												},
												"EBooksDetails": {
													"type": "array"
												},
												"DocumentLineAdditionalExpenses": {
													"type": "array"
												},
												"WithholdingTaxLines": {
													"type": "array"
												},
												"SerialNumbers": {
													"type": "array"
												},
												"BatchNumbers": {
													"type": "array"
												},
												"CCDNumbers": {
													"type": "array"
												},
												"DocumentLinesBinAllocations": {
													"type": "array"
												}
											}
										}
									},
									"EWayBillDetails": {
										"type": "object"
									},
									"ElectronicProtocols": {
										"type": "array"
									},
									"DocumentAdditionalExpenses": {
										"type": "array"
									},
									"WithholdingTaxDataWTXCollection": {
										"type": "array"
									},
									"WithholdingTaxDataCollection": {
										"type": "array"
									},
									"DocumentPackages": {
										"type": "array"
									},
									"DocumentSpecialLines": {
										"type": "array"
									},
									"DocumentInstallments": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"DueDate": {
													"type": "string"
												},
												"Percentage": {
													"type": "number"
												},
												"Total": {
													"type": "number"
												},
												"LastDunningDate": {
													"type": "null"
												},
												"DunningLevel": {
													"type": "integer"
												},
												"TotalFC": {
													"type": "null"
												},
												"InstallmentId": {
													"type": "integer"
												},
												"PaymentOrdered": {
													"type": "string"
												}
											}
										}
									},
									"DownPaymentsToDraw": {
										"type": "array"
									},
									"TaxExtension": {
										"type": "object"
									},
									"AddressExtension": {
										"type": "object"
									},
									"DocumentReferences": {
										"type": "array"
									}
								}
							}
						},
						"@odata.nextLink": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_not_parsed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_json",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "bondura"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource_bo_budgets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "Budgets?%24count=true&%24filter=AccountCode%20eq%20%273000%27"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource_bo_businessPartners')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_bo_businessPartners",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_bo_businessPartners')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource_bo_invoices_inc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_bo_invoices_incparam",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"QueryParamInc": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().QueryParamInc",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_bo_invoices_incparam')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource_bse_businessPartners')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_bse_businessPartners",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_bse_businessPartners')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource_invoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_Bondura_Invoices",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_Bondura_Invoices')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource_invoices_noparam')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_Bondura_Invoices",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_Bondura_Invoices')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource_invoices_se')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_Bondura_SE_invoives",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_Bondura_SE_invoives')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource_orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_orders",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource_orders_bo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_bo_orders",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"QueryParamInc": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().QueryParamInc",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_bo_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource_orders_bse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_orders_bse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_orders_bse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource_param')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService_bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService_bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_oap')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BonduraServiceLayer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_path": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "ODataResource",
				"schema": [],
				"typeProperties": {
					"path": {
						"value": "@dataset().cw_path",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BonduraServiceLayer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_bondura')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_json",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Directory": {
						"type": "string",
						"defaultValue": "Invoices_new"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "*"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": "bondura"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_sap')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_json",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "salesPersons_2024-06-12T11:05:50.5160254Z.json",
						"folderPath": "SalesPersons",
						"container": "bondura"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"@odata.context": {
							"type": "string"
						},
						"value": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"@odata.etag": {
										"type": "string"
									},
									"DocEntry": {
										"type": "integer"
									},
									"DocNum": {
										"type": "integer"
									},
									"DocType": {
										"type": "string"
									},
									"HandWritten": {
										"type": "string"
									},
									"Printed": {
										"type": "string"
									},
									"DocDate": {
										"type": "string"
									},
									"DocDueDate": {
										"type": "string"
									},
									"CardCode": {
										"type": "string"
									},
									"CardName": {
										"type": "string"
									},
									"Address": {
										"type": "string"
									},
									"NumAtCard": {
										"type": "string"
									},
									"DocTotal": {
										"type": "number"
									},
									"AttachmentEntry": {
										"type": "null"
									},
									"DocCurrency": {
										"type": "string"
									},
									"DocRate": {
										"type": "number"
									},
									"Reference1": {
										"type": "string"
									},
									"Reference2": {
										"type": "null"
									},
									"Comments": {
										"type": "string"
									},
									"JournalMemo": {
										"type": "string"
									},
									"PaymentGroupCode": {
										"type": "integer"
									},
									"DocTime": {
										"type": "string"
									},
									"SalesPersonCode": {
										"type": "integer"
									},
									"TransportationCode": {
										"type": "integer"
									},
									"Confirmed": {
										"type": "string"
									},
									"ImportFileNum": {
										"type": "null"
									},
									"SummeryType": {
										"type": "string"
									},
									"ContactPersonCode": {
										"type": "integer"
									},
									"ShowSCN": {
										"type": "string"
									},
									"Series": {
										"type": "integer"
									},
									"TaxDate": {
										"type": "string"
									},
									"PartialSupply": {
										"type": "string"
									},
									"DocObjectCode": {
										"type": "string"
									},
									"ShipToCode": {
										"type": "string"
									},
									"Indicator": {
										"type": "null"
									},
									"FederalTaxID": {
										"type": "string"
									},
									"DiscountPercent": {
										"type": "number"
									},
									"PaymentReference": {
										"type": "string"
									},
									"CreationDate": {
										"type": "string"
									},
									"UpdateDate": {
										"type": "string"
									},
									"FinancialPeriod": {
										"type": "integer"
									},
									"UserSign": {
										"type": "integer"
									},
									"TransNum": {
										"type": "integer"
									},
									"VatSum": {
										"type": "number"
									},
									"VatSumSys": {
										"type": "number"
									},
									"VatSumFc": {
										"type": "number"
									},
									"NetProcedure": {
										"type": "string"
									},
									"DocTotalFc": {
										"type": "number"
									},
									"DocTotalSys": {
										"type": "number"
									},
									"Form1099": {
										"type": "null"
									},
									"Box1099": {
										"type": "null"
									},
									"RevisionPo": {
										"type": "string"
									},
									"RequriedDate": {
										"type": "null"
									},
									"CancelDate": {
										"type": "null"
									},
									"BlockDunning": {
										"type": "string"
									},
									"Submitted": {
										"type": "string"
									},
									"Segment": {
										"type": "integer"
									},
									"PickStatus": {
										"type": "string"
									},
									"Pick": {
										"type": "string"
									},
									"PaymentMethod": {
										"type": "string"
									},
									"PaymentBlock": {
										"type": "string"
									},
									"PaymentBlockEntry": {
										"type": "null"
									},
									"CentralBankIndicator": {
										"type": "null"
									},
									"MaximumCashDiscount": {
										"type": "string"
									},
									"Reserve": {
										"type": "string"
									},
									"Project": {
										"type": "null"
									},
									"ExemptionValidityDateFrom": {
										"type": "null"
									},
									"ExemptionValidityDateTo": {
										"type": "null"
									},
									"WareHouseUpdateType": {
										"type": "string"
									},
									"Rounding": {
										"type": "string"
									},
									"ExternalCorrectedDocNum": {
										"type": "null"
									},
									"InternalCorrectedDocNum": {
										"type": "null"
									},
									"NextCorrectingDocument": {
										"type": "null"
									},
									"DeferredTax": {
										"type": "string"
									},
									"TaxExemptionLetterNum": {
										"type": "null"
									},
									"WTApplied": {
										"type": "number"
									},
									"WTAppliedFC": {
										"type": "number"
									},
									"BillOfExchangeReserved": {
										"type": "string"
									},
									"AgentCode": {
										"type": "null"
									},
									"WTAppliedSC": {
										"type": "number"
									},
									"TotalEqualizationTax": {
										"type": "number"
									},
									"TotalEqualizationTaxFC": {
										"type": "number"
									},
									"TotalEqualizationTaxSC": {
										"type": "number"
									},
									"NumberOfInstallments": {
										"type": "integer"
									},
									"ApplyTaxOnFirstInstallment": {
										"type": "string"
									},
									"WTNonSubjectAmount": {
										"type": "number"
									},
									"WTNonSubjectAmountSC": {
										"type": "number"
									},
									"WTNonSubjectAmountFC": {
										"type": "number"
									},
									"WTExemptedAmount": {
										"type": "number"
									},
									"WTExemptedAmountSC": {
										"type": "number"
									},
									"WTExemptedAmountFC": {
										"type": "number"
									},
									"BaseAmount": {
										"type": "number"
									},
									"BaseAmountSC": {
										"type": "number"
									},
									"BaseAmountFC": {
										"type": "number"
									},
									"WTAmount": {
										"type": "number"
									},
									"WTAmountSC": {
										"type": "number"
									},
									"WTAmountFC": {
										"type": "number"
									},
									"VatDate": {
										"type": "null"
									},
									"DocumentsOwner": {
										"type": "integer"
									},
									"FolioPrefixString": {
										"type": "null"
									},
									"FolioNumber": {
										"type": "null"
									},
									"DocumentSubType": {
										"type": "string"
									},
									"BPChannelCode": {
										"type": "null"
									},
									"BPChannelContact": {
										"type": "null"
									},
									"Address2": {
										"type": "string"
									},
									"DocumentStatus": {
										"type": "string"
									},
									"PeriodIndicator": {
										"type": "string"
									},
									"PayToCode": {
										"type": "string"
									},
									"ManualNumber": {
										"type": "null"
									},
									"UseShpdGoodsAct": {
										"type": "string"
									},
									"IsPayToBank": {
										"type": "string"
									},
									"PayToBankCountry": {
										"type": "null"
									},
									"PayToBankCode": {
										"type": "null"
									},
									"PayToBankAccountNo": {
										"type": "null"
									},
									"PayToBankBranch": {
										"type": "null"
									},
									"BPL_IDAssignedToInvoice": {
										"type": "null"
									},
									"DownPayment": {
										"type": "number"
									},
									"ReserveInvoice": {
										"type": "string"
									},
									"LanguageCode": {
										"type": "integer"
									},
									"TrackingNumber": {
										"type": "null"
									},
									"PickRemark": {
										"type": "string"
									},
									"ClosingDate": {
										"type": "null"
									},
									"SequenceCode": {
										"type": "null"
									},
									"SequenceSerial": {
										"type": "null"
									},
									"SeriesString": {
										"type": "null"
									},
									"SubSeriesString": {
										"type": "null"
									},
									"SequenceModel": {
										"type": "string"
									},
									"UseCorrectionVATGroup": {
										"type": "string"
									},
									"TotalDiscount": {
										"type": "number"
									},
									"DownPaymentAmount": {
										"type": "number"
									},
									"DownPaymentPercentage": {
										"type": "number"
									},
									"DownPaymentType": {
										"type": "string"
									},
									"DownPaymentAmountSC": {
										"type": "number"
									},
									"DownPaymentAmountFC": {
										"type": "number"
									},
									"VatPercent": {
										"type": "number"
									},
									"ServiceGrossProfitPercent": {
										"type": "null"
									},
									"OpeningRemarks": {
										"type": "string"
									},
									"ClosingRemarks": {
										"type": "string"
									},
									"RoundingDiffAmount": {
										"type": "number"
									},
									"RoundingDiffAmountFC": {
										"type": "number"
									},
									"RoundingDiffAmountSC": {
										"type": "number"
									},
									"Cancelled": {
										"type": "string"
									},
									"SignatureInputMessage": {
										"type": "null"
									},
									"SignatureDigest": {
										"type": "null"
									},
									"CertificationNumber": {
										"type": "null"
									},
									"PrivateKeyVersion": {
										"type": "null"
									},
									"ControlAccount": {
										"type": "string"
									},
									"InsuranceOperation347": {
										"type": "string"
									},
									"ArchiveNonremovableSalesQuotation": {
										"type": "string"
									},
									"GTSChecker": {
										"type": "null"
									},
									"GTSPayee": {
										"type": "null"
									},
									"ExtraMonth": {
										"type": "integer"
									},
									"ExtraDays": {
										"type": "integer"
									},
									"CashDiscountDateOffset": {
										"type": "integer"
									},
									"StartFrom": {
										"type": "string"
									},
									"NTSApproved": {
										"type": "string"
									},
									"ETaxWebSite": {
										"type": "null"
									},
									"ETaxNumber": {
										"type": "null"
									},
									"NTSApprovedNumber": {
										"type": "null"
									},
									"EDocGenerationType": {
										"type": "string"
									},
									"EDocSeries": {
										"type": "null"
									},
									"EDocNum": {
										"type": "null"
									},
									"EDocExportFormat": {
										"type": "null"
									},
									"EDocStatus": {
										"type": "string"
									},
									"EDocErrorCode": {
										"type": "null"
									},
									"EDocErrorMessage": {
										"type": "null"
									},
									"DownPaymentStatus": {
										"type": "string"
									},
									"GroupSeries": {
										"type": "null"
									},
									"GroupNumber": {
										"type": "null"
									},
									"GroupHandWritten": {
										"type": "string"
									},
									"ReopenOriginalDocument": {
										"type": "null"
									},
									"ReopenManuallyClosedOrCanceledDocument": {
										"type": "null"
									},
									"CreateOnlineQuotation": {
										"type": "string"
									},
									"POSEquipmentNumber": {
										"type": "null"
									},
									"POSManufacturerSerialNumber": {
										"type": "null"
									},
									"POSCashierNumber": {
										"type": "null"
									},
									"ApplyCurrentVATRatesForDownPaymentsToDraw": {
										"type": "string"
									},
									"ClosingOption": {
										"type": "string"
									},
									"SpecifiedClosingDate": {
										"type": "null"
									},
									"OpenForLandedCosts": {
										"type": "string"
									},
									"AuthorizationStatus": {
										"type": "string"
									},
									"TotalDiscountFC": {
										"type": "number"
									},
									"TotalDiscountSC": {
										"type": "number"
									},
									"RelevantToGTS": {
										"type": "string"
									},
									"BPLName": {
										"type": "null"
									},
									"VATRegNum": {
										"type": "null"
									},
									"AnnualInvoiceDeclarationReference": {
										"type": "null"
									},
									"Supplier": {
										"type": "null"
									},
									"Releaser": {
										"type": "null"
									},
									"Receiver": {
										"type": "null"
									},
									"BlanketAgreementNumber": {
										"type": "null"
									},
									"IsAlteration": {
										"type": "string"
									},
									"CancelStatus": {
										"type": "string"
									},
									"AssetValueDate": {
										"type": "null"
									},
									"InvoicePayment": {
										"type": "string"
									},
									"DocumentDelivery": {
										"type": "string"
									},
									"AuthorizationCode": {
										"type": "null"
									},
									"StartDeliveryDate": {
										"type": "null"
									},
									"StartDeliveryTime": {
										"type": "null"
									},
									"EndDeliveryDate": {
										"type": "null"
									},
									"EndDeliveryTime": {
										"type": "null"
									},
									"VehiclePlate": {
										"type": "null"
									},
									"ATDocumentType": {
										"type": "null"
									},
									"ElecCommStatus": {
										"type": "null"
									},
									"ElecCommMessage": {
										"type": "null"
									},
									"ReuseDocumentNum": {
										"type": "string"
									},
									"ReuseNotaFiscalNum": {
										"type": "string"
									},
									"PrintSEPADirect": {
										"type": "string"
									},
									"FiscalDocNum": {
										"type": "null"
									},
									"POSDailySummaryNo": {
										"type": "null"
									},
									"POSReceiptNo": {
										"type": "null"
									},
									"PointOfIssueCode": {
										"type": "null"
									},
									"Letter": {
										"type": "null"
									},
									"FolioNumberFrom": {
										"type": "null"
									},
									"FolioNumberTo": {
										"type": "null"
									},
									"InterimType": {
										"type": "string"
									},
									"RelatedType": {
										"type": "integer"
									},
									"RelatedEntry": {
										"type": "null"
									},
									"SAPPassport": {
										"type": "null"
									},
									"DocumentTaxID": {
										"type": "null"
									},
									"DateOfReportingControlStatementVAT": {
										"type": "null"
									},
									"ReportingSectionControlStatementVAT": {
										"type": "null"
									},
									"ExcludeFromTaxReportControlStatementVAT": {
										"type": "string"
									},
									"POS_CashRegister": {
										"type": "null"
									},
									"UpdateTime": {
										"type": "string"
									},
									"CreateQRCodeFrom": {
										"type": "null"
									},
									"PriceMode": {
										"type": "null"
									},
									"Revision": {
										"type": "string"
									},
									"OriginalRefNo": {
										"type": "null"
									},
									"OriginalRefDate": {
										"type": "null"
									},
									"GSTTransactionType": {
										"type": "null"
									},
									"OriginalCreditOrDebitNo": {
										"type": "null"
									},
									"OriginalCreditOrDebitDate": {
										"type": "null"
									},
									"ECommerceOperator": {
										"type": "null"
									},
									"ECommerceGSTIN": {
										"type": "null"
									},
									"ShipFrom": {
										"type": "string"
									},
									"CommissionTrade": {
										"type": "string"
									},
									"CommissionTradeReturn": {
										"type": "string"
									},
									"UseBillToAddrToDetermineTax": {
										"type": "null"
									},
									"IssuingReason": {
										"type": "integer"
									},
									"Cig": {
										"type": "null"
									},
									"Cup": {
										"type": "null"
									},
									"EDocType": {
										"type": "string"
									},
									"FCEAsPaymentMeans": {
										"type": "string"
									},
									"PaidToDate": {
										"type": "number"
									},
									"PaidToDateFC": {
										"type": "number"
									},
									"PaidToDateSys": {
										"type": "number"
									},
									"BaseType": {
										"type": "integer"
									},
									"BaseEntry": {
										"type": "null"
									},
									"FatherCard": {
										"type": "null"
									},
									"FatherType": {
										"type": "string"
									},
									"ShipState": {
										"type": "null"
									},
									"ShipPlace": {
										"type": "null"
									},
									"CustOffice": {
										"type": "null"
									},
									"FCI": {
										"type": "null"
									},
									"AddLegIn": {
										"type": "null"
									},
									"LegTextF": {
										"type": "null"
									},
									"DANFELgTxt": {
										"type": "null"
									},
									"IndFinal": {
										"type": "string"
									},
									"DataVersion": {
										"type": "integer"
									},
									"LastPageFolioNumber": {
										"type": "null"
									},
									"U_AIG_KID": {
										"type": "null"
									},
									"U_Ordrenummer": {
										"type": "null"
									},
									"U_esurl": {
										"type": "null"
									},
									"U_sluttkunde": {
										"type": "null"
									},
									"U_Levbet": {
										"type": "null"
									},
									"U_Sted": {
										"type": "null"
									},
									"U_Opperk": {
										"type": "null"
									},
									"U_DSS_SendStatus": {
										"type": "integer"
									},
									"U_DSS_EHFBuyersRef": {
										"type": "null"
									},
									"Document_ApprovalRequests": {
										"type": "array"
									},
									"DocumentLines": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"LineNum": {
													"type": "integer"
												},
												"ItemCode": {
													"type": "string"
												},
												"ItemDescription": {
													"type": "string"
												},
												"Quantity": {
													"type": "number"
												},
												"ShipDate": {
													"type": "string"
												},
												"Price": {
													"type": "number"
												},
												"PriceAfterVAT": {
													"type": "number"
												},
												"Currency": {
													"type": "string"
												},
												"Rate": {
													"type": "number"
												},
												"DiscountPercent": {
													"type": "number"
												},
												"VendorNum": {
													"type": "string"
												},
												"SerialNum": {
													"type": "null"
												},
												"WarehouseCode": {
													"type": "string"
												},
												"SalesPersonCode": {
													"type": "integer"
												},
												"CommisionPercent": {
													"type": "number"
												},
												"TreeType": {
													"type": "string"
												},
												"AccountCode": {
													"type": "string"
												},
												"UseBaseUnits": {
													"type": "string"
												},
												"SupplierCatNum": {
													"type": "string"
												},
												"CostingCode": {
													"type": "string"
												},
												"ProjectCode": {
													"type": "string"
												},
												"BarCode": {
													"type": "string"
												},
												"VatGroup": {
													"type": "string"
												},
												"Height1": {
													"type": "number"
												},
												"Hight1Unit": {
													"type": "null"
												},
												"Height2": {
													"type": "number"
												},
												"Height2Unit": {
													"type": "null"
												},
												"Lengh1": {
													"type": "number"
												},
												"Lengh1Unit": {
													"type": "null"
												},
												"Lengh2": {
													"type": "number"
												},
												"Lengh2Unit": {
													"type": "null"
												},
												"Weight1": {
													"type": "number"
												},
												"Weight1Unit": {
													"type": "null"
												},
												"Weight2": {
													"type": "number"
												},
												"Weight2Unit": {
													"type": "null"
												},
												"Factor1": {
													"type": "number"
												},
												"Factor2": {
													"type": "number"
												},
												"Factor3": {
													"type": "number"
												},
												"Factor4": {
													"type": "number"
												},
												"BaseType": {
													"type": "integer"
												},
												"BaseEntry": {
													"type": "integer"
												},
												"BaseLine": {
													"type": "integer"
												},
												"Volume": {
													"type": "number"
												},
												"VolumeUnit": {
													"type": "integer"
												},
												"Width1": {
													"type": "number"
												},
												"Width1Unit": {
													"type": "null"
												},
												"Width2": {
													"type": "number"
												},
												"Width2Unit": {
													"type": "null"
												},
												"Address": {
													"type": "string"
												},
												"TaxCode": {
													"type": "null"
												},
												"TaxType": {
													"type": "string"
												},
												"TaxLiable": {
													"type": "string"
												},
												"PickStatus": {
													"type": "string"
												},
												"PickQuantity": {
													"type": "number"
												},
												"PickListIdNumber": {
													"type": "null"
												},
												"OriginalItem": {
													"type": "string"
												},
												"BackOrder": {
													"type": "string"
												},
												"FreeText": {
													"type": "null"
												},
												"ShippingMethod": {
													"type": "integer"
												},
												"POTargetNum": {
													"type": "null"
												},
												"POTargetEntry": {
													"type": "string"
												},
												"POTargetRowNum": {
													"type": "null"
												},
												"CorrectionInvoiceItem": {
													"type": "string"
												},
												"CorrInvAmountToStock": {
													"type": "number"
												},
												"CorrInvAmountToDiffAcct": {
													"type": "number"
												},
												"AppliedTax": {
													"type": "number"
												},
												"AppliedTaxFC": {
													"type": "number"
												},
												"AppliedTaxSC": {
													"type": "number"
												},
												"WTLiable": {
													"type": "string"
												},
												"DeferredTax": {
													"type": "string"
												},
												"EqualizationTaxPercent": {
													"type": "number"
												},
												"TotalEqualizationTax": {
													"type": "number"
												},
												"TotalEqualizationTaxFC": {
													"type": "number"
												},
												"TotalEqualizationTaxSC": {
													"type": "number"
												},
												"NetTaxAmount": {
													"type": "number"
												},
												"NetTaxAmountFC": {
													"type": "number"
												},
												"NetTaxAmountSC": {
													"type": "number"
												},
												"MeasureUnit": {
													"type": "string"
												},
												"UnitsOfMeasurment": {
													"type": "number"
												},
												"LineTotal": {
													"type": "number"
												},
												"TaxPercentagePerRow": {
													"type": "number"
												},
												"TaxTotal": {
													"type": "number"
												},
												"ConsumerSalesForecast": {
													"type": "string"
												},
												"ExciseAmount": {
													"type": "number"
												},
												"TaxPerUnit": {
													"type": "number"
												},
												"TotalInclTax": {
													"type": "number"
												},
												"CountryOrg": {
													"type": "string"
												},
												"SWW": {
													"type": "string"
												},
												"TransactionType": {
													"type": "null"
												},
												"DistributeExpense": {
													"type": "string"
												},
												"RowTotalFC": {
													"type": "number"
												},
												"RowTotalSC": {
													"type": "number"
												},
												"LastBuyInmPrice": {
													"type": "number"
												},
												"LastBuyDistributeSumFc": {
													"type": "number"
												},
												"LastBuyDistributeSumSc": {
													"type": "number"
												},
												"LastBuyDistributeSum": {
													"type": "number"
												},
												"StockDistributesumForeign": {
													"type": "number"
												},
												"StockDistributesumSystem": {
													"type": "number"
												},
												"StockDistributesum": {
													"type": "number"
												},
												"StockInmPrice": {
													"type": "number"
												},
												"PickStatusEx": {
													"type": "string"
												},
												"TaxBeforeDPM": {
													"type": "number"
												},
												"TaxBeforeDPMFC": {
													"type": "number"
												},
												"TaxBeforeDPMSC": {
													"type": "number"
												},
												"CFOPCode": {
													"type": "null"
												},
												"CSTCode": {
													"type": "null"
												},
												"Usage": {
													"type": "null"
												},
												"TaxOnly": {
													"type": "string"
												},
												"VisualOrder": {
													"type": "integer"
												},
												"BaseOpenQuantity": {
													"type": "number"
												},
												"UnitPrice": {
													"type": "number"
												},
												"LineStatus": {
													"type": "string"
												},
												"PackageQuantity": {
													"type": "number"
												},
												"Text": {
													"type": "null"
												},
												"LineType": {
													"type": "string"
												},
												"COGSCostingCode": {
													"type": "string"
												},
												"COGSAccountCode": {
													"type": "string"
												},
												"ChangeAssemlyBoMWarehouse": {
													"type": "string"
												},
												"GrossBuyPrice": {
													"type": "number"
												},
												"GrossBase": {
													"type": "integer"
												},
												"GrossProfitTotalBasePrice": {
													"type": "number"
												},
												"CostingCode2": {
													"type": "null"
												},
												"CostingCode3": {
													"type": "null"
												},
												"CostingCode4": {
													"type": "null"
												},
												"CostingCode5": {
													"type": "null"
												},
												"ItemDetails": {
													"type": "null"
												},
												"LocationCode": {
													"type": "null"
												},
												"ActualDeliveryDate": {
													"type": "string"
												},
												"RemainingOpenQuantity": {
													"type": "number"
												},
												"OpenAmount": {
													"type": "number"
												},
												"OpenAmountFC": {
													"type": "number"
												},
												"OpenAmountSC": {
													"type": "number"
												},
												"ExLineNo": {
													"type": "null"
												},
												"RequiredDate": {
													"type": "null"
												},
												"RequiredQuantity": {
													"type": "null"
												},
												"COGSCostingCode2": {
													"type": "null"
												},
												"COGSCostingCode3": {
													"type": "null"
												},
												"COGSCostingCode4": {
													"type": "null"
												},
												"COGSCostingCode5": {
													"type": "null"
												},
												"CSTforIPI": {
													"type": "null"
												},
												"CSTforPIS": {
													"type": "null"
												},
												"CSTforCOFINS": {
													"type": "null"
												},
												"CreditOriginCode": {
													"type": "null"
												},
												"WithoutInventoryMovement": {
													"type": "string"
												},
												"AgreementNo": {
													"type": "null"
												},
												"AgreementRowNumber": {
													"type": "null"
												},
												"ActualBaseEntry": {
													"type": "null"
												},
												"ActualBaseLine": {
													"type": "null"
												},
												"DocEntry": {
													"type": "integer"
												},
												"Surpluses": {
													"type": "null"
												},
												"DefectAndBreakup": {
													"type": "null"
												},
												"Shortages": {
													"type": "null"
												},
												"ConsiderQuantity": {
													"type": "string"
												},
												"PartialRetirement": {
													"type": "string"
												},
												"RetirementQuantity": {
													"type": "null"
												},
												"RetirementAPC": {
													"type": "null"
												},
												"ThirdParty": {
													"type": "string"
												},
												"PoNum": {
													"type": "null"
												},
												"PoItmNum": {
													"type": "null"
												},
												"ExpenseType": {
													"type": "null"
												},
												"ReceiptNumber": {
													"type": "null"
												},
												"ExpenseOperationType": {
													"type": "null"
												},
												"FederalTaxID": {
													"type": "null"
												},
												"GrossProfit": {
													"type": "number"
												},
												"GrossProfitFC": {
													"type": "number"
												},
												"GrossProfitSC": {
													"type": "number"
												},
												"PriceSource": {
													"type": "string"
												},
												"StgSeqNum": {
													"type": "null"
												},
												"StgEntry": {
													"type": "null"
												},
												"StgDesc": {
													"type": "null"
												},
												"UoMEntry": {
													"type": "integer"
												},
												"UoMCode": {
													"type": "string"
												},
												"InventoryQuantity": {
													"type": "number"
												},
												"RemainingOpenInventoryQuantity": {
													"type": "number"
												},
												"ParentLineNum": {
													"type": "null"
												},
												"Incoterms": {
													"type": "integer"
												},
												"TransportMode": {
													"type": "integer"
												},
												"NatureOfTransaction": {
													"type": "null"
												},
												"DestinationCountryForImport": {
													"type": "null"
												},
												"DestinationRegionForImport": {
													"type": "null"
												},
												"OriginCountryForExport": {
													"type": "null"
												},
												"OriginRegionForExport": {
													"type": "null"
												},
												"ItemType": {
													"type": "string"
												},
												"ChangeInventoryQuantityIndependently": {
													"type": "string"
												},
												"FreeOfChargeBP": {
													"type": "null"
												},
												"SACEntry": {
													"type": "null"
												},
												"HSNEntry": {
													"type": "null"
												},
												"GrossPrice": {
													"type": "number"
												},
												"GrossTotal": {
													"type": "number"
												},
												"GrossTotalFC": {
													"type": "number"
												},
												"GrossTotalSC": {
													"type": "number"
												},
												"NCMCode": {
													"type": "integer"
												},
												"NVECode": {
													"type": "null"
												},
												"IndEscala": {
													"type": "string"
												},
												"CtrSealQty": {
													"type": "null"
												},
												"CNJPMan": {
													"type": "null"
												},
												"CESTCode": {
													"type": "null"
												},
												"UFFiscalBenefitCode": {
													"type": "null"
												},
												"ReverseCharge": {
													"type": "string"
												},
												"ShipToCode": {
													"type": "string"
												},
												"ShipToDescription": {
													"type": "string"
												},
												"ExternalCalcTaxRate": {
													"type": "null"
												},
												"ExternalCalcTaxAmount": {
													"type": "null"
												},
												"ExternalCalcTaxAmountFC": {
													"type": "null"
												},
												"ExternalCalcTaxAmountSC": {
													"type": "null"
												},
												"StandardItemIdentification": {
													"type": "null"
												},
												"CommodityClassification": {
													"type": "null"
												},
												"UnencumberedReason": {
													"type": "null"
												},
												"CUSplit": {
													"type": "string"
												},
												"U_Installasjon": {
													"type": "string"
												},
												"U_ParentItem": {
													"type": "null"
												},
												"U_Codebars": {
													"type": "null"
												},
												"U_PlannedQty": {
													"type": "number"
												},
												"U_AIG_IN": {
													"type": "null"
												},
												"U_AIG_IA": {
													"type": "null"
												},
												"U_AIG_PD": {
													"type": "null"
												},
												"U_AIG_PDate": {
													"type": "null"
												},
												"U_AIG_ID": {
													"type": "null"
												},
												"U_PItemCode": {
													"type": "null"
												},
												"U_AIG_IR": {
													"type": "null"
												},
												"U_AIG_DDate": {
													"type": "null"
												},
												"U_U_AIG_DDate": {
													"type": "null"
												},
												"U_DSS_Charge": {
													"type": "null"
												},
												"U_DSS_ProdOrdr": {
													"type": "null"
												},
												"LineTaxJurisdictions": {
													"type": "array"
												},
												"ExportProcesses": {
													"type": "array"
												},
												"EBooksDetails": {
													"type": "array"
												},
												"DocumentLineAdditionalExpenses": {
													"type": "array"
												},
												"WithholdingTaxLines": {
													"type": "array"
												},
												"SerialNumbers": {
													"type": "array"
												},
												"BatchNumbers": {
													"type": "array"
												},
												"CCDNumbers": {
													"type": "array"
												},
												"DocumentLinesBinAllocations": {
													"type": "array"
												}
											}
										}
									},
									"EWayBillDetails": {
										"type": "object"
									},
									"ElectronicProtocols": {
										"type": "array"
									},
									"DocumentAdditionalExpenses": {
										"type": "array"
									},
									"WithholdingTaxDataWTXCollection": {
										"type": "array"
									},
									"WithholdingTaxDataCollection": {
										"type": "array"
									},
									"DocumentPackages": {
										"type": "array"
									},
									"DocumentSpecialLines": {
										"type": "array"
									},
									"DocumentInstallments": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"DueDate": {
													"type": "string"
												},
												"Percentage": {
													"type": "number"
												},
												"Total": {
													"type": "number"
												},
												"LastDunningDate": {
													"type": "null"
												},
												"DunningLevel": {
													"type": "integer"
												},
												"TotalFC": {
													"type": "null"
												},
												"InstallmentId": {
													"type": "integer"
												},
												"PaymentOrdered": {
													"type": "string"
												}
											}
										}
									},
									"DownPaymentsToDraw": {
										"type": "array"
									},
									"TaxExtension": {
										"type": "object"
									},
									"AddressExtension": {
										"type": "object"
									},
									"DocumentReferences": {
										"type": "array"
									}
								}
							}
						},
						"@odata.nextLink": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bo_json_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_json",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "salesPersons_2024-06-12T11:05:50.5160254Z.json",
						"folderPath": "SalesPersons",
						"container": "bondura"
					},
					"encodingName": "UTF-8"
				},
				"schema": {
					"type": "object",
					"properties": {
						"@odata.context": {
							"type": "string"
						},
						"value": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"@odata.etag": {
										"type": "string"
									},
									"DocEntry": {
										"type": "integer"
									},
									"DocNum": {
										"type": "integer"
									},
									"DocType": {
										"type": "string"
									},
									"HandWritten": {
										"type": "string"
									},
									"Printed": {
										"type": "string"
									},
									"DocDate": {
										"type": "string"
									},
									"DocDueDate": {
										"type": "string"
									},
									"CardCode": {
										"type": "string"
									},
									"CardName": {
										"type": "string"
									},
									"Address": {
										"type": "string"
									},
									"NumAtCard": {
										"type": "string"
									},
									"DocTotal": {
										"type": "number"
									},
									"AttachmentEntry": {
										"type": "null"
									},
									"DocCurrency": {
										"type": "string"
									},
									"DocRate": {
										"type": "number"
									},
									"Reference1": {
										"type": "string"
									},
									"Reference2": {
										"type": "null"
									},
									"Comments": {
										"type": "string"
									},
									"JournalMemo": {
										"type": "string"
									},
									"PaymentGroupCode": {
										"type": "integer"
									},
									"DocTime": {
										"type": "string"
									},
									"SalesPersonCode": {
										"type": "integer"
									},
									"TransportationCode": {
										"type": "integer"
									},
									"Confirmed": {
										"type": "string"
									},
									"ImportFileNum": {
										"type": "null"
									},
									"SummeryType": {
										"type": "string"
									},
									"ContactPersonCode": {
										"type": "integer"
									},
									"ShowSCN": {
										"type": "string"
									},
									"Series": {
										"type": "integer"
									},
									"TaxDate": {
										"type": "string"
									},
									"PartialSupply": {
										"type": "string"
									},
									"DocObjectCode": {
										"type": "string"
									},
									"ShipToCode": {
										"type": "string"
									},
									"Indicator": {
										"type": "null"
									},
									"FederalTaxID": {
										"type": "string"
									},
									"DiscountPercent": {
										"type": "number"
									},
									"PaymentReference": {
										"type": "string"
									},
									"CreationDate": {
										"type": "string"
									},
									"UpdateDate": {
										"type": "string"
									},
									"FinancialPeriod": {
										"type": "integer"
									},
									"UserSign": {
										"type": "integer"
									},
									"TransNum": {
										"type": "integer"
									},
									"VatSum": {
										"type": "number"
									},
									"VatSumSys": {
										"type": "number"
									},
									"VatSumFc": {
										"type": "number"
									},
									"NetProcedure": {
										"type": "string"
									},
									"DocTotalFc": {
										"type": "number"
									},
									"DocTotalSys": {
										"type": "number"
									},
									"Form1099": {
										"type": "null"
									},
									"Box1099": {
										"type": "null"
									},
									"RevisionPo": {
										"type": "string"
									},
									"RequriedDate": {
										"type": "null"
									},
									"CancelDate": {
										"type": "null"
									},
									"BlockDunning": {
										"type": "string"
									},
									"Submitted": {
										"type": "string"
									},
									"Segment": {
										"type": "integer"
									},
									"PickStatus": {
										"type": "string"
									},
									"Pick": {
										"type": "string"
									},
									"PaymentMethod": {
										"type": "string"
									},
									"PaymentBlock": {
										"type": "string"
									},
									"PaymentBlockEntry": {
										"type": "null"
									},
									"CentralBankIndicator": {
										"type": "null"
									},
									"MaximumCashDiscount": {
										"type": "string"
									},
									"Reserve": {
										"type": "string"
									},
									"Project": {
										"type": "null"
									},
									"ExemptionValidityDateFrom": {
										"type": "null"
									},
									"ExemptionValidityDateTo": {
										"type": "null"
									},
									"WareHouseUpdateType": {
										"type": "string"
									},
									"Rounding": {
										"type": "string"
									},
									"ExternalCorrectedDocNum": {
										"type": "null"
									},
									"InternalCorrectedDocNum": {
										"type": "null"
									},
									"NextCorrectingDocument": {
										"type": "null"
									},
									"DeferredTax": {
										"type": "string"
									},
									"TaxExemptionLetterNum": {
										"type": "null"
									},
									"WTApplied": {
										"type": "number"
									},
									"WTAppliedFC": {
										"type": "number"
									},
									"BillOfExchangeReserved": {
										"type": "string"
									},
									"AgentCode": {
										"type": "null"
									},
									"WTAppliedSC": {
										"type": "number"
									},
									"TotalEqualizationTax": {
										"type": "number"
									},
									"TotalEqualizationTaxFC": {
										"type": "number"
									},
									"TotalEqualizationTaxSC": {
										"type": "number"
									},
									"NumberOfInstallments": {
										"type": "integer"
									},
									"ApplyTaxOnFirstInstallment": {
										"type": "string"
									},
									"WTNonSubjectAmount": {
										"type": "number"
									},
									"WTNonSubjectAmountSC": {
										"type": "number"
									},
									"WTNonSubjectAmountFC": {
										"type": "number"
									},
									"WTExemptedAmount": {
										"type": "number"
									},
									"WTExemptedAmountSC": {
										"type": "number"
									},
									"WTExemptedAmountFC": {
										"type": "number"
									},
									"BaseAmount": {
										"type": "number"
									},
									"BaseAmountSC": {
										"type": "number"
									},
									"BaseAmountFC": {
										"type": "number"
									},
									"WTAmount": {
										"type": "number"
									},
									"WTAmountSC": {
										"type": "number"
									},
									"WTAmountFC": {
										"type": "number"
									},
									"VatDate": {
										"type": "null"
									},
									"DocumentsOwner": {
										"type": "integer"
									},
									"FolioPrefixString": {
										"type": "null"
									},
									"FolioNumber": {
										"type": "null"
									},
									"DocumentSubType": {
										"type": "string"
									},
									"BPChannelCode": {
										"type": "null"
									},
									"BPChannelContact": {
										"type": "null"
									},
									"Address2": {
										"type": "string"
									},
									"DocumentStatus": {
										"type": "string"
									},
									"PeriodIndicator": {
										"type": "string"
									},
									"PayToCode": {
										"type": "string"
									},
									"ManualNumber": {
										"type": "null"
									},
									"UseShpdGoodsAct": {
										"type": "string"
									},
									"IsPayToBank": {
										"type": "string"
									},
									"PayToBankCountry": {
										"type": "null"
									},
									"PayToBankCode": {
										"type": "null"
									},
									"PayToBankAccountNo": {
										"type": "null"
									},
									"PayToBankBranch": {
										"type": "null"
									},
									"BPL_IDAssignedToInvoice": {
										"type": "null"
									},
									"DownPayment": {
										"type": "number"
									},
									"ReserveInvoice": {
										"type": "string"
									},
									"LanguageCode": {
										"type": "integer"
									},
									"TrackingNumber": {
										"type": "null"
									},
									"PickRemark": {
										"type": "string"
									},
									"ClosingDate": {
										"type": "null"
									},
									"SequenceCode": {
										"type": "null"
									},
									"SequenceSerial": {
										"type": "null"
									},
									"SeriesString": {
										"type": "null"
									},
									"SubSeriesString": {
										"type": "null"
									},
									"SequenceModel": {
										"type": "string"
									},
									"UseCorrectionVATGroup": {
										"type": "string"
									},
									"TotalDiscount": {
										"type": "number"
									},
									"DownPaymentAmount": {
										"type": "number"
									},
									"DownPaymentPercentage": {
										"type": "number"
									},
									"DownPaymentType": {
										"type": "string"
									},
									"DownPaymentAmountSC": {
										"type": "number"
									},
									"DownPaymentAmountFC": {
										"type": "number"
									},
									"VatPercent": {
										"type": "number"
									},
									"ServiceGrossProfitPercent": {
										"type": "null"
									},
									"OpeningRemarks": {
										"type": "string"
									},
									"ClosingRemarks": {
										"type": "string"
									},
									"RoundingDiffAmount": {
										"type": "number"
									},
									"RoundingDiffAmountFC": {
										"type": "number"
									},
									"RoundingDiffAmountSC": {
										"type": "number"
									},
									"Cancelled": {
										"type": "string"
									},
									"SignatureInputMessage": {
										"type": "null"
									},
									"SignatureDigest": {
										"type": "null"
									},
									"CertificationNumber": {
										"type": "null"
									},
									"PrivateKeyVersion": {
										"type": "null"
									},
									"ControlAccount": {
										"type": "string"
									},
									"InsuranceOperation347": {
										"type": "string"
									},
									"ArchiveNonremovableSalesQuotation": {
										"type": "string"
									},
									"GTSChecker": {
										"type": "null"
									},
									"GTSPayee": {
										"type": "null"
									},
									"ExtraMonth": {
										"type": "integer"
									},
									"ExtraDays": {
										"type": "integer"
									},
									"CashDiscountDateOffset": {
										"type": "integer"
									},
									"StartFrom": {
										"type": "string"
									},
									"NTSApproved": {
										"type": "string"
									},
									"ETaxWebSite": {
										"type": "null"
									},
									"ETaxNumber": {
										"type": "null"
									},
									"NTSApprovedNumber": {
										"type": "null"
									},
									"EDocGenerationType": {
										"type": "string"
									},
									"EDocSeries": {
										"type": "null"
									},
									"EDocNum": {
										"type": "null"
									},
									"EDocExportFormat": {
										"type": "null"
									},
									"EDocStatus": {
										"type": "string"
									},
									"EDocErrorCode": {
										"type": "null"
									},
									"EDocErrorMessage": {
										"type": "null"
									},
									"DownPaymentStatus": {
										"type": "string"
									},
									"GroupSeries": {
										"type": "null"
									},
									"GroupNumber": {
										"type": "null"
									},
									"GroupHandWritten": {
										"type": "string"
									},
									"ReopenOriginalDocument": {
										"type": "null"
									},
									"ReopenManuallyClosedOrCanceledDocument": {
										"type": "null"
									},
									"CreateOnlineQuotation": {
										"type": "string"
									},
									"POSEquipmentNumber": {
										"type": "null"
									},
									"POSManufacturerSerialNumber": {
										"type": "null"
									},
									"POSCashierNumber": {
										"type": "null"
									},
									"ApplyCurrentVATRatesForDownPaymentsToDraw": {
										"type": "string"
									},
									"ClosingOption": {
										"type": "string"
									},
									"SpecifiedClosingDate": {
										"type": "null"
									},
									"OpenForLandedCosts": {
										"type": "string"
									},
									"AuthorizationStatus": {
										"type": "string"
									},
									"TotalDiscountFC": {
										"type": "number"
									},
									"TotalDiscountSC": {
										"type": "number"
									},
									"RelevantToGTS": {
										"type": "string"
									},
									"BPLName": {
										"type": "null"
									},
									"VATRegNum": {
										"type": "null"
									},
									"AnnualInvoiceDeclarationReference": {
										"type": "null"
									},
									"Supplier": {
										"type": "null"
									},
									"Releaser": {
										"type": "null"
									},
									"Receiver": {
										"type": "null"
									},
									"BlanketAgreementNumber": {
										"type": "null"
									},
									"IsAlteration": {
										"type": "string"
									},
									"CancelStatus": {
										"type": "string"
									},
									"AssetValueDate": {
										"type": "null"
									},
									"InvoicePayment": {
										"type": "string"
									},
									"DocumentDelivery": {
										"type": "string"
									},
									"AuthorizationCode": {
										"type": "null"
									},
									"StartDeliveryDate": {
										"type": "null"
									},
									"StartDeliveryTime": {
										"type": "null"
									},
									"EndDeliveryDate": {
										"type": "null"
									},
									"EndDeliveryTime": {
										"type": "null"
									},
									"VehiclePlate": {
										"type": "null"
									},
									"ATDocumentType": {
										"type": "null"
									},
									"ElecCommStatus": {
										"type": "null"
									},
									"ElecCommMessage": {
										"type": "null"
									},
									"ReuseDocumentNum": {
										"type": "string"
									},
									"ReuseNotaFiscalNum": {
										"type": "string"
									},
									"PrintSEPADirect": {
										"type": "string"
									},
									"FiscalDocNum": {
										"type": "null"
									},
									"POSDailySummaryNo": {
										"type": "null"
									},
									"POSReceiptNo": {
										"type": "null"
									},
									"PointOfIssueCode": {
										"type": "null"
									},
									"Letter": {
										"type": "null"
									},
									"FolioNumberFrom": {
										"type": "null"
									},
									"FolioNumberTo": {
										"type": "null"
									},
									"InterimType": {
										"type": "string"
									},
									"RelatedType": {
										"type": "integer"
									},
									"RelatedEntry": {
										"type": "null"
									},
									"SAPPassport": {
										"type": "null"
									},
									"DocumentTaxID": {
										"type": "null"
									},
									"DateOfReportingControlStatementVAT": {
										"type": "null"
									},
									"ReportingSectionControlStatementVAT": {
										"type": "null"
									},
									"ExcludeFromTaxReportControlStatementVAT": {
										"type": "string"
									},
									"POS_CashRegister": {
										"type": "null"
									},
									"UpdateTime": {
										"type": "string"
									},
									"CreateQRCodeFrom": {
										"type": "null"
									},
									"PriceMode": {
										"type": "null"
									},
									"Revision": {
										"type": "string"
									},
									"OriginalRefNo": {
										"type": "null"
									},
									"OriginalRefDate": {
										"type": "null"
									},
									"GSTTransactionType": {
										"type": "null"
									},
									"OriginalCreditOrDebitNo": {
										"type": "null"
									},
									"OriginalCreditOrDebitDate": {
										"type": "null"
									},
									"ECommerceOperator": {
										"type": "null"
									},
									"ECommerceGSTIN": {
										"type": "null"
									},
									"ShipFrom": {
										"type": "string"
									},
									"CommissionTrade": {
										"type": "string"
									},
									"CommissionTradeReturn": {
										"type": "string"
									},
									"UseBillToAddrToDetermineTax": {
										"type": "null"
									},
									"IssuingReason": {
										"type": "integer"
									},
									"Cig": {
										"type": "null"
									},
									"Cup": {
										"type": "null"
									},
									"EDocType": {
										"type": "string"
									},
									"FCEAsPaymentMeans": {
										"type": "string"
									},
									"PaidToDate": {
										"type": "number"
									},
									"PaidToDateFC": {
										"type": "number"
									},
									"PaidToDateSys": {
										"type": "number"
									},
									"BaseType": {
										"type": "integer"
									},
									"BaseEntry": {
										"type": "null"
									},
									"FatherCard": {
										"type": "null"
									},
									"FatherType": {
										"type": "string"
									},
									"ShipState": {
										"type": "null"
									},
									"ShipPlace": {
										"type": "null"
									},
									"CustOffice": {
										"type": "null"
									},
									"FCI": {
										"type": "null"
									},
									"AddLegIn": {
										"type": "null"
									},
									"LegTextF": {
										"type": "null"
									},
									"DANFELgTxt": {
										"type": "null"
									},
									"IndFinal": {
										"type": "string"
									},
									"DataVersion": {
										"type": "integer"
									},
									"LastPageFolioNumber": {
										"type": "null"
									},
									"U_AIG_KID": {
										"type": "null"
									},
									"U_Ordrenummer": {
										"type": "null"
									},
									"U_esurl": {
										"type": "null"
									},
									"U_sluttkunde": {
										"type": "null"
									},
									"U_Levbet": {
										"type": "null"
									},
									"U_Sted": {
										"type": "null"
									},
									"U_Opperk": {
										"type": "null"
									},
									"U_DSS_SendStatus": {
										"type": "integer"
									},
									"U_DSS_EHFBuyersRef": {
										"type": "null"
									},
									"Document_ApprovalRequests": {
										"type": "array"
									},
									"DocumentLines": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"LineNum": {
													"type": "integer"
												},
												"ItemCode": {
													"type": "string"
												},
												"ItemDescription": {
													"type": "string"
												},
												"Quantity": {
													"type": "number"
												},
												"ShipDate": {
													"type": "string"
												},
												"Price": {
													"type": "number"
												},
												"PriceAfterVAT": {
													"type": "number"
												},
												"Currency": {
													"type": "string"
												},
												"Rate": {
													"type": "number"
												},
												"DiscountPercent": {
													"type": "number"
												},
												"VendorNum": {
													"type": "string"
												},
												"SerialNum": {
													"type": "null"
												},
												"WarehouseCode": {
													"type": "string"
												},
												"SalesPersonCode": {
													"type": "integer"
												},
												"CommisionPercent": {
													"type": "number"
												},
												"TreeType": {
													"type": "string"
												},
												"AccountCode": {
													"type": "string"
												},
												"UseBaseUnits": {
													"type": "string"
												},
												"SupplierCatNum": {
													"type": "string"
												},
												"CostingCode": {
													"type": "string"
												},
												"ProjectCode": {
													"type": "string"
												},
												"BarCode": {
													"type": "string"
												},
												"VatGroup": {
													"type": "string"
												},
												"Height1": {
													"type": "number"
												},
												"Hight1Unit": {
													"type": "null"
												},
												"Height2": {
													"type": "number"
												},
												"Height2Unit": {
													"type": "null"
												},
												"Lengh1": {
													"type": "number"
												},
												"Lengh1Unit": {
													"type": "null"
												},
												"Lengh2": {
													"type": "number"
												},
												"Lengh2Unit": {
													"type": "null"
												},
												"Weight1": {
													"type": "number"
												},
												"Weight1Unit": {
													"type": "null"
												},
												"Weight2": {
													"type": "number"
												},
												"Weight2Unit": {
													"type": "null"
												},
												"Factor1": {
													"type": "number"
												},
												"Factor2": {
													"type": "number"
												},
												"Factor3": {
													"type": "number"
												},
												"Factor4": {
													"type": "number"
												},
												"BaseType": {
													"type": "integer"
												},
												"BaseEntry": {
													"type": "integer"
												},
												"BaseLine": {
													"type": "integer"
												},
												"Volume": {
													"type": "number"
												},
												"VolumeUnit": {
													"type": "integer"
												},
												"Width1": {
													"type": "number"
												},
												"Width1Unit": {
													"type": "null"
												},
												"Width2": {
													"type": "number"
												},
												"Width2Unit": {
													"type": "null"
												},
												"Address": {
													"type": "string"
												},
												"TaxCode": {
													"type": "null"
												},
												"TaxType": {
													"type": "string"
												},
												"TaxLiable": {
													"type": "string"
												},
												"PickStatus": {
													"type": "string"
												},
												"PickQuantity": {
													"type": "number"
												},
												"PickListIdNumber": {
													"type": "null"
												},
												"OriginalItem": {
													"type": "string"
												},
												"BackOrder": {
													"type": "string"
												},
												"FreeText": {
													"type": "null"
												},
												"ShippingMethod": {
													"type": "integer"
												},
												"POTargetNum": {
													"type": "null"
												},
												"POTargetEntry": {
													"type": "string"
												},
												"POTargetRowNum": {
													"type": "null"
												},
												"CorrectionInvoiceItem": {
													"type": "string"
												},
												"CorrInvAmountToStock": {
													"type": "number"
												},
												"CorrInvAmountToDiffAcct": {
													"type": "number"
												},
												"AppliedTax": {
													"type": "number"
												},
												"AppliedTaxFC": {
													"type": "number"
												},
												"AppliedTaxSC": {
													"type": "number"
												},
												"WTLiable": {
													"type": "string"
												},
												"DeferredTax": {
													"type": "string"
												},
												"EqualizationTaxPercent": {
													"type": "number"
												},
												"TotalEqualizationTax": {
													"type": "number"
												},
												"TotalEqualizationTaxFC": {
													"type": "number"
												},
												"TotalEqualizationTaxSC": {
													"type": "number"
												},
												"NetTaxAmount": {
													"type": "number"
												},
												"NetTaxAmountFC": {
													"type": "number"
												},
												"NetTaxAmountSC": {
													"type": "number"
												},
												"MeasureUnit": {
													"type": "string"
												},
												"UnitsOfMeasurment": {
													"type": "number"
												},
												"LineTotal": {
													"type": "number"
												},
												"TaxPercentagePerRow": {
													"type": "number"
												},
												"TaxTotal": {
													"type": "number"
												},
												"ConsumerSalesForecast": {
													"type": "string"
												},
												"ExciseAmount": {
													"type": "number"
												},
												"TaxPerUnit": {
													"type": "number"
												},
												"TotalInclTax": {
													"type": "number"
												},
												"CountryOrg": {
													"type": "string"
												},
												"SWW": {
													"type": "string"
												},
												"TransactionType": {
													"type": "null"
												},
												"DistributeExpense": {
													"type": "string"
												},
												"RowTotalFC": {
													"type": "number"
												},
												"RowTotalSC": {
													"type": "number"
												},
												"LastBuyInmPrice": {
													"type": "number"
												},
												"LastBuyDistributeSumFc": {
													"type": "number"
												},
												"LastBuyDistributeSumSc": {
													"type": "number"
												},
												"LastBuyDistributeSum": {
													"type": "number"
												},
												"StockDistributesumForeign": {
													"type": "number"
												},
												"StockDistributesumSystem": {
													"type": "number"
												},
												"StockDistributesum": {
													"type": "number"
												},
												"StockInmPrice": {
													"type": "number"
												},
												"PickStatusEx": {
													"type": "string"
												},
												"TaxBeforeDPM": {
													"type": "number"
												},
												"TaxBeforeDPMFC": {
													"type": "number"
												},
												"TaxBeforeDPMSC": {
													"type": "number"
												},
												"CFOPCode": {
													"type": "null"
												},
												"CSTCode": {
													"type": "null"
												},
												"Usage": {
													"type": "null"
												},
												"TaxOnly": {
													"type": "string"
												},
												"VisualOrder": {
													"type": "integer"
												},
												"BaseOpenQuantity": {
													"type": "number"
												},
												"UnitPrice": {
													"type": "number"
												},
												"LineStatus": {
													"type": "string"
												},
												"PackageQuantity": {
													"type": "number"
												},
												"Text": {
													"type": "null"
												},
												"LineType": {
													"type": "string"
												},
												"COGSCostingCode": {
													"type": "string"
												},
												"COGSAccountCode": {
													"type": "string"
												},
												"ChangeAssemlyBoMWarehouse": {
													"type": "string"
												},
												"GrossBuyPrice": {
													"type": "number"
												},
												"GrossBase": {
													"type": "integer"
												},
												"GrossProfitTotalBasePrice": {
													"type": "number"
												},
												"CostingCode2": {
													"type": "null"
												},
												"CostingCode3": {
													"type": "null"
												},
												"CostingCode4": {
													"type": "null"
												},
												"CostingCode5": {
													"type": "null"
												},
												"ItemDetails": {
													"type": "null"
												},
												"LocationCode": {
													"type": "null"
												},
												"ActualDeliveryDate": {
													"type": "string"
												},
												"RemainingOpenQuantity": {
													"type": "number"
												},
												"OpenAmount": {
													"type": "number"
												},
												"OpenAmountFC": {
													"type": "number"
												},
												"OpenAmountSC": {
													"type": "number"
												},
												"ExLineNo": {
													"type": "null"
												},
												"RequiredDate": {
													"type": "null"
												},
												"RequiredQuantity": {
													"type": "null"
												},
												"COGSCostingCode2": {
													"type": "null"
												},
												"COGSCostingCode3": {
													"type": "null"
												},
												"COGSCostingCode4": {
													"type": "null"
												},
												"COGSCostingCode5": {
													"type": "null"
												},
												"CSTforIPI": {
													"type": "null"
												},
												"CSTforPIS": {
													"type": "null"
												},
												"CSTforCOFINS": {
													"type": "null"
												},
												"CreditOriginCode": {
													"type": "null"
												},
												"WithoutInventoryMovement": {
													"type": "string"
												},
												"AgreementNo": {
													"type": "null"
												},
												"AgreementRowNumber": {
													"type": "null"
												},
												"ActualBaseEntry": {
													"type": "null"
												},
												"ActualBaseLine": {
													"type": "null"
												},
												"DocEntry": {
													"type": "integer"
												},
												"Surpluses": {
													"type": "null"
												},
												"DefectAndBreakup": {
													"type": "null"
												},
												"Shortages": {
													"type": "null"
												},
												"ConsiderQuantity": {
													"type": "string"
												},
												"PartialRetirement": {
													"type": "string"
												},
												"RetirementQuantity": {
													"type": "null"
												},
												"RetirementAPC": {
													"type": "null"
												},
												"ThirdParty": {
													"type": "string"
												},
												"PoNum": {
													"type": "null"
												},
												"PoItmNum": {
													"type": "null"
												},
												"ExpenseType": {
													"type": "null"
												},
												"ReceiptNumber": {
													"type": "null"
												},
												"ExpenseOperationType": {
													"type": "null"
												},
												"FederalTaxID": {
													"type": "null"
												},
												"GrossProfit": {
													"type": "number"
												},
												"GrossProfitFC": {
													"type": "number"
												},
												"GrossProfitSC": {
													"type": "number"
												},
												"PriceSource": {
													"type": "string"
												},
												"StgSeqNum": {
													"type": "null"
												},
												"StgEntry": {
													"type": "null"
												},
												"StgDesc": {
													"type": "null"
												},
												"UoMEntry": {
													"type": "integer"
												},
												"UoMCode": {
													"type": "string"
												},
												"InventoryQuantity": {
													"type": "number"
												},
												"RemainingOpenInventoryQuantity": {
													"type": "number"
												},
												"ParentLineNum": {
													"type": "null"
												},
												"Incoterms": {
													"type": "integer"
												},
												"TransportMode": {
													"type": "integer"
												},
												"NatureOfTransaction": {
													"type": "null"
												},
												"DestinationCountryForImport": {
													"type": "null"
												},
												"DestinationRegionForImport": {
													"type": "null"
												},
												"OriginCountryForExport": {
													"type": "null"
												},
												"OriginRegionForExport": {
													"type": "null"
												},
												"ItemType": {
													"type": "string"
												},
												"ChangeInventoryQuantityIndependently": {
													"type": "string"
												},
												"FreeOfChargeBP": {
													"type": "null"
												},
												"SACEntry": {
													"type": "null"
												},
												"HSNEntry": {
													"type": "null"
												},
												"GrossPrice": {
													"type": "number"
												},
												"GrossTotal": {
													"type": "number"
												},
												"GrossTotalFC": {
													"type": "number"
												},
												"GrossTotalSC": {
													"type": "number"
												},
												"NCMCode": {
													"type": "integer"
												},
												"NVECode": {
													"type": "null"
												},
												"IndEscala": {
													"type": "string"
												},
												"CtrSealQty": {
													"type": "null"
												},
												"CNJPMan": {
													"type": "null"
												},
												"CESTCode": {
													"type": "null"
												},
												"UFFiscalBenefitCode": {
													"type": "null"
												},
												"ReverseCharge": {
													"type": "string"
												},
												"ShipToCode": {
													"type": "string"
												},
												"ShipToDescription": {
													"type": "string"
												},
												"ExternalCalcTaxRate": {
													"type": "null"
												},
												"ExternalCalcTaxAmount": {
													"type": "null"
												},
												"ExternalCalcTaxAmountFC": {
													"type": "null"
												},
												"ExternalCalcTaxAmountSC": {
													"type": "null"
												},
												"StandardItemIdentification": {
													"type": "null"
												},
												"CommodityClassification": {
													"type": "null"
												},
												"UnencumberedReason": {
													"type": "null"
												},
												"CUSplit": {
													"type": "string"
												},
												"U_Installasjon": {
													"type": "string"
												},
												"U_ParentItem": {
													"type": "null"
												},
												"U_Codebars": {
													"type": "null"
												},
												"U_PlannedQty": {
													"type": "number"
												},
												"U_AIG_IN": {
													"type": "null"
												},
												"U_AIG_IA": {
													"type": "null"
												},
												"U_AIG_PD": {
													"type": "null"
												},
												"U_AIG_PDate": {
													"type": "null"
												},
												"U_AIG_ID": {
													"type": "null"
												},
												"U_PItemCode": {
													"type": "null"
												},
												"U_AIG_IR": {
													"type": "null"
												},
												"U_AIG_DDate": {
													"type": "null"
												},
												"U_U_AIG_DDate": {
													"type": "null"
												},
												"U_DSS_Charge": {
													"type": "null"
												},
												"U_DSS_ProdOrdr": {
													"type": "null"
												},
												"LineTaxJurisdictions": {
													"type": "array"
												},
												"ExportProcesses": {
													"type": "array"
												},
												"EBooksDetails": {
													"type": "array"
												},
												"DocumentLineAdditionalExpenses": {
													"type": "array"
												},
												"WithholdingTaxLines": {
													"type": "array"
												},
												"SerialNumbers": {
													"type": "array"
												},
												"BatchNumbers": {
													"type": "array"
												},
												"CCDNumbers": {
													"type": "array"
												},
												"DocumentLinesBinAllocations": {
													"type": "array"
												}
											}
										}
									},
									"EWayBillDetails": {
										"type": "object"
									},
									"ElectronicProtocols": {
										"type": "array"
									},
									"DocumentAdditionalExpenses": {
										"type": "array"
									},
									"WithholdingTaxDataWTXCollection": {
										"type": "array"
									},
									"WithholdingTaxDataCollection": {
										"type": "array"
									},
									"DocumentPackages": {
										"type": "array"
									},
									"DocumentSpecialLines": {
										"type": "array"
									},
									"DocumentInstallments": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"DueDate": {
													"type": "string"
												},
												"Percentage": {
													"type": "number"
												},
												"Total": {
													"type": "number"
												},
												"LastDunningDate": {
													"type": "null"
												},
												"DunningLevel": {
													"type": "integer"
												},
												"TotalFC": {
													"type": "null"
												},
												"InstallmentId": {
													"type": "integer"
												},
												"PaymentOrdered": {
													"type": "string"
												}
											}
										}
									},
									"DownPaymentsToDraw": {
										"type": "array"
									},
									"TaxExtension": {
										"type": "object"
									},
									"AddressExtension": {
										"type": "object"
									},
									"DocumentReferences": {
										"type": "array"
									}
								}
							}
						},
						"@odata.nextLink": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bo_sap_invoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "link_bo_sap",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"resPath": {
						"type": "string",
						"defaultValue": "Invoices?$skip=2622"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().resPath",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_bo_sap')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bo_sap_orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "link_bo_sap",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"QueryParam": {
						"type": "string",
						"defaultValue": "Orders"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().QueryParam",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_bo_sap')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bo_sap_parametrized')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "link_bo_sap",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ResPath": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().ResPath",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_bo_sap')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bo_sap_salepersons')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "link_bo_sap",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "SalesPersons?$skip={skip}&$top=1"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_bo_sap')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lake_uinvest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "link_DL_Uinvest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "invoices.json",
						"folderPath": "bondura_invoices",
						"fileSystem": "univestfs"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"@odata.context": {
							"type": "string"
						},
						"value": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"@odata.etag": {
										"type": "string"
									},
									"DocEntry": {
										"type": "integer"
									},
									"DocNum": {
										"type": "integer"
									},
									"DocType": {
										"type": "string"
									},
									"HandWritten": {
										"type": "string"
									},
									"Printed": {
										"type": "string"
									},
									"DocDate": {
										"type": "string"
									},
									"DocDueDate": {
										"type": "string"
									},
									"CardCode": {
										"type": "string"
									},
									"CardName": {
										"type": "string"
									},
									"Address": {
										"type": "string"
									},
									"NumAtCard": {
										"type": "string"
									},
									"DocTotal": {
										"type": "number"
									},
									"AttachmentEntry": {
										"type": "null"
									},
									"DocCurrency": {
										"type": "string"
									},
									"DocRate": {
										"type": "number"
									},
									"Reference1": {
										"type": "string"
									},
									"Reference2": {
										"type": "null"
									},
									"Comments": {
										"type": "string"
									},
									"JournalMemo": {
										"type": "string"
									},
									"PaymentGroupCode": {
										"type": "integer"
									},
									"DocTime": {
										"type": "string"
									},
									"SalesPersonCode": {
										"type": "integer"
									},
									"TransportationCode": {
										"type": "integer"
									},
									"Confirmed": {
										"type": "string"
									},
									"ImportFileNum": {
										"type": "null"
									},
									"SummeryType": {
										"type": "string"
									},
									"ContactPersonCode": {
										"type": "integer"
									},
									"ShowSCN": {
										"type": "string"
									},
									"Series": {
										"type": "integer"
									},
									"TaxDate": {
										"type": "string"
									},
									"PartialSupply": {
										"type": "string"
									},
									"DocObjectCode": {
										"type": "string"
									},
									"ShipToCode": {
										"type": "string"
									},
									"Indicator": {
										"type": "null"
									},
									"FederalTaxID": {
										"type": "string"
									},
									"DiscountPercent": {
										"type": "number"
									},
									"PaymentReference": {
										"type": "string"
									},
									"CreationDate": {
										"type": "string"
									},
									"UpdateDate": {
										"type": "string"
									},
									"FinancialPeriod": {
										"type": "integer"
									},
									"UserSign": {
										"type": "integer"
									},
									"TransNum": {
										"type": "integer"
									},
									"VatSum": {
										"type": "number"
									},
									"VatSumSys": {
										"type": "number"
									},
									"VatSumFc": {
										"type": "number"
									},
									"NetProcedure": {
										"type": "string"
									},
									"DocTotalFc": {
										"type": "number"
									},
									"DocTotalSys": {
										"type": "number"
									},
									"Form1099": {
										"type": "null"
									},
									"Box1099": {
										"type": "null"
									},
									"RevisionPo": {
										"type": "string"
									},
									"RequriedDate": {
										"type": "null"
									},
									"CancelDate": {
										"type": "null"
									},
									"BlockDunning": {
										"type": "string"
									},
									"Submitted": {
										"type": "string"
									},
									"Segment": {
										"type": "integer"
									},
									"PickStatus": {
										"type": "string"
									},
									"Pick": {
										"type": "string"
									},
									"PaymentMethod": {
										"type": "string"
									},
									"PaymentBlock": {
										"type": "string"
									},
									"PaymentBlockEntry": {
										"type": "null"
									},
									"CentralBankIndicator": {
										"type": "null"
									},
									"MaximumCashDiscount": {
										"type": "string"
									},
									"Reserve": {
										"type": "string"
									},
									"Project": {
										"type": "null"
									},
									"ExemptionValidityDateFrom": {
										"type": "null"
									},
									"ExemptionValidityDateTo": {
										"type": "null"
									},
									"WareHouseUpdateType": {
										"type": "string"
									},
									"Rounding": {
										"type": "string"
									},
									"ExternalCorrectedDocNum": {
										"type": "null"
									},
									"InternalCorrectedDocNum": {
										"type": "null"
									},
									"NextCorrectingDocument": {
										"type": "null"
									},
									"DeferredTax": {
										"type": "string"
									},
									"TaxExemptionLetterNum": {
										"type": "null"
									},
									"WTApplied": {
										"type": "number"
									},
									"WTAppliedFC": {
										"type": "number"
									},
									"BillOfExchangeReserved": {
										"type": "string"
									},
									"AgentCode": {
										"type": "null"
									},
									"WTAppliedSC": {
										"type": "number"
									},
									"TotalEqualizationTax": {
										"type": "number"
									},
									"TotalEqualizationTaxFC": {
										"type": "number"
									},
									"TotalEqualizationTaxSC": {
										"type": "number"
									},
									"NumberOfInstallments": {
										"type": "integer"
									},
									"ApplyTaxOnFirstInstallment": {
										"type": "string"
									},
									"WTNonSubjectAmount": {
										"type": "number"
									},
									"WTNonSubjectAmountSC": {
										"type": "number"
									},
									"WTNonSubjectAmountFC": {
										"type": "number"
									},
									"WTExemptedAmount": {
										"type": "number"
									},
									"WTExemptedAmountSC": {
										"type": "number"
									},
									"WTExemptedAmountFC": {
										"type": "number"
									},
									"BaseAmount": {
										"type": "number"
									},
									"BaseAmountSC": {
										"type": "number"
									},
									"BaseAmountFC": {
										"type": "number"
									},
									"WTAmount": {
										"type": "number"
									},
									"WTAmountSC": {
										"type": "number"
									},
									"WTAmountFC": {
										"type": "number"
									},
									"VatDate": {
										"type": "null"
									},
									"DocumentsOwner": {
										"type": "integer"
									},
									"FolioPrefixString": {
										"type": "null"
									},
									"FolioNumber": {
										"type": "null"
									},
									"DocumentSubType": {
										"type": "string"
									},
									"BPChannelCode": {
										"type": "null"
									},
									"BPChannelContact": {
										"type": "null"
									},
									"Address2": {
										"type": "string"
									},
									"DocumentStatus": {
										"type": "string"
									},
									"PeriodIndicator": {
										"type": "string"
									},
									"PayToCode": {
										"type": "string"
									},
									"ManualNumber": {
										"type": "null"
									},
									"UseShpdGoodsAct": {
										"type": "string"
									},
									"IsPayToBank": {
										"type": "string"
									},
									"PayToBankCountry": {
										"type": "null"
									},
									"PayToBankCode": {
										"type": "null"
									},
									"PayToBankAccountNo": {
										"type": "null"
									},
									"PayToBankBranch": {
										"type": "null"
									},
									"BPL_IDAssignedToInvoice": {
										"type": "null"
									},
									"DownPayment": {
										"type": "number"
									},
									"ReserveInvoice": {
										"type": "string"
									},
									"LanguageCode": {
										"type": "integer"
									},
									"TrackingNumber": {
										"type": "null"
									},
									"PickRemark": {
										"type": "string"
									},
									"ClosingDate": {
										"type": "null"
									},
									"SequenceCode": {
										"type": "null"
									},
									"SequenceSerial": {
										"type": "null"
									},
									"SeriesString": {
										"type": "null"
									},
									"SubSeriesString": {
										"type": "null"
									},
									"SequenceModel": {
										"type": "string"
									},
									"UseCorrectionVATGroup": {
										"type": "string"
									},
									"TotalDiscount": {
										"type": "number"
									},
									"DownPaymentAmount": {
										"type": "number"
									},
									"DownPaymentPercentage": {
										"type": "number"
									},
									"DownPaymentType": {
										"type": "string"
									},
									"DownPaymentAmountSC": {
										"type": "number"
									},
									"DownPaymentAmountFC": {
										"type": "number"
									},
									"VatPercent": {
										"type": "number"
									},
									"ServiceGrossProfitPercent": {
										"type": "null"
									},
									"OpeningRemarks": {
										"type": "string"
									},
									"ClosingRemarks": {
										"type": "string"
									},
									"RoundingDiffAmount": {
										"type": "number"
									},
									"RoundingDiffAmountFC": {
										"type": "number"
									},
									"RoundingDiffAmountSC": {
										"type": "number"
									},
									"Cancelled": {
										"type": "string"
									},
									"SignatureInputMessage": {
										"type": "null"
									},
									"SignatureDigest": {
										"type": "null"
									},
									"CertificationNumber": {
										"type": "null"
									},
									"PrivateKeyVersion": {
										"type": "null"
									},
									"ControlAccount": {
										"type": "string"
									},
									"InsuranceOperation347": {
										"type": "string"
									},
									"ArchiveNonremovableSalesQuotation": {
										"type": "string"
									},
									"GTSChecker": {
										"type": "null"
									},
									"GTSPayee": {
										"type": "null"
									},
									"ExtraMonth": {
										"type": "integer"
									},
									"ExtraDays": {
										"type": "integer"
									},
									"CashDiscountDateOffset": {
										"type": "integer"
									},
									"StartFrom": {
										"type": "string"
									},
									"NTSApproved": {
										"type": "string"
									},
									"ETaxWebSite": {
										"type": "null"
									},
									"ETaxNumber": {
										"type": "null"
									},
									"NTSApprovedNumber": {
										"type": "null"
									},
									"EDocGenerationType": {
										"type": "string"
									},
									"EDocSeries": {
										"type": "null"
									},
									"EDocNum": {
										"type": "null"
									},
									"EDocExportFormat": {
										"type": "null"
									},
									"EDocStatus": {
										"type": "string"
									},
									"EDocErrorCode": {
										"type": "null"
									},
									"EDocErrorMessage": {
										"type": "null"
									},
									"DownPaymentStatus": {
										"type": "string"
									},
									"GroupSeries": {
										"type": "null"
									},
									"GroupNumber": {
										"type": "null"
									},
									"GroupHandWritten": {
										"type": "string"
									},
									"ReopenOriginalDocument": {
										"type": "null"
									},
									"ReopenManuallyClosedOrCanceledDocument": {
										"type": "null"
									},
									"CreateOnlineQuotation": {
										"type": "string"
									},
									"POSEquipmentNumber": {
										"type": "null"
									},
									"POSManufacturerSerialNumber": {
										"type": "null"
									},
									"POSCashierNumber": {
										"type": "null"
									},
									"ApplyCurrentVATRatesForDownPaymentsToDraw": {
										"type": "string"
									},
									"ClosingOption": {
										"type": "string"
									},
									"SpecifiedClosingDate": {
										"type": "null"
									},
									"OpenForLandedCosts": {
										"type": "string"
									},
									"AuthorizationStatus": {
										"type": "string"
									},
									"TotalDiscountFC": {
										"type": "number"
									},
									"TotalDiscountSC": {
										"type": "number"
									},
									"RelevantToGTS": {
										"type": "string"
									},
									"BPLName": {
										"type": "null"
									},
									"VATRegNum": {
										"type": "null"
									},
									"AnnualInvoiceDeclarationReference": {
										"type": "null"
									},
									"Supplier": {
										"type": "null"
									},
									"Releaser": {
										"type": "null"
									},
									"Receiver": {
										"type": "null"
									},
									"BlanketAgreementNumber": {
										"type": "null"
									},
									"IsAlteration": {
										"type": "string"
									},
									"CancelStatus": {
										"type": "string"
									},
									"AssetValueDate": {
										"type": "null"
									},
									"InvoicePayment": {
										"type": "string"
									},
									"DocumentDelivery": {
										"type": "string"
									},
									"AuthorizationCode": {
										"type": "null"
									},
									"StartDeliveryDate": {
										"type": "null"
									},
									"StartDeliveryTime": {
										"type": "null"
									},
									"EndDeliveryDate": {
										"type": "null"
									},
									"EndDeliveryTime": {
										"type": "null"
									},
									"VehiclePlate": {
										"type": "null"
									},
									"ATDocumentType": {
										"type": "null"
									},
									"ElecCommStatus": {
										"type": "null"
									},
									"ElecCommMessage": {
										"type": "null"
									},
									"ReuseDocumentNum": {
										"type": "string"
									},
									"ReuseNotaFiscalNum": {
										"type": "string"
									},
									"PrintSEPADirect": {
										"type": "string"
									},
									"FiscalDocNum": {
										"type": "null"
									},
									"POSDailySummaryNo": {
										"type": "null"
									},
									"POSReceiptNo": {
										"type": "null"
									},
									"PointOfIssueCode": {
										"type": "null"
									},
									"Letter": {
										"type": "null"
									},
									"FolioNumberFrom": {
										"type": "null"
									},
									"FolioNumberTo": {
										"type": "null"
									},
									"InterimType": {
										"type": "string"
									},
									"RelatedType": {
										"type": "integer"
									},
									"RelatedEntry": {
										"type": "null"
									},
									"SAPPassport": {
										"type": "null"
									},
									"DocumentTaxID": {
										"type": "null"
									},
									"DateOfReportingControlStatementVAT": {
										"type": "null"
									},
									"ReportingSectionControlStatementVAT": {
										"type": "null"
									},
									"ExcludeFromTaxReportControlStatementVAT": {
										"type": "string"
									},
									"POS_CashRegister": {
										"type": "null"
									},
									"UpdateTime": {
										"type": "string"
									},
									"CreateQRCodeFrom": {
										"type": "null"
									},
									"PriceMode": {
										"type": "null"
									},
									"Revision": {
										"type": "string"
									},
									"OriginalRefNo": {
										"type": "null"
									},
									"OriginalRefDate": {
										"type": "null"
									},
									"GSTTransactionType": {
										"type": "null"
									},
									"OriginalCreditOrDebitNo": {
										"type": "null"
									},
									"OriginalCreditOrDebitDate": {
										"type": "null"
									},
									"ECommerceOperator": {
										"type": "null"
									},
									"ECommerceGSTIN": {
										"type": "null"
									},
									"ShipFrom": {
										"type": "string"
									},
									"CommissionTrade": {
										"type": "string"
									},
									"CommissionTradeReturn": {
										"type": "string"
									},
									"UseBillToAddrToDetermineTax": {
										"type": "null"
									},
									"IssuingReason": {
										"type": "integer"
									},
									"Cig": {
										"type": "null"
									},
									"Cup": {
										"type": "null"
									},
									"EDocType": {
										"type": "string"
									},
									"FCEAsPaymentMeans": {
										"type": "string"
									},
									"PaidToDate": {
										"type": "number"
									},
									"PaidToDateFC": {
										"type": "number"
									},
									"PaidToDateSys": {
										"type": "number"
									},
									"BaseType": {
										"type": "integer"
									},
									"BaseEntry": {
										"type": "null"
									},
									"FatherCard": {
										"type": "null"
									},
									"FatherType": {
										"type": "string"
									},
									"ShipState": {
										"type": "null"
									},
									"ShipPlace": {
										"type": "null"
									},
									"CustOffice": {
										"type": "null"
									},
									"FCI": {
										"type": "null"
									},
									"AddLegIn": {
										"type": "null"
									},
									"LegTextF": {
										"type": "null"
									},
									"DANFELgTxt": {
										"type": "null"
									},
									"IndFinal": {
										"type": "string"
									},
									"DataVersion": {
										"type": "integer"
									},
									"LastPageFolioNumber": {
										"type": "null"
									},
									"U_AIG_KID": {
										"type": "null"
									},
									"U_Ordrenummer": {
										"type": "null"
									},
									"U_esurl": {
										"type": "null"
									},
									"U_sluttkunde": {
										"type": "null"
									},
									"U_Levbet": {
										"type": "null"
									},
									"U_Sted": {
										"type": "null"
									},
									"U_Opperk": {
										"type": "null"
									},
									"U_DSS_SendStatus": {
										"type": "integer"
									},
									"U_DSS_EHFBuyersRef": {
										"type": "null"
									},
									"Document_ApprovalRequests": {
										"type": "array"
									},
									"DocumentLines": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"LineNum": {
													"type": "integer"
												},
												"ItemCode": {
													"type": "string"
												},
												"ItemDescription": {
													"type": "string"
												},
												"Quantity": {
													"type": "number"
												},
												"ShipDate": {
													"type": "string"
												},
												"Price": {
													"type": "number"
												},
												"PriceAfterVAT": {
													"type": "number"
												},
												"Currency": {
													"type": "string"
												},
												"Rate": {
													"type": "number"
												},
												"DiscountPercent": {
													"type": "number"
												},
												"VendorNum": {
													"type": "string"
												},
												"SerialNum": {
													"type": "null"
												},
												"WarehouseCode": {
													"type": "string"
												},
												"SalesPersonCode": {
													"type": "integer"
												},
												"CommisionPercent": {
													"type": "number"
												},
												"TreeType": {
													"type": "string"
												},
												"AccountCode": {
													"type": "string"
												},
												"UseBaseUnits": {
													"type": "string"
												},
												"SupplierCatNum": {
													"type": "string"
												},
												"CostingCode": {
													"type": "string"
												},
												"ProjectCode": {
													"type": "string"
												},
												"BarCode": {
													"type": "string"
												},
												"VatGroup": {
													"type": "string"
												},
												"Height1": {
													"type": "number"
												},
												"Hight1Unit": {
													"type": "null"
												},
												"Height2": {
													"type": "number"
												},
												"Height2Unit": {
													"type": "null"
												},
												"Lengh1": {
													"type": "number"
												},
												"Lengh1Unit": {
													"type": "null"
												},
												"Lengh2": {
													"type": "number"
												},
												"Lengh2Unit": {
													"type": "null"
												},
												"Weight1": {
													"type": "number"
												},
												"Weight1Unit": {
													"type": "null"
												},
												"Weight2": {
													"type": "number"
												},
												"Weight2Unit": {
													"type": "null"
												},
												"Factor1": {
													"type": "number"
												},
												"Factor2": {
													"type": "number"
												},
												"Factor3": {
													"type": "number"
												},
												"Factor4": {
													"type": "number"
												},
												"BaseType": {
													"type": "integer"
												},
												"BaseEntry": {
													"type": "integer"
												},
												"BaseLine": {
													"type": "integer"
												},
												"Volume": {
													"type": "number"
												},
												"VolumeUnit": {
													"type": "integer"
												},
												"Width1": {
													"type": "number"
												},
												"Width1Unit": {
													"type": "null"
												},
												"Width2": {
													"type": "number"
												},
												"Width2Unit": {
													"type": "null"
												},
												"Address": {
													"type": "string"
												},
												"TaxCode": {
													"type": "null"
												},
												"TaxType": {
													"type": "string"
												},
												"TaxLiable": {
													"type": "string"
												},
												"PickStatus": {
													"type": "string"
												},
												"PickQuantity": {
													"type": "number"
												},
												"PickListIdNumber": {
													"type": "null"
												},
												"OriginalItem": {
													"type": "string"
												},
												"BackOrder": {
													"type": "string"
												},
												"FreeText": {
													"type": "null"
												},
												"ShippingMethod": {
													"type": "integer"
												},
												"POTargetNum": {
													"type": "null"
												},
												"POTargetEntry": {
													"type": "string"
												},
												"POTargetRowNum": {
													"type": "null"
												},
												"CorrectionInvoiceItem": {
													"type": "string"
												},
												"CorrInvAmountToStock": {
													"type": "number"
												},
												"CorrInvAmountToDiffAcct": {
													"type": "number"
												},
												"AppliedTax": {
													"type": "number"
												},
												"AppliedTaxFC": {
													"type": "number"
												},
												"AppliedTaxSC": {
													"type": "number"
												},
												"WTLiable": {
													"type": "string"
												},
												"DeferredTax": {
													"type": "string"
												},
												"EqualizationTaxPercent": {
													"type": "number"
												},
												"TotalEqualizationTax": {
													"type": "number"
												},
												"TotalEqualizationTaxFC": {
													"type": "number"
												},
												"TotalEqualizationTaxSC": {
													"type": "number"
												},
												"NetTaxAmount": {
													"type": "number"
												},
												"NetTaxAmountFC": {
													"type": "number"
												},
												"NetTaxAmountSC": {
													"type": "number"
												},
												"MeasureUnit": {
													"type": "string"
												},
												"UnitsOfMeasurment": {
													"type": "number"
												},
												"LineTotal": {
													"type": "number"
												},
												"TaxPercentagePerRow": {
													"type": "number"
												},
												"TaxTotal": {
													"type": "number"
												},
												"ConsumerSalesForecast": {
													"type": "string"
												},
												"ExciseAmount": {
													"type": "number"
												},
												"TaxPerUnit": {
													"type": "number"
												},
												"TotalInclTax": {
													"type": "number"
												},
												"CountryOrg": {
													"type": "string"
												},
												"SWW": {
													"type": "string"
												},
												"TransactionType": {
													"type": "null"
												},
												"DistributeExpense": {
													"type": "string"
												},
												"RowTotalFC": {
													"type": "number"
												},
												"RowTotalSC": {
													"type": "number"
												},
												"LastBuyInmPrice": {
													"type": "number"
												},
												"LastBuyDistributeSumFc": {
													"type": "number"
												},
												"LastBuyDistributeSumSc": {
													"type": "number"
												},
												"LastBuyDistributeSum": {
													"type": "number"
												},
												"StockDistributesumForeign": {
													"type": "number"
												},
												"StockDistributesumSystem": {
													"type": "number"
												},
												"StockDistributesum": {
													"type": "number"
												},
												"StockInmPrice": {
													"type": "number"
												},
												"PickStatusEx": {
													"type": "string"
												},
												"TaxBeforeDPM": {
													"type": "number"
												},
												"TaxBeforeDPMFC": {
													"type": "number"
												},
												"TaxBeforeDPMSC": {
													"type": "number"
												},
												"CFOPCode": {
													"type": "null"
												},
												"CSTCode": {
													"type": "null"
												},
												"Usage": {
													"type": "null"
												},
												"TaxOnly": {
													"type": "string"
												},
												"VisualOrder": {
													"type": "integer"
												},
												"BaseOpenQuantity": {
													"type": "number"
												},
												"UnitPrice": {
													"type": "number"
												},
												"LineStatus": {
													"type": "string"
												},
												"PackageQuantity": {
													"type": "number"
												},
												"Text": {
													"type": "null"
												},
												"LineType": {
													"type": "string"
												},
												"COGSCostingCode": {
													"type": "string"
												},
												"COGSAccountCode": {
													"type": "string"
												},
												"ChangeAssemlyBoMWarehouse": {
													"type": "string"
												},
												"GrossBuyPrice": {
													"type": "number"
												},
												"GrossBase": {
													"type": "integer"
												},
												"GrossProfitTotalBasePrice": {
													"type": "number"
												},
												"CostingCode2": {
													"type": "null"
												},
												"CostingCode3": {
													"type": "null"
												},
												"CostingCode4": {
													"type": "null"
												},
												"CostingCode5": {
													"type": "null"
												},
												"ItemDetails": {
													"type": "null"
												},
												"LocationCode": {
													"type": "null"
												},
												"ActualDeliveryDate": {
													"type": "string"
												},
												"RemainingOpenQuantity": {
													"type": "number"
												},
												"OpenAmount": {
													"type": "number"
												},
												"OpenAmountFC": {
													"type": "number"
												},
												"OpenAmountSC": {
													"type": "number"
												},
												"ExLineNo": {
													"type": "null"
												},
												"RequiredDate": {
													"type": "null"
												},
												"RequiredQuantity": {
													"type": "null"
												},
												"COGSCostingCode2": {
													"type": "null"
												},
												"COGSCostingCode3": {
													"type": "null"
												},
												"COGSCostingCode4": {
													"type": "null"
												},
												"COGSCostingCode5": {
													"type": "null"
												},
												"CSTforIPI": {
													"type": "null"
												},
												"CSTforPIS": {
													"type": "null"
												},
												"CSTforCOFINS": {
													"type": "null"
												},
												"CreditOriginCode": {
													"type": "null"
												},
												"WithoutInventoryMovement": {
													"type": "string"
												},
												"AgreementNo": {
													"type": "null"
												},
												"AgreementRowNumber": {
													"type": "null"
												},
												"ActualBaseEntry": {
													"type": "null"
												},
												"ActualBaseLine": {
													"type": "null"
												},
												"DocEntry": {
													"type": "integer"
												},
												"Surpluses": {
													"type": "null"
												},
												"DefectAndBreakup": {
													"type": "null"
												},
												"Shortages": {
													"type": "null"
												},
												"ConsiderQuantity": {
													"type": "string"
												},
												"PartialRetirement": {
													"type": "string"
												},
												"RetirementQuantity": {
													"type": "null"
												},
												"RetirementAPC": {
													"type": "null"
												},
												"ThirdParty": {
													"type": "string"
												},
												"PoNum": {
													"type": "null"
												},
												"PoItmNum": {
													"type": "null"
												},
												"ExpenseType": {
													"type": "null"
												},
												"ReceiptNumber": {
													"type": "null"
												},
												"ExpenseOperationType": {
													"type": "null"
												},
												"FederalTaxID": {
													"type": "null"
												},
												"GrossProfit": {
													"type": "number"
												},
												"GrossProfitFC": {
													"type": "number"
												},
												"GrossProfitSC": {
													"type": "number"
												},
												"PriceSource": {
													"type": "string"
												},
												"StgSeqNum": {
													"type": "null"
												},
												"StgEntry": {
													"type": "null"
												},
												"StgDesc": {
													"type": "null"
												},
												"UoMEntry": {
													"type": "integer"
												},
												"UoMCode": {
													"type": "string"
												},
												"InventoryQuantity": {
													"type": "number"
												},
												"RemainingOpenInventoryQuantity": {
													"type": "number"
												},
												"ParentLineNum": {
													"type": "null"
												},
												"Incoterms": {
													"type": "integer"
												},
												"TransportMode": {
													"type": "integer"
												},
												"NatureOfTransaction": {
													"type": "null"
												},
												"DestinationCountryForImport": {
													"type": "null"
												},
												"DestinationRegionForImport": {
													"type": "null"
												},
												"OriginCountryForExport": {
													"type": "null"
												},
												"OriginRegionForExport": {
													"type": "null"
												},
												"ItemType": {
													"type": "string"
												},
												"ChangeInventoryQuantityIndependently": {
													"type": "string"
												},
												"FreeOfChargeBP": {
													"type": "null"
												},
												"SACEntry": {
													"type": "null"
												},
												"HSNEntry": {
													"type": "null"
												},
												"GrossPrice": {
													"type": "number"
												},
												"GrossTotal": {
													"type": "number"
												},
												"GrossTotalFC": {
													"type": "number"
												},
												"GrossTotalSC": {
													"type": "number"
												},
												"NCMCode": {
													"type": "integer"
												},
												"NVECode": {
													"type": "null"
												},
												"IndEscala": {
													"type": "string"
												},
												"CtrSealQty": {
													"type": "null"
												},
												"CNJPMan": {
													"type": "null"
												},
												"CESTCode": {
													"type": "null"
												},
												"UFFiscalBenefitCode": {
													"type": "null"
												},
												"ReverseCharge": {
													"type": "string"
												},
												"ShipToCode": {
													"type": "string"
												},
												"ShipToDescription": {
													"type": "string"
												},
												"ExternalCalcTaxRate": {
													"type": "null"
												},
												"ExternalCalcTaxAmount": {
													"type": "null"
												},
												"ExternalCalcTaxAmountFC": {
													"type": "null"
												},
												"ExternalCalcTaxAmountSC": {
													"type": "null"
												},
												"StandardItemIdentification": {
													"type": "null"
												},
												"CommodityClassification": {
													"type": "null"
												},
												"UnencumberedReason": {
													"type": "null"
												},
												"CUSplit": {
													"type": "string"
												},
												"U_Installasjon": {
													"type": "string"
												},
												"U_ParentItem": {
													"type": "null"
												},
												"U_Codebars": {
													"type": "null"
												},
												"U_PlannedQty": {
													"type": "number"
												},
												"U_AIG_IN": {
													"type": "null"
												},
												"U_AIG_IA": {
													"type": "null"
												},
												"U_AIG_PD": {
													"type": "null"
												},
												"U_AIG_PDate": {
													"type": "null"
												},
												"U_AIG_ID": {
													"type": "null"
												},
												"U_PItemCode": {
													"type": "null"
												},
												"U_AIG_IR": {
													"type": "null"
												},
												"U_AIG_DDate": {
													"type": "null"
												},
												"U_U_AIG_DDate": {
													"type": "null"
												},
												"U_DSS_Charge": {
													"type": "null"
												},
												"U_DSS_ProdOrdr": {
													"type": "null"
												},
												"LineTaxJurisdictions": {
													"type": "array"
												},
												"ExportProcesses": {
													"type": "array"
												},
												"EBooksDetails": {
													"type": "array"
												},
												"DocumentLineAdditionalExpenses": {
													"type": "array"
												},
												"WithholdingTaxLines": {
													"type": "array"
												},
												"SerialNumbers": {
													"type": "array"
												},
												"BatchNumbers": {
													"type": "array"
												},
												"CCDNumbers": {
													"type": "array"
												},
												"DocumentLinesBinAllocations": {
													"type": "array"
												}
											}
										}
									},
									"EWayBillDetails": {
										"type": "object"
									},
									"ElectronicProtocols": {
										"type": "array"
									},
									"DocumentAdditionalExpenses": {
										"type": "array"
									},
									"WithholdingTaxDataWTXCollection": {
										"type": "array"
									},
									"WithholdingTaxDataCollection": {
										"type": "array"
									},
									"DocumentPackages": {
										"type": "array"
									},
									"DocumentSpecialLines": {
										"type": "array"
									},
									"DocumentInstallments": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"DueDate": {
													"type": "string"
												},
												"Percentage": {
													"type": "number"
												},
												"Total": {
													"type": "number"
												},
												"LastDunningDate": {
													"type": "null"
												},
												"DunningLevel": {
													"type": "integer"
												},
												"TotalFC": {
													"type": "null"
												},
												"InstallmentId": {
													"type": "integer"
												},
												"PaymentOrdered": {
													"type": "string"
												}
											}
										}
									},
									"DownPaymentsToDraw": {
										"type": "array"
									},
									"TaxExtension": {
										"type": "object"
									},
									"AddressExtension": {
										"type": "object"
									},
									"DocumentReferences": {
										"type": "array"
									}
								}
							}
						},
						"@odata.nextLink": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/link_DL_Uinvest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_bo_orders_lines')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "order_lines"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_bo_sap_invoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string",
						"defaultValue": "stg_invoices_det"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_bo_sap_invoices_lines')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "stg_invoices_lines"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_bo_sap_orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "OrdersMaster"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_bo_sap_salespersons')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesPersons"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_invoices_dump')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DocEntry",
						"type": "nvarchar"
					},
					{
						"name": "DocNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DocDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DocDueDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "CardCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CardName",
						"type": "nvarchar"
					},
					{
						"name": "NumAtCard",
						"type": "nvarchar"
					},
					{
						"name": "DocTotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DocCurrency",
						"type": "nvarchar"
					},
					{
						"name": "SalesPersonCode",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "FederalTaxID",
						"type": "nvarchar"
					},
					{
						"name": "VatSum",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Address2",
						"type": "nvarchar"
					},
					{
						"name": "LineTotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "m_ds",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Invoices_Dump"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_orders_dump')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Bondura",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DocEntry",
						"type": "nvarchar"
					},
					{
						"name": "DocNum",
						"type": "nvarchar"
					},
					{
						"name": "DocDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DocDueDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "CardCode",
						"type": "nvarchar"
					},
					{
						"name": "CardName",
						"type": "nvarchar"
					},
					{
						"name": "NumAtCard",
						"type": "nvarchar"
					},
					{
						"name": "DocTotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DocCurrency",
						"type": "nvarchar"
					},
					{
						"name": "SalesPersonCode",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "FederalTaxID",
						"type": "nvarchar"
					},
					{
						"name": "VatSum",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Address2",
						"type": "nvarchar"
					},
					{
						"name": "LineTotal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "m_ds",
						"type": "nvarchar"
					},
					{
						"name": "DocDueDateYearMonth",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Orders_Dump"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Bondura')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_json')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_json_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault_bo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_bo_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault_bo_sap')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_bo_sap_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_Bondura')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_Bondura_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BonduraServiceLayer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Conncection to Bondura OData REST APIs",
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('BonduraServiceLayer_properties_typeProperties_url')]",
					"authenticationType": "Basic",
					"userName": "[parameters('BonduraServiceLayer_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('BonduraServiceLayer_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BonduraServiceLayerV1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('BonduraServiceLayerV1_properties_typeProperties_url')]",
					"authenticationType": "Basic",
					"userName": "[parameters('BonduraServiceLayerV1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('BonduraServiceLayerV1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OData_Semantic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('OData_Semantic_properties_typeProperties_url')]",
					"authenticationType": "Basic",
					"userName": "[parameters('OData_Semantic_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OData_Semantic_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService_Bondura_Invoices')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_Bondura_Invoices_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService_Bondura_Invoices_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService_Bondura_Invoices_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService_Bondura_SE_invoives')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_Bondura_SE_invoives_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService_Bondura_SE_invoives_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService_Bondura_SE_invoives_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService_Semantic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_Semantic_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService_Semantic_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService_Semantic_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService_bo_businessPartners')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_bo_businessPartners_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService_bo_businessPartners_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService_bo_businessPartners_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService_bo_invoices_incparam')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_bo_invoices_incparam_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService_bo_invoices_incparam_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService_bo_invoices_incparam_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService_bo_orders')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_bo_orders_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService_bo_orders_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService_bo_orders_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService_bo_orders_pag')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_bo_orders_pag_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService_bo_orders_pag_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService_bo_orders_pag_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService_bondura')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_bondura_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService_bondura_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService_bondura_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService_bse_businessPartners')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_bse_businessPartners_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService_bse_businessPartners_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService_bse_businessPartners_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService_orders')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_orders_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService_orders_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService_orders_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService_orders_bse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_orders_bse_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestService_orders_bse_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestService_orders_bse_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapEcc_Bondura')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapEcc",
				"typeProperties": {
					"url": "[parameters('SapEcc_Bondura_properties_typeProperties_url')]",
					"username": "[parameters('SapEcc_Bondura_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapEcc_Bondura_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/link_DL_Uinvest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('link_DL_Uinvest_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('link_DL_Uinvest_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/link_bo_sap')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('link_bo_sap_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('link_bo_sap_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('link_bo_sap_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService_bo_budgets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedService_bo_budgets_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService_bo_inc_log_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedService_bo_inc_log_blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService_bo_log_budgets_lines')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedService_bo_log_budgets_lines_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline_invoices_bo_inc",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "pipeline_orders_bo_inc",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-05-08T04:00:00",
						"timeZone": "W. Europe Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								4
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline_invoices_bo_inc')]",
				"[concat(variables('factoryId'), '/pipelines/pipeline_orders_bo_inc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json_Pars')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "JSON_Invoices",
								"type": "DatasetReference"
							},
							"name": "SapAPI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "JsonFlatten",
								"type": "DatasetReference"
							},
							"name": "AzureSQL"
						}
					],
					"transformations": [
						{
							"name": "FlattenJsonValue"
						},
						{
							"name": "SelectColumns"
						},
						{
							"name": "FlattenJsonAdditional"
						}
					],
					"scriptLines": [
						"source(output(",
						"          body as ({@odata.context} as string, {@odata.nextLink} as string, value as ({@odata.etag} as string, ATDocumentType as string, AddLegIn as string, Address as string, Address2 as string, AgentCode as string, AnnualInvoiceDeclarationReference as string, ApplyCurrentVATRatesForDownPaymentsToDraw as string, ApplyTaxOnFirstInstallment as string, ArchiveNonremovableSalesQuotation as string, AssetValueDate as string, AttachmentEntry as string, AuthorizationCode as string, AuthorizationStatus as string, BPChannelCode as string, BPChannelContact as string, BPLName as string, BPL_IDAssignedToInvoice as string, BaseAmount as double, BaseAmountFC as double, BaseAmountSC as double, BaseEntry as string, BaseType as short, BillOfExchangeReserved as string, BlanketAgreementNumber as string, BlockDunning as string, Box1099 as string, CancelDate as string, CancelStatus as string, Cancelled as string, CardCode as integer, CardName as string, CashDiscountDateOffset as boolean, CentralBankIndicator as string, CertificationNumber as string, Cig as string, ClosingDate as string, ClosingOption as string, ClosingRemarks as string, Comments as string, CommissionTrade as string, CommissionTradeReturn as string, Confirmed as string, ContactPersonCode as short, ControlAccount as short, CreateOnlineQuotation as string, CreateQRCodeFrom as string, CreationDate as date, Cup as string, CustOffice as string, DANFELgTxt as string, DataVersion as boolean, DateOfReportingControlStatementVAT as string, DeferredTax as string, DiscountPercent as double, DocCurrency as string, DocDate as date, DocDueDate as date, DocEntry as short, DocNum as short, DocObjectCode as string, DocRate as double, DocTime as string, DocTotal as double, DocTotalFc as double, DocTotalSys as double, DocType as string, DocumentAdditionalExpenses as (AquisitionTax as string, BaseDocEntry as short, BaseDocLine as string, BaseDocType as string, BaseDocumentReference as string, CUSplit as string, DeductibleTaxSum as double, DeductibleTaxSumFC as double, DeductibleTaxSumSys as double, DistributionMethod as string, DistributionRule as string, DistributionRule2 as string, DistributionRule3 as string, DistributionRule4 as string, DistributionRule5 as string, DocExpenseTaxJurisdictions as string[], DocFreightEBooksDetails as string[], EqualizationTaxFC as double, EqualizationTaxPercent as double, EqualizationTaxSum as double, EqualizationTaxSys as double, ExpenseCode as boolean, ExternalCalcTaxAmount as string, ExternalCalcTaxAmountFC as string, ExternalCalcTaxAmountSC as string, ExternalCalcTaxRate as string, LastPurchasePrice as string, LineGross as double, LineGrossFC as double, LineGrossSys as double, LineNum as boolean, LineTotal as double, LineTotalFC as double, LineTotalSys as double, PaidToDate as double, PaidToDateFC as double, PaidToDateSys as double, Project as string, Remarks as string, Status as string, Stock as string, TargetAbsEntry as short, TargetType as string, TaxCode as string, TaxLiable as string, TaxPaid as double, TaxPaidFC as double, TaxPaidSys as double, TaxPercent as double, TaxSum as double, TaxSumFC as double, TaxSumSys as double, TaxTotalSum as double, TaxTotalSumFC as double, TaxTotalSumSys as double, TaxType as string, VatGroup as string, WTLiable as string)[], DocumentDelivery as string, DocumentInstallments as (DueDate as date, DunningLevel as boolean, InstallmentId as boolean, LastDunningDate as date, PaymentOrdered as string, Percentage as double, Total as double, TotalFC as string)[], DocumentLines as (AccountCode as short, ActualBaseEntry as string, ActualBaseLine as string, ActualDeliveryDate as date, Address as string, AgreementNo as string, AgreementRowNumber as string, AppliedTax as double, AppliedTaxFC as double, AppliedTaxSC as double, BackOrder as string, BarCode as string, BaseEntry as short, BaseLine as short, BaseOpenQuantity as double, BaseType as short, BatchNumbers as string[], CCDNumbers as string[], CESTCode as string, CFOPCode as string, CNJPMan as string, COGSAccountCode as short, COGSCostingCode as string, COGSCostingCode2 as string, COGSCostingCode3 as string, COGSCostingCode4 as string, COGSCostingCode5 as string, CSTCode as string, CSTforCOFINS as string, CSTforIPI as string, CSTforPIS as string, CUSplit as string, ChangeAssemlyBoMWarehouse as boolean, ChangeInventoryQuantityIndependently as string, CommisionPercent as double, CommodityClassification as string, ConsiderQuantity as string, ConsumerSalesForecast as string, CorrInvAmountToDiffAcct as double, CorrInvAmountToStock as double, CorrectionInvoiceItem as string, CostingCode as string, CostingCode2 as string, CostingCode3 as string, CostingCode4 as string, CostingCode5 as string, CountryOrg as string, CreditOriginCode as string, CtrSealQty as string, Currency as string, DefectAndBreakup as string, DeferredTax as string, DestinationCountryForImport as string, DestinationRegionForImport as string, DiscountPercent as double, DistributeExpense as string, DocEntry as short, DocumentLineAdditionalExpenses as string[], DocumentLinesBinAllocations as string[], EBooksDetails as string[], EqualizationTaxPercent as double, ExLineNo as string, ExciseAmount as double, ExpenseOperationType as string, ExpenseType as string, ExportProcesses as string[], ExternalCalcTaxAmount as string, ExternalCalcTaxAmountFC as string, ExternalCalcTaxAmountSC as string, ExternalCalcTaxRate as string, Factor1 as double, Factor2 as double, Factor3 as double, Factor4 as double, FederalTaxID as string, FreeOfChargeBP as string, FreeText as string, GrossBase as short, GrossBuyPrice as double, GrossPrice as double, GrossProfit as double, GrossProfitFC as double, GrossProfitSC as double, GrossProfitTotalBasePrice as double, GrossTotal as double, GrossTotalFC as double, GrossTotalSC as double, HSNEntry as string, Height1 as double, Height2 as double, Height2Unit as string, Hight1Unit as string, Incoterms as boolean, IndEscala as string, InventoryQuantity as double, ItemCode as integer, ItemDescription as string, ItemDetails as string, ItemType as string, LastBuyDistributeSum as double, LastBuyDistributeSumFc as double, LastBuyDistributeSumSc as double, LastBuyInmPrice as double, Lengh1 as double, Lengh1Unit as string, Lengh2 as double, Lengh2Unit as string, LineNum as short, LineStatus as string, LineTaxJurisdictions as string[], LineTotal as double, LineType as string, LocationCode as string, MeasureUnit as string, NCMCode as short, NVECode as string, NatureOfTransaction as string, NetTaxAmount as double, NetTaxAmountFC as double, NetTaxAmountSC as double, OpenAmount as double, OpenAmountFC as double, OpenAmountSC as double, OriginCountryForExport as string, OriginRegionForExport as string, OriginalItem as integer, POTargetEntry as string, POTargetNum as string, POTargetRowNum as string, PackageQuantity as double, ParentLineNum as string, PartialRetirement as string, PickListIdNumber as string, PickQuantity as double, PickStatus as string, PickStatusEx as string, PoItmNum as string, PoNum as string, Price as double, PriceAfterVAT as double, PriceSource as string, ProjectCode as string, Quantity as double, Rate as double, ReceiptNumber as string, RemainingOpenInventoryQuantity as double, RemainingOpenQuantity as double, RequiredDate as string, RequiredQuantity as string, RetirementAPC as string, RetirementQuantity as string, ReverseCharge as string, RowTotalFC as double, RowTotalSC as double, SACEntry as string, SWW as string, SalesPersonCode as short, SerialNum as string, SerialNumbers as string[], ShipDate as date, ShipToCode as string, ShipToDescription as string, ShippingMethod as short, Shortages as string, StandardItemIdentification as string, StgDesc as string, StgEntry as string, StgSeqNum as string, StockDistributesum as double, StockDistributesumForeign as double, StockDistributesumSystem as double, StockInmPrice as double, SupplierCatNum as string, Surpluses as string, TaxBeforeDPM as double, TaxBeforeDPMFC as double, TaxBeforeDPMSC as double, TaxCode as string, TaxLiable as string, TaxOnly as string, TaxPerUnit as double, TaxPercentagePerRow as double, TaxTotal as double, TaxType as string, Text as string, ThirdParty as string, TotalEqualizationTax as double, TotalEqualizationTaxFC as double, TotalEqualizationTaxSC as double, TotalInclTax as double, TransactionType as string, TransportMode as boolean, TreeType as string, UFFiscalBenefitCode as string, U_AIG_DDate as string, U_AIG_IA as string, U_AIG_ID as string, U_AIG_IN as string, U_AIG_IR as string, U_AIG_PD as string, U_AIG_PDate as string, U_Codebars as string, U_DSS_Charge as string, U_DSS_ProdOrdr as string, U_Installasjon as string, U_PItemCode as string, U_ParentItem as string, U_PlannedQty as double, U_U_AIG_DDate as string, UnencumberedReason as string, UnitPrice as double, UnitsOfMeasurment as double, UoMCode as string, UoMEntry as short, Usage as string, UseBaseUnits as string, VatGroup as string, VendorNum as string, VisualOrder as short, Volume as double, VolumeUnit as short, WTLiable as string, WarehouseCode as short, Weight1 as double, Weight1Unit as short, Weight2 as double, Weight2Unit as string, Width1 as double, Width1Unit as string, Width2 as double, Width2Unit as string, WithholdingTaxLines as string[], WithoutInventoryMovement as string)[], DocumentPackages as string[], DocumentReferences as string[], DocumentSpecialLines as string[], DocumentStatus as string, DocumentSubType as string, DocumentTaxID as string, Document_ApprovalRequests as string[], DocumentsOwner as short, DownPayment as double, DownPaymentAmount as double, DownPaymentAmountFC as double, DownPaymentAmountSC as double, DownPaymentPercentage as double, DownPaymentStatus as string, DownPaymentType as string, DownPaymentsToDraw as string[], ECommerceGSTIN as string, ECommerceOperator as string, EDocErrorCode as string, EDocErrorMessage as string, EDocExportFormat as string, EDocGenerationType as string, EDocNum as string, EDocSeries as string, EDocStatus as string, EDocType as string, ETaxNumber as string, ETaxWebSite as string, ElecCommMessage as string, ElecCommStatus as string, ElectronicProtocols as string[], EndDeliveryDate as string, EndDeliveryTime as string, ExcludeFromTaxReportControlStatementVAT as string, ExemptionValidityDateFrom as string, ExemptionValidityDateTo as string, ExternalCorrectedDocNum as string, ExtraDays as short, ExtraMonth as boolean, FCEAsPaymentMeans as string, FCI as string, FatherCard as string, FatherType as string, FederalTaxID as string, FinancialPeriod as short, FiscalDocNum as string, FolioNumber as string, FolioNumberFrom as string, FolioNumberTo as string, FolioPrefixString as string, Form1099 as string, GSTTransactionType as string, GTSChecker as string, GTSPayee as string, GroupHandWritten as string, GroupNumber as string, GroupSeries as string, HandWritten as string, ImportFileNum as string, IndFinal as string, Indicator as string, InsuranceOperation347 as string, InterimType as string, InternalCorrectedDocNum as string, InvoicePayment as string, IsAlteration as string, IsPayToBank as string, IssuingReason as boolean, JournalMemo as string, LanguageCode as short, LastPageFolioNumber as string, LegTextF as string, Letter as string, ManualNumber as string, MaximumCashDiscount as string, NTSApproved as string, NTSApprovedNumber as string, NetProcedure as string, NextCorrectingDocument as string, NumAtCard as string, NumberOfInstallments as boolean, OpenForLandedCosts as string, OpeningRemarks as string, OriginalCreditOrDebitDate as string, OriginalCreditOrDebitNo as string, OriginalRefDate as string, OriginalRefNo as string, POSCashierNumber as string, POSDailySummaryNo as string, POSEquipmentNumber as string, POSManufacturerSerialNumber as string, POSReceiptNo as string, POS_CashRegister as string, PaidToDate as double, PaidToDateFC as double, PaidToDateSys as double, PartialSupply as string, PayToBankAccountNo as string, PayToBankBranch as string, PayToBankCode as string, PayToBankCountry as string, PayToCode as string, PaymentBlock as string, PaymentBlockEntry as string, PaymentGroupCode as boolean, PaymentMethod as string, PaymentReference as long, PeriodIndicator as string, Pick as string, PickRemark as string, PickStatus as string, PointOfIssueCode as string, PriceMode as string, PrintSEPADirect as string, Printed as string, PrivateKeyVersion as string, Project as string, Receiver as string, Reference1 as short, Reference2 as string, RelatedEntry as string, RelatedType as short, Releaser as string, RelevantToGTS as string, ReopenManuallyClosedOrCanceledDocument as string, ReopenOriginalDocument as string, ReportingSectionControlStatementVAT as string, RequriedDate as string, Reserve as string, ReserveInvoice as string, ReuseDocumentNum as string, ReuseNotaFiscalNum as string, Revision as string, RevisionPo as string, Rounding as string, RoundingDiffAmount as double, RoundingDiffAmountFC as double, RoundingDiffAmountSC as double, SAPPassport as string, SalesPersonCode as short, Segment as boolean, SequenceCode as string, SequenceModel as boolean, SequenceSerial as string, Series as short, SeriesString as string, ServiceGrossProfitPercent as string, ShipFrom as string, ShipPlace as string, ShipState as string, ShipToCode as string, ShowSCN as string, SignatureDigest as string, SignatureInputMessage as string, SpecifiedClosingDate as string, StartDeliveryDate as string, StartDeliveryTime as string, StartFrom as string, SubSeriesString as string, Submitted as string, SummeryType as string, Supplier as string, TaxDate as date, TaxExemptionLetterNum as string, TotalDiscount as double, TotalDiscountFC as double, TotalDiscountSC as double, TotalEqualizationTax as double, TotalEqualizationTaxFC as double, TotalEqualizationTaxSC as double, TrackingNumber as string, TransNum as short, TransportationCode as short, U_AIG_KID as string, U_DSS_EHFBuyersRef as string, U_DSS_SendStatus as short, U_Levbet as string, U_Opperk as string, U_Ordrenummer as string, U_Sted as string, U_esurl as string, U_sluttkunde as string, UpdateDate as date, UpdateTime as string, UseBillToAddrToDetermineTax as string, UseCorrectionVATGroup as string, UseShpdGoodsAct as string, UserSign as short, VATRegNum as string, VatDate as string, VatPercent as double, VatSum as double, VatSumFc as double, VatSumSys as double, VehiclePlate as string, WTAmount as double, WTAmountFC as double, WTAmountSC as double, WTApplied as double, WTAppliedFC as double, WTAppliedSC as double, WTExemptedAmount as double, WTExemptedAmountFC as double, WTExemptedAmountSC as double, WTNonSubjectAmount as double, WTNonSubjectAmountFC as double, WTNonSubjectAmountSC as double, WareHouseUpdateType as string, WithholdingTaxDataCollection as string[], WithholdingTaxDataWTXCollection as string[])[]),",
						"          headers as [string,string]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     httpMethod: 'GET',",
						"     timeout: 30,",
						"     requestInterval: 0,",
						"     paginationRules: ['absoluteUrl' -> (concat('https://SU-2111-139.emea.businessone.cloud.sap/b1s/v2/', 'body.{@odata.nextLink}'))],",
						"     responseFormat: ['type' -> 'json', 'documentForm' -> 'arrayOfDocuments']) ~> SapAPI",
						"SapAPI foldDown(unroll(body.value),",
						"     mapColumn(",
						"          ATDocumentType = body.value.ATDocumentType,",
						"          AddLegIn = body.value.AddLegIn,",
						"          Address = body.value.Address,",
						"          Address2 = body.value.Address2,",
						"          AgentCode = body.value.AgentCode,",
						"          AnnualInvoiceDeclarationReference = body.value.AnnualInvoiceDeclarationReference,",
						"          ApplyCurrentVATRatesForDownPaymentsToDraw = body.value.ApplyCurrentVATRatesForDownPaymentsToDraw,",
						"          ApplyTaxOnFirstInstallment = body.value.ApplyTaxOnFirstInstallment,",
						"          ArchiveNonremovableSalesQuotation = body.value.ArchiveNonremovableSalesQuotation,",
						"          AssetValueDate = body.value.AssetValueDate,",
						"          AttachmentEntry = body.value.AttachmentEntry,",
						"          AuthorizationCode = body.value.AuthorizationCode,",
						"          AuthorizationStatus = body.value.AuthorizationStatus,",
						"          BPChannelCode = body.value.BPChannelCode,",
						"          BPChannelContact = body.value.BPChannelContact,",
						"          BPLName = body.value.BPLName,",
						"          BPL_IDAssignedToInvoice = body.value.BPL_IDAssignedToInvoice,",
						"          BaseAmount = body.value.BaseAmount,",
						"          BaseAmountFC = body.value.BaseAmountFC,",
						"          BaseAmountSC = body.value.BaseAmountSC,",
						"          BaseEntry = body.value.BaseEntry,",
						"          BaseType = body.value.BaseType,",
						"          BillOfExchangeReserved = body.value.BillOfExchangeReserved,",
						"          BlanketAgreementNumber = body.value.BlanketAgreementNumber,",
						"          BlockDunning = body.value.BlockDunning,",
						"          Box1099 = body.value.Box1099,",
						"          CancelDate = body.value.CancelDate,",
						"          CancelStatus = body.value.CancelStatus,",
						"          Cancelled = body.value.Cancelled,",
						"          CardCode = body.value.CardCode,",
						"          CardName = body.value.CardName,",
						"          CashDiscountDateOffset = body.value.CashDiscountDateOffset,",
						"          CentralBankIndicator = body.value.CentralBankIndicator,",
						"          CertificationNumber = body.value.CertificationNumber,",
						"          Cig = body.value.Cig,",
						"          ClosingDate = body.value.ClosingDate,",
						"          ClosingOption = body.value.ClosingOption,",
						"          ClosingRemarks = body.value.ClosingRemarks,",
						"          Comments = body.value.Comments,",
						"          CommissionTrade = body.value.CommissionTrade,",
						"          CommissionTradeReturn = body.value.CommissionTradeReturn,",
						"          Confirmed = body.value.Confirmed,",
						"          ContactPersonCode = body.value.ContactPersonCode,",
						"          ControlAccount = body.value.ControlAccount,",
						"          CreateOnlineQuotation = body.value.CreateOnlineQuotation,",
						"          CreateQRCodeFrom = body.value.CreateQRCodeFrom,",
						"          CreationDate = body.value.CreationDate,",
						"          Cup = body.value.Cup,",
						"          CustOffice = body.value.CustOffice,",
						"          DANFELgTxt = body.value.DANFELgTxt,",
						"          DataVersion = body.value.DataVersion,",
						"          DateOfReportingControlStatementVAT = body.value.DateOfReportingControlStatementVAT,",
						"          DeferredTax = body.value.DeferredTax,",
						"          DiscountPercent = body.value.DiscountPercent,",
						"          DocCurrency = body.value.DocCurrency,",
						"          DocDate = body.value.DocDate,",
						"          DocDueDate = body.value.DocDueDate,",
						"          DocEntry = body.value.DocEntry,",
						"          DocNum = body.value.DocNum,",
						"          DocObjectCode = body.value.DocObjectCode,",
						"          DocRate = body.value.DocRate,",
						"          DocTime = body.value.DocTime,",
						"          DocTotal = body.value.DocTotal,",
						"          DocTotalFc = body.value.DocTotalFc,",
						"          DocTotalSys = body.value.DocTotalSys,",
						"          DocType = body.value.DocType,",
						"          AquisitionTax = body.value.DocumentAdditionalExpenses.AquisitionTax,",
						"          BaseDocEntry = body.value.DocumentAdditionalExpenses.BaseDocEntry,",
						"          BaseDocLine = body.value.DocumentAdditionalExpenses.BaseDocLine,",
						"          BaseDocType = body.value.DocumentAdditionalExpenses.BaseDocType,",
						"          BaseDocumentReference = body.value.DocumentAdditionalExpenses.BaseDocumentReference,",
						"          CUSplit = body.value.DocumentAdditionalExpenses.CUSplit,",
						"          DeductibleTaxSum = body.value.DocumentAdditionalExpenses.DeductibleTaxSum,",
						"          DeductibleTaxSumFC = body.value.DocumentAdditionalExpenses.DeductibleTaxSumFC,",
						"          DeductibleTaxSumSys = body.value.DocumentAdditionalExpenses.DeductibleTaxSumSys,",
						"          DistributionMethod = body.value.DocumentAdditionalExpenses.DistributionMethod,",
						"          DistributionRule = body.value.DocumentAdditionalExpenses.DistributionRule,",
						"          DistributionRule2 = body.value.DocumentAdditionalExpenses.DistributionRule2,",
						"          DistributionRule3 = body.value.DocumentAdditionalExpenses.DistributionRule3,",
						"          DistributionRule4 = body.value.DocumentAdditionalExpenses.DistributionRule4,",
						"          DistributionRule5 = body.value.DocumentAdditionalExpenses.DistributionRule5,",
						"          DocExpenseTaxJurisdictions = body.value.DocumentAdditionalExpenses.DocExpenseTaxJurisdictions,",
						"          DocFreightEBooksDetails = body.value.DocumentAdditionalExpenses.DocFreightEBooksDetails,",
						"          EqualizationTaxFC = body.value.DocumentAdditionalExpenses.EqualizationTaxFC,",
						"          EqualizationTaxPercent = body.value.DocumentAdditionalExpenses.EqualizationTaxPercent,",
						"          EqualizationTaxSum = body.value.DocumentAdditionalExpenses.EqualizationTaxSum,",
						"          EqualizationTaxSys = body.value.DocumentAdditionalExpenses.EqualizationTaxSys,",
						"          ExpenseCode = body.value.DocumentAdditionalExpenses.ExpenseCode,",
						"          ExternalCalcTaxAmount = body.value.DocumentAdditionalExpenses.ExternalCalcTaxAmount,",
						"          ExternalCalcTaxAmountFC = body.value.DocumentAdditionalExpenses.ExternalCalcTaxAmountFC,",
						"          ExternalCalcTaxAmountSC = body.value.DocumentAdditionalExpenses.ExternalCalcTaxAmountSC,",
						"          ExternalCalcTaxRate = body.value.DocumentAdditionalExpenses.ExternalCalcTaxRate,",
						"          LastPurchasePrice = body.value.DocumentAdditionalExpenses.LastPurchasePrice,",
						"          LineGross = body.value.DocumentAdditionalExpenses.LineGross,",
						"          LineGrossFC = body.value.DocumentAdditionalExpenses.LineGrossFC,",
						"          LineGrossSys = body.value.DocumentAdditionalExpenses.LineGrossSys,",
						"          LineNum = body.value.DocumentAdditionalExpenses.LineNum,",
						"          LineTotal = body.value.DocumentAdditionalExpenses.LineTotal,",
						"          LineTotalFC = body.value.DocumentAdditionalExpenses.LineTotalFC,",
						"          LineTotalSys = body.value.DocumentAdditionalExpenses.LineTotalSys,",
						"          AddPaidToDate = body.value.DocumentAdditionalExpenses.PaidToDate,",
						"          AddPaidToDateFC = body.value.DocumentAdditionalExpenses.PaidToDateFC,",
						"          AddPaidToDateSys = body.value.DocumentAdditionalExpenses.PaidToDateSys,",
						"          AddProject = body.value.DocumentAdditionalExpenses.Project,",
						"          Remarks = body.value.DocumentAdditionalExpenses.Remarks,",
						"          Status = body.value.DocumentAdditionalExpenses.Status,",
						"          Stock = body.value.DocumentAdditionalExpenses.Stock,",
						"          TargetAbsEntry = body.value.DocumentAdditionalExpenses.TargetAbsEntry,",
						"          TargetType = body.value.DocumentAdditionalExpenses.TargetType,",
						"          TaxCode = body.value.DocumentAdditionalExpenses.TaxCode,",
						"          TaxLiable = body.value.DocumentAdditionalExpenses.TaxLiable,",
						"          TaxPaid = body.value.DocumentAdditionalExpenses.TaxPaid,",
						"          TaxPaidFC = body.value.DocumentAdditionalExpenses.TaxPaidFC,",
						"          TaxPaidSys = body.value.DocumentAdditionalExpenses.TaxPaidSys,",
						"          TaxPercent = body.value.DocumentAdditionalExpenses.TaxPercent,",
						"          TaxSum = body.value.DocumentAdditionalExpenses.TaxSum,",
						"          TaxSumFC = body.value.DocumentAdditionalExpenses.TaxSumFC,",
						"          TaxSumSys = body.value.DocumentAdditionalExpenses.TaxSumSys,",
						"          TaxTotalSum = body.value.DocumentAdditionalExpenses.TaxTotalSum,",
						"          TaxTotalSumFC = body.value.DocumentAdditionalExpenses.TaxTotalSumFC,",
						"          TaxTotalSumSys = body.value.DocumentAdditionalExpenses.TaxTotalSumSys,",
						"          TaxType = body.value.DocumentAdditionalExpenses.TaxType,",
						"          VatGroup = body.value.DocumentAdditionalExpenses.VatGroup,",
						"          WTLiable = body.value.DocumentAdditionalExpenses.WTLiable,",
						"          DocumentDelivery = body.value.DocumentDelivery,",
						"          DocumentInstallments = body.value.DocumentInstallments,",
						"          DocumentLines = body.value.DocumentLines,",
						"          DocumentPackages = body.value.DocumentPackages,",
						"          DocumentReferences = body.value.DocumentReferences,",
						"          DocumentSpecialLines = body.value.DocumentSpecialLines,",
						"          DocumentStatus = body.value.DocumentStatus,",
						"          DocumentSubType = body.value.DocumentSubType,",
						"          DocumentTaxID = body.value.DocumentTaxID,",
						"          Document_ApprovalRequests = body.value.Document_ApprovalRequests,",
						"          DocumentsOwner = body.value.DocumentsOwner,",
						"          DownPayment = body.value.DownPayment,",
						"          DownPaymentAmount = body.value.DownPaymentAmount,",
						"          DownPaymentAmountFC = body.value.DownPaymentAmountFC,",
						"          DownPaymentAmountSC = body.value.DownPaymentAmountSC,",
						"          DownPaymentPercentage = body.value.DownPaymentPercentage,",
						"          DownPaymentStatus = body.value.DownPaymentStatus,",
						"          DownPaymentType = body.value.DownPaymentType,",
						"          DownPaymentsToDraw = body.value.DownPaymentsToDraw,",
						"          ECommerceGSTIN = body.value.ECommerceGSTIN,",
						"          ECommerceOperator = body.value.ECommerceOperator,",
						"          EDocErrorCode = body.value.EDocErrorCode,",
						"          EDocErrorMessage = body.value.EDocErrorMessage,",
						"          EDocExportFormat = body.value.EDocExportFormat,",
						"          EDocGenerationType = body.value.EDocGenerationType,",
						"          EDocNum = body.value.EDocNum,",
						"          EDocSeries = body.value.EDocSeries,",
						"          EDocStatus = body.value.EDocStatus,",
						"          EDocType = body.value.EDocType,",
						"          ETaxNumber = body.value.ETaxNumber,",
						"          ETaxWebSite = body.value.ETaxWebSite,",
						"          ElecCommMessage = body.value.ElecCommMessage,",
						"          ElecCommStatus = body.value.ElecCommStatus,",
						"          ElectronicProtocols = body.value.ElectronicProtocols,",
						"          EndDeliveryDate = body.value.EndDeliveryDate,",
						"          EndDeliveryTime = body.value.EndDeliveryTime,",
						"          ExcludeFromTaxReportControlStatementVAT = body.value.ExcludeFromTaxReportControlStatementVAT,",
						"          ExemptionValidityDateFrom = body.value.ExemptionValidityDateFrom,",
						"          ExemptionValidityDateTo = body.value.ExemptionValidityDateTo,",
						"          ExternalCorrectedDocNum = body.value.ExternalCorrectedDocNum,",
						"          ExtraDays = body.value.ExtraDays,",
						"          ExtraMonth = body.value.ExtraMonth,",
						"          FCEAsPaymentMeans = body.value.FCEAsPaymentMeans,",
						"          FCI = body.value.FCI,",
						"          FatherCard = body.value.FatherCard,",
						"          FatherType = body.value.FatherType,",
						"          FederalTaxID = body.value.FederalTaxID,",
						"          FinancialPeriod = body.value.FinancialPeriod,",
						"          FiscalDocNum = body.value.FiscalDocNum,",
						"          FolioNumber = body.value.FolioNumber,",
						"          FolioNumberFrom = body.value.FolioNumberFrom,",
						"          FolioNumberTo = body.value.FolioNumberTo,",
						"          FolioPrefixString = body.value.FolioPrefixString,",
						"          Form1099 = body.value.Form1099,",
						"          GSTTransactionType = body.value.GSTTransactionType,",
						"          GTSChecker = body.value.GTSChecker,",
						"          GTSPayee = body.value.GTSPayee,",
						"          GroupHandWritten = body.value.GroupHandWritten,",
						"          GroupNumber = body.value.GroupNumber,",
						"          GroupSeries = body.value.GroupSeries,",
						"          HandWritten = body.value.HandWritten,",
						"          ImportFileNum = body.value.ImportFileNum,",
						"          IndFinal = body.value.IndFinal,",
						"          Indicator = body.value.Indicator,",
						"          InsuranceOperation347 = body.value.InsuranceOperation347,",
						"          InterimType = body.value.InterimType,",
						"          InternalCorrectedDocNum = body.value.InternalCorrectedDocNum,",
						"          InvoicePayment = body.value.InvoicePayment,",
						"          IsAlteration = body.value.IsAlteration,",
						"          IsPayToBank = body.value.IsPayToBank,",
						"          IssuingReason = body.value.IssuingReason,",
						"          JournalMemo = body.value.JournalMemo,",
						"          LanguageCode = body.value.LanguageCode,",
						"          LastPageFolioNumber = body.value.LastPageFolioNumber,",
						"          LegTextF = body.value.LegTextF,",
						"          Letter = body.value.Letter,",
						"          ManualNumber = body.value.ManualNumber,",
						"          MaximumCashDiscount = body.value.MaximumCashDiscount,",
						"          NTSApproved = body.value.NTSApproved,",
						"          NTSApprovedNumber = body.value.NTSApprovedNumber,",
						"          NetProcedure = body.value.NetProcedure,",
						"          NextCorrectingDocument = body.value.NextCorrectingDocument,",
						"          NumAtCard = body.value.NumAtCard,",
						"          NumberOfInstallments = body.value.NumberOfInstallments,",
						"          OpenForLandedCosts = body.value.OpenForLandedCosts,",
						"          OpeningRemarks = body.value.OpeningRemarks,",
						"          OriginalCreditOrDebitDate = body.value.OriginalCreditOrDebitDate,",
						"          OriginalCreditOrDebitNo = body.value.OriginalCreditOrDebitNo,",
						"          OriginalRefDate = body.value.OriginalRefDate,",
						"          OriginalRefNo = body.value.OriginalRefNo,",
						"          POSCashierNumber = body.value.POSCashierNumber,",
						"          POSDailySummaryNo = body.value.POSDailySummaryNo,",
						"          POSEquipmentNumber = body.value.POSEquipmentNumber,",
						"          POSManufacturerSerialNumber = body.value.POSManufacturerSerialNumber,",
						"          POSReceiptNo = body.value.POSReceiptNo,",
						"          POS_CashRegister = body.value.POS_CashRegister,",
						"          PaidToDate = body.value.PaidToDate,",
						"          PaidToDateFC = body.value.PaidToDateFC,",
						"          PaidToDateSys = body.value.PaidToDateSys,",
						"          PartialSupply = body.value.PartialSupply,",
						"          PayToBankAccountNo = body.value.PayToBankAccountNo,",
						"          PayToBankBranch = body.value.PayToBankBranch,",
						"          PayToBankCode = body.value.PayToBankCode,",
						"          PayToBankCountry = body.value.PayToBankCountry,",
						"          PayToCode = body.value.PayToCode,",
						"          PaymentBlock = body.value.PaymentBlock,",
						"          PaymentBlockEntry = body.value.PaymentBlockEntry,",
						"          PaymentGroupCode = body.value.PaymentGroupCode,",
						"          PaymentMethod = body.value.PaymentMethod,",
						"          PaymentReference = body.value.PaymentReference,",
						"          PeriodIndicator = body.value.PeriodIndicator,",
						"          Pick = body.value.Pick,",
						"          PickRemark = body.value.PickRemark,",
						"          PickStatus = body.value.PickStatus,",
						"          PointOfIssueCode = body.value.PointOfIssueCode,",
						"          PriceMode = body.value.PriceMode,",
						"          PrintSEPADirect = body.value.PrintSEPADirect,",
						"          Printed = body.value.Printed,",
						"          PrivateKeyVersion = body.value.PrivateKeyVersion,",
						"          Project = body.value.Project,",
						"          Receiver = body.value.Receiver,",
						"          Reference1 = body.value.Reference1,",
						"          Reference2 = body.value.Reference2,",
						"          RelatedEntry = body.value.RelatedEntry,",
						"          RelatedType = body.value.RelatedType,",
						"          Releaser = body.value.Releaser,",
						"          RelevantToGTS = body.value.RelevantToGTS,",
						"          ReopenManuallyClosedOrCanceledDocument = body.value.ReopenManuallyClosedOrCanceledDocument,",
						"          ReopenOriginalDocument = body.value.ReopenOriginalDocument,",
						"          ReportingSectionControlStatementVAT = body.value.ReportingSectionControlStatementVAT,",
						"          RequriedDate = body.value.RequriedDate,",
						"          Reserve = body.value.Reserve,",
						"          ReserveInvoice = body.value.ReserveInvoice,",
						"          ReuseDocumentNum = body.value.ReuseDocumentNum,",
						"          ReuseNotaFiscalNum = body.value.ReuseNotaFiscalNum,",
						"          Revision = body.value.Revision,",
						"          RevisionPo = body.value.RevisionPo,",
						"          Rounding = body.value.Rounding,",
						"          RoundingDiffAmount = body.value.RoundingDiffAmount,",
						"          RoundingDiffAmountFC = body.value.RoundingDiffAmountFC,",
						"          RoundingDiffAmountSC = body.value.RoundingDiffAmountSC,",
						"          SAPPassport = body.value.SAPPassport,",
						"          SalesPersonCode = body.value.SalesPersonCode,",
						"          Segment = body.value.Segment,",
						"          SequenceCode = body.value.SequenceCode,",
						"          SequenceModel = body.value.SequenceModel,",
						"          SequenceSerial = body.value.SequenceSerial,",
						"          Series = body.value.Series,",
						"          SeriesString = body.value.SeriesString,",
						"          ServiceGrossProfitPercent = body.value.ServiceGrossProfitPercent,",
						"          ShipFrom = body.value.ShipFrom,",
						"          ShipPlace = body.value.ShipPlace,",
						"          ShipState = body.value.ShipState,",
						"          ShipToCode = body.value.ShipToCode,",
						"          ShowSCN = body.value.ShowSCN,",
						"          SignatureDigest = body.value.SignatureDigest,",
						"          SignatureInputMessage = body.value.SignatureInputMessage,",
						"          SpecifiedClosingDate = body.value.SpecifiedClosingDate,",
						"          StartDeliveryDate = body.value.StartDeliveryDate,",
						"          StartDeliveryTime = body.value.StartDeliveryTime,",
						"          StartFrom = body.value.StartFrom,",
						"          SubSeriesString = body.value.SubSeriesString,",
						"          Submitted = body.value.Submitted,",
						"          SummeryType = body.value.SummeryType,",
						"          Supplier = body.value.Supplier,",
						"          TaxDate = body.value.TaxDate,",
						"          TaxExemptionLetterNum = body.value.TaxExemptionLetterNum,",
						"          TotalDiscount = body.value.TotalDiscount,",
						"          TotalDiscountFC = body.value.TotalDiscountFC,",
						"          TotalDiscountSC = body.value.TotalDiscountSC,",
						"          TotalEqualizationTax = body.value.TotalEqualizationTax,",
						"          TotalEqualizationTaxFC = body.value.TotalEqualizationTaxFC,",
						"          TotalEqualizationTaxSC = body.value.TotalEqualizationTaxSC,",
						"          TrackingNumber = body.value.TrackingNumber,",
						"          TransNum = body.value.TransNum,",
						"          TransportationCode = body.value.TransportationCode,",
						"          U_AIG_KID = body.value.U_AIG_KID,",
						"          U_DSS_EHFBuyersRef = body.value.U_DSS_EHFBuyersRef,",
						"          U_DSS_SendStatus = body.value.U_DSS_SendStatus,",
						"          U_Levbet = body.value.U_Levbet,",
						"          U_Opperk = body.value.U_Opperk,",
						"          U_Ordrenummer = body.value.U_Ordrenummer,",
						"          U_Sted = body.value.U_Sted,",
						"          U_esurl = body.value.U_esurl,",
						"          U_sluttkunde = body.value.U_sluttkunde,",
						"          UpdateDate = body.value.UpdateDate,",
						"          UpdateTime = body.value.UpdateTime,",
						"          UseBillToAddrToDetermineTax = body.value.UseBillToAddrToDetermineTax,",
						"          UseCorrectionVATGroup = body.value.UseCorrectionVATGroup,",
						"          UseShpdGoodsAct = body.value.UseShpdGoodsAct,",
						"          UserSign = body.value.UserSign,",
						"          VATRegNum = body.value.VATRegNum,",
						"          VatDate = body.value.VatDate,",
						"          VatPercent = body.value.VatPercent,",
						"          VatSum = body.value.VatSum,",
						"          VatSumFc = body.value.VatSumFc,",
						"          VatSumSys = body.value.VatSumSys,",
						"          VehiclePlate = body.value.VehiclePlate,",
						"          WTAmount = body.value.WTAmount,",
						"          WTAmountFC = body.value.WTAmountFC,",
						"          WTAmountSC = body.value.WTAmountSC,",
						"          WTApplied = body.value.WTApplied,",
						"          WTAppliedFC = body.value.WTAppliedFC,",
						"          WTAppliedSC = body.value.WTAppliedSC,",
						"          WTExemptedAmount = body.value.WTExemptedAmount,",
						"          WTExemptedAmountFC = body.value.WTExemptedAmountFC,",
						"          WTExemptedAmountSC = body.value.WTExemptedAmountSC,",
						"          WTNonSubjectAmount = body.value.WTNonSubjectAmount,",
						"          WTNonSubjectAmountFC = body.value.WTNonSubjectAmountFC,",
						"          WTNonSubjectAmountSC = body.value.WTNonSubjectAmountSC,",
						"          WareHouseUpdateType = body.value.WareHouseUpdateType,",
						"          WithholdingTaxDataCollection = body.value.WithholdingTaxDataCollection,",
						"          WithholdingTaxDataWTXCollection = body.value.WithholdingTaxDataWTXCollection",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> FlattenJsonValue",
						"FlattenJsonValue select(mapColumn(",
						"          DocEntry,",
						"          DocNum,",
						"          CardCode,",
						"          DocCurrency,",
						"          DocDueDate,",
						"          DocDate,",
						"          NumAtCard,",
						"          DocTotal,",
						"          VatSum,",
						"          LineTotal",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectColumns",
						"SelectColumns foldDown(unroll(LineTotal),",
						"     mapColumn(",
						"          LineTotal,",
						"          DocEntry,",
						"          DocNum,",
						"          CardCode,",
						"          DocCurrency,",
						"          DocDueDate,",
						"          DocDate,",
						"          NumAtCard,",
						"          DocTotal,",
						"          VatSum",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> FlattenJsonAdditional",
						"FlattenJsonAdditional sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> AzureSQL"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JSON_Invoices')]",
				"[concat(variables('factoryId'), '/datasets/JsonFlatten')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_budget_lines')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "RestResource_bo_budgets",
								"type": "DatasetReference"
							},
							"name": "ReadAPI",
							"description": "Read Budgets API, AccountCode=3000"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable_bo_budgets_lines",
								"type": "DatasetReference"
							},
							"name": "SqlDimTable"
						}
					],
					"transformations": [
						{
							"name": "Flatten"
						},
						{
							"name": "DataSourceColumn"
						}
					],
					"scriptLines": [
						"source(output(",
						"          body as ({@odata.context} as string, {@odata.count} as short, value as (AccountCode as short, BudgetBalanceCreditLoc as double, BudgetBalanceCreditSys as double, BudgetBalanceDebitLoc as double, BudgetBalanceDebitSys as double, BudgetCostAccountingLines as string[], BudgetLines as (AccountCode as short, BalSysTotCredit as double, BalSysTotDebit as double, BalTotCredit as double, BalTotDebit as double, BudgetKey as short, BudgetSysTotCredit as double, BudgetSysTotDebit as double, BudgetTotCredit as double, BudgetTotDebit as double, FutExpenCredit as double, FutExpenDebit as double, FutExpenSysCredit as double, FutExpenSysDebit as double, FutIncomesCredit as double, FutIncomesSysCredit as double, FutIncomesSysDebit as double, FutureIncomeDeb as double, PrecentOfAnnualBudgetAmount as double, RowDetails as string, RowNumber as short)[], BudgetScenario as short, DivisionCode as short, FutureAnnualExpensesCreditLoc as double, FutureAnnualExpensesCreditSys as double, FutureAnnualExpensesDebitLoc as double, FutureAnnualExpensesDebitSys as double, FutureAnnualRevenuesCredit as double, FutureAnnualRevenuesDebit as double, FutureRevenuesDebitLoc as double, FutureRevenuesDebitSys as double, Numerator as short, ParentAccPercent as double, ParentAccountKey as string, StartofFiscalYear as date, TotalAnnualBudgetCreditLoc as double, TotalAnnualBudgetCreditSys as double, TotalAnnualBudgetDebitLoc as double, TotalAnnualBudgetDebitSys as double)[]),",
						"          headers as [string,string]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     httpMethod: 'GET',",
						"     timeout: 30,",
						"     requestInterval: 0,",
						"     headers: ['m_ds' -> 'Bondura'],",
						"     responseFormat: ['type' -> 'json', 'documentForm' -> 'arrayOfDocuments']) ~> ReadAPI",
						"ReadAPI foldDown(unrollMultiple(body.value,body.value.BudgetLines),",
						"     mapColumn(",
						"          BudgetScenario = body.value.BudgetScenario,",
						"          RowNumber = body.value.BudgetLines.RowNumber,",
						"          PrecentOfAnnualBudgetAmount = body.value.BudgetLines.PrecentOfAnnualBudgetAmount,",
						"          BudgetTotCredit = body.value.BudgetLines.BudgetTotCredit,",
						"          BudgetSysTotCredit = body.value.BudgetLines.BudgetSysTotCredit",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> Flatten",
						"Flatten derive(m_ds = 'Bondura') ~> DataSourceColumn",
						"DataSourceColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          BudgetScenario as integer,",
						"          PrecentOfAnnualBudgetAmount as double,",
						"          RowNumber as integer,",
						"          BudgetTotCredit as double,",
						"          BudgetSysTotCredit as double,",
						"          m_ds as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SqlDimTable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource_bo_budgets')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_bo_budgets_lines')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_bo_invoices')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_bo_sap_invoices",
								"type": "DatasetReference"
							},
							"name": "ApiCall"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sql_bo_sap_invoices",
								"type": "DatasetReference"
							},
							"name": "SinkToSQLTable"
						}
					],
					"transformations": [
						{
							"name": "FlattenOrders"
						},
						{
							"name": "dataSourceId"
						}
					],
					"scriptLines": [
						"source(output(",
						"          body as ({@odata.context} as string, {@odata.nextLink} as string, value as ({@odata.etag} as string, ATDocumentType as string, AddLegIn as string, Address as string, Address2 as string, AgentCode as string, AnnualInvoiceDeclarationReference as string, ApplyCurrentVATRatesForDownPaymentsToDraw as string, ApplyTaxOnFirstInstallment as string, ArchiveNonremovableSalesQuotation as string, AssetValueDate as string, AttachmentEntry as string, AuthorizationCode as string, AuthorizationStatus as string, BPChannelCode as string, BPChannelContact as string, BPLName as string, BPL_IDAssignedToInvoice as string, BaseAmount as double, BaseAmountFC as double, BaseAmountSC as double, BaseEntry as string, BaseType as short, BillOfExchangeReserved as string, BlanketAgreementNumber as string, BlockDunning as string, Box1099 as string, CancelDate as string, CancelStatus as string, Cancelled as string, CardCode as integer, CardName as string, CashDiscountDateOffset as boolean, CentralBankIndicator as string, CertificationNumber as string, Cig as string, ClosingDate as string, ClosingOption as string, ClosingRemarks as string, Comments as string, CommissionTrade as string, CommissionTradeReturn as string, Confirmed as string, ContactPersonCode as short, ControlAccount as short, CreateOnlineQuotation as string, CreateQRCodeFrom as string, CreationDate as date, Cup as string, CustOffice as string, DANFELgTxt as string, DataVersion as boolean, DateOfReportingControlStatementVAT as string, DeferredTax as string, DiscountPercent as double, DocCurrency as string, DocDate as date, DocDueDate as date, DocEntry as short, DocNum as short, DocObjectCode as string, DocRate as double, DocTime as string, DocTotal as double, DocTotalFc as double, DocTotalSys as double, DocType as string, DocumentAdditionalExpenses as (AquisitionTax as string, BaseDocEntry as short, BaseDocLine as string, BaseDocType as string, BaseDocumentReference as string, CUSplit as string, DeductibleTaxSum as double, DeductibleTaxSumFC as double, DeductibleTaxSumSys as double, DistributionMethod as string, DistributionRule as string, DistributionRule2 as string, DistributionRule3 as string, DistributionRule4 as string, DistributionRule5 as string, DocExpenseTaxJurisdictions as string[], DocFreightEBooksDetails as string[], EqualizationTaxFC as double, EqualizationTaxPercent as double, EqualizationTaxSum as double, EqualizationTaxSys as double, ExpenseCode as boolean, ExternalCalcTaxAmount as string, ExternalCalcTaxAmountFC as string, ExternalCalcTaxAmountSC as string, ExternalCalcTaxRate as string, LastPurchasePrice as string, LineGross as double, LineGrossFC as double, LineGrossSys as double, LineNum as boolean, LineTotal as double, LineTotalFC as double, LineTotalSys as double, PaidToDate as double, PaidToDateFC as double, PaidToDateSys as double, Project as string, Remarks as string, Status as string, Stock as string, TargetAbsEntry as short, TargetType as string, TaxCode as string, TaxLiable as string, TaxPaid as double, TaxPaidFC as double, TaxPaidSys as double, TaxPercent as double, TaxSum as double, TaxSumFC as double, TaxSumSys as double, TaxTotalSum as double, TaxTotalSumFC as double, TaxTotalSumSys as double, TaxType as string, VatGroup as string, WTLiable as string)[], DocumentDelivery as string, DocumentInstallments as (DueDate as date, DunningLevel as boolean, InstallmentId as boolean, LastDunningDate as date, PaymentOrdered as string, Percentage as double, Total as double, TotalFC as string)[], DocumentLines as (AccountCode as short, ActualBaseEntry as string, ActualBaseLine as string, ActualDeliveryDate as date, Address as string, AgreementNo as string, AgreementRowNumber as string, AppliedTax as double, AppliedTaxFC as double, AppliedTaxSC as double, BackOrder as string, BarCode as string, BaseEntry as short, BaseLine as short, BaseOpenQuantity as double, BaseType as short, BatchNumbers as string[], CCDNumbers as string[], CESTCode as string, CFOPCode as string, CNJPMan as string, COGSAccountCode as short, COGSCostingCode as string, COGSCostingCode2 as string, COGSCostingCode3 as string, COGSCostingCode4 as string, COGSCostingCode5 as string, CSTCode as string, CSTforCOFINS as string, CSTforIPI as string, CSTforPIS as string, CUSplit as string, ChangeAssemlyBoMWarehouse as boolean, ChangeInventoryQuantityIndependently as string, CommisionPercent as double, CommodityClassification as string, ConsiderQuantity as string, ConsumerSalesForecast as string, CorrInvAmountToDiffAcct as double, CorrInvAmountToStock as double, CorrectionInvoiceItem as string, CostingCode as string, CostingCode2 as string, CostingCode3 as string, CostingCode4 as string, CostingCode5 as string, CountryOrg as string, CreditOriginCode as string, CtrSealQty as string, Currency as string, DefectAndBreakup as string, DeferredTax as string, DestinationCountryForImport as string, DestinationRegionForImport as string, DiscountPercent as double, DistributeExpense as string, DocEntry as short, DocumentLineAdditionalExpenses as string[], DocumentLinesBinAllocations as string[], EBooksDetails as string[], EqualizationTaxPercent as double, ExLineNo as string, ExciseAmount as double, ExpenseOperationType as string, ExpenseType as string, ExportProcesses as string[], ExternalCalcTaxAmount as string, ExternalCalcTaxAmountFC as string, ExternalCalcTaxAmountSC as string, ExternalCalcTaxRate as string, Factor1 as double, Factor2 as double, Factor3 as double, Factor4 as double, FederalTaxID as string, FreeOfChargeBP as string, FreeText as string, GrossBase as short, GrossBuyPrice as double, GrossPrice as double, GrossProfit as double, GrossProfitFC as double, GrossProfitSC as double, GrossProfitTotalBasePrice as double, GrossTotal as double, GrossTotalFC as double, GrossTotalSC as double, HSNEntry as string, Height1 as double, Height2 as double, Height2Unit as string, Hight1Unit as string, Incoterms as boolean, IndEscala as string, InventoryQuantity as double, ItemCode as integer, ItemDescription as string, ItemDetails as string, ItemType as string, LastBuyDistributeSum as double, LastBuyDistributeSumFc as double, LastBuyDistributeSumSc as double, LastBuyInmPrice as double, Lengh1 as double, Lengh1Unit as string, Lengh2 as double, Lengh2Unit as string, LineNum as short, LineStatus as string, LineTaxJurisdictions as string[], LineTotal as double, LineType as string, LocationCode as string, MeasureUnit as string, NCMCode as short, NVECode as string, NatureOfTransaction as string, NetTaxAmount as double, NetTaxAmountFC as double, NetTaxAmountSC as double, OpenAmount as double, OpenAmountFC as double, OpenAmountSC as double, OriginCountryForExport as string, OriginRegionForExport as string, OriginalItem as integer, POTargetEntry as string, POTargetNum as string, POTargetRowNum as string, PackageQuantity as double, ParentLineNum as string, PartialRetirement as string, PickListIdNumber as string, PickQuantity as double, PickStatus as string, PickStatusEx as string, PoItmNum as string, PoNum as string, Price as double, PriceAfterVAT as double, PriceSource as string, ProjectCode as string, Quantity as double, Rate as double, ReceiptNumber as string, RemainingOpenInventoryQuantity as double, RemainingOpenQuantity as double, RequiredDate as string, RequiredQuantity as string, RetirementAPC as string, RetirementQuantity as string, ReverseCharge as string, RowTotalFC as double, RowTotalSC as double, SACEntry as string, SWW as string, SalesPersonCode as short, SerialNum as string, SerialNumbers as string[], ShipDate as date, ShipToCode as string, ShipToDescription as string, ShippingMethod as short, Shortages as string, StandardItemIdentification as string, StgDesc as string, StgEntry as string, StgSeqNum as string, StockDistributesum as double, StockDistributesumForeign as double, StockDistributesumSystem as double, StockInmPrice as double, SupplierCatNum as string, Surpluses as string, TaxBeforeDPM as double, TaxBeforeDPMFC as double, TaxBeforeDPMSC as double, TaxCode as string, TaxLiable as string, TaxOnly as string, TaxPerUnit as double, TaxPercentagePerRow as double, TaxTotal as double, TaxType as string, Text as string, ThirdParty as string, TotalEqualizationTax as double, TotalEqualizationTaxFC as double, TotalEqualizationTaxSC as double, TotalInclTax as double, TransactionType as string, TransportMode as boolean, TreeType as string, UFFiscalBenefitCode as string, U_AIG_DDate as string, U_AIG_IA as string, U_AIG_ID as string, U_AIG_IN as string, U_AIG_IR as string, U_AIG_PD as string, U_AIG_PDate as string, U_Codebars as string, U_DSS_Charge as string, U_DSS_ProdOrdr as string, U_Installasjon as string, U_PItemCode as string, U_ParentItem as string, U_PlannedQty as double, U_U_AIG_DDate as string, UnencumberedReason as string, UnitPrice as double, UnitsOfMeasurment as double, UoMCode as string, UoMEntry as short, Usage as string, UseBaseUnits as string, VatGroup as string, VendorNum as string, VisualOrder as short, Volume as double, VolumeUnit as short, WTLiable as string, WarehouseCode as short, Weight1 as double, Weight1Unit as short, Weight2 as double, Weight2Unit as string, Width1 as double, Width1Unit as string, Width2 as double, Width2Unit as string, WithholdingTaxLines as string[], WithoutInventoryMovement as string)[], DocumentPackages as string[], DocumentReferences as string[], DocumentSpecialLines as string[], DocumentStatus as string, DocumentSubType as string, DocumentTaxID as string, Document_ApprovalRequests as string[], DocumentsOwner as short, DownPayment as double, DownPaymentAmount as double, DownPaymentAmountFC as double, DownPaymentAmountSC as double, DownPaymentPercentage as double, DownPaymentStatus as string, DownPaymentType as string, DownPaymentsToDraw as string[], ECommerceGSTIN as string, ECommerceOperator as string, EDocErrorCode as string, EDocErrorMessage as string, EDocExportFormat as string, EDocGenerationType as string, EDocNum as string, EDocSeries as string, EDocStatus as string, EDocType as string, ETaxNumber as string, ETaxWebSite as string, ElecCommMessage as string, ElecCommStatus as string, ElectronicProtocols as string[], EndDeliveryDate as string, EndDeliveryTime as string, ExcludeFromTaxReportControlStatementVAT as string, ExemptionValidityDateFrom as string, ExemptionValidityDateTo as string, ExternalCorrectedDocNum as string, ExtraDays as short, ExtraMonth as boolean, FCEAsPaymentMeans as string, FCI as string, FatherCard as string, FatherType as string, FederalTaxID as string, FinancialPeriod as short, FiscalDocNum as string, FolioNumber as string, FolioNumberFrom as string, FolioNumberTo as string, FolioPrefixString as string, Form1099 as string, GSTTransactionType as string, GTSChecker as string, GTSPayee as string, GroupHandWritten as string, GroupNumber as string, GroupSeries as string, HandWritten as string, ImportFileNum as string, IndFinal as string, Indicator as string, InsuranceOperation347 as string, InterimType as string, InternalCorrectedDocNum as string, InvoicePayment as string, IsAlteration as string, IsPayToBank as string, IssuingReason as boolean, JournalMemo as string, LanguageCode as short, LastPageFolioNumber as string, LegTextF as string, Letter as string, ManualNumber as string, MaximumCashDiscount as string, NTSApproved as string, NTSApprovedNumber as string, NetProcedure as string, NextCorrectingDocument as string, NumAtCard as string, NumberOfInstallments as boolean, OpenForLandedCosts as string, OpeningRemarks as string, OriginalCreditOrDebitDate as string, OriginalCreditOrDebitNo as string, OriginalRefDate as string, OriginalRefNo as string, POSCashierNumber as string, POSDailySummaryNo as string, POSEquipmentNumber as string, POSManufacturerSerialNumber as string, POSReceiptNo as string, POS_CashRegister as string, PaidToDate as double, PaidToDateFC as double, PaidToDateSys as double, PartialSupply as string, PayToBankAccountNo as string, PayToBankBranch as string, PayToBankCode as string, PayToBankCountry as string, PayToCode as string, PaymentBlock as string, PaymentBlockEntry as string, PaymentGroupCode as boolean, PaymentMethod as string, PaymentReference as long, PeriodIndicator as string, Pick as string, PickRemark as string, PickStatus as string, PointOfIssueCode as string, PriceMode as string, PrintSEPADirect as string, Printed as string, PrivateKeyVersion as string, Project as string, Receiver as string, Reference1 as short, Reference2 as string, RelatedEntry as string, RelatedType as short, Releaser as string, RelevantToGTS as string, ReopenManuallyClosedOrCanceledDocument as string, ReopenOriginalDocument as string, ReportingSectionControlStatementVAT as string, RequriedDate as string, Reserve as string, ReserveInvoice as string, ReuseDocumentNum as string, ReuseNotaFiscalNum as string, Revision as string, RevisionPo as string, Rounding as string, RoundingDiffAmount as double, RoundingDiffAmountFC as double, RoundingDiffAmountSC as double, SAPPassport as string, SalesPersonCode as short, Segment as boolean, SequenceCode as string, SequenceModel as boolean, SequenceSerial as string, Series as short, SeriesString as string, ServiceGrossProfitPercent as string, ShipFrom as string, ShipPlace as string, ShipState as string, ShipToCode as string, ShowSCN as string, SignatureDigest as string, SignatureInputMessage as string, SpecifiedClosingDate as string, StartDeliveryDate as string, StartDeliveryTime as string, StartFrom as string, SubSeriesString as string, Submitted as string, SummeryType as string, Supplier as string, TaxDate as date, TaxExemptionLetterNum as string, TotalDiscount as double, TotalDiscountFC as double, TotalDiscountSC as double, TotalEqualizationTax as double, TotalEqualizationTaxFC as double, TotalEqualizationTaxSC as double, TrackingNumber as string, TransNum as short, TransportationCode as short, U_AIG_KID as string, U_DSS_EHFBuyersRef as string, U_DSS_SendStatus as short, U_Levbet as string, U_Opperk as string, U_Ordrenummer as string, U_Sted as string, U_esurl as string, U_sluttkunde as string, UpdateDate as date, UpdateTime as string, UseBillToAddrToDetermineTax as string, UseCorrectionVATGroup as string, UseShpdGoodsAct as string, UserSign as short, VATRegNum as string, VatDate as string, VatPercent as double, VatSum as double, VatSumFc as double, VatSumSys as double, VehiclePlate as string, WTAmount as double, WTAmountFC as double, WTAmountSC as double, WTApplied as double, WTAppliedFC as double, WTAppliedSC as double, WTExemptedAmount as double, WTExemptedAmountFC as double, WTExemptedAmountSC as double, WTNonSubjectAmount as double, WTNonSubjectAmountFC as double, WTNonSubjectAmountSC as double, WareHouseUpdateType as string, WithholdingTaxDataCollection as string[], WithholdingTaxDataWTXCollection as string[])[]),",
						"          headers as [string,string]",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     httpMethod: 'GET',",
						"     timeout: 30,",
						"     requestInterval: 0,",
						"     responseFormat: ['type' -> 'json', 'documentForm' -> 'arrayOfDocuments']) ~> ApiCall",
						"ApiCall foldDown(unrollMultiple(body.value,body.value.DocumentAdditionalExpenses),",
						"     mapColumn(",
						"          ATDocumentType = body.value.ATDocumentType,",
						"          AddLegIn = body.value.AddLegIn,",
						"          Address = body.value.Address,",
						"          Address2 = body.value.Address2,",
						"          AgentCode = body.value.AgentCode,",
						"          AnnualInvoiceDeclarationReference = body.value.AnnualInvoiceDeclarationReference,",
						"          ApplyTaxOnFirstInstallment = body.value.ApplyTaxOnFirstInstallment,",
						"          ArchiveNonremovableSalesQuotation = body.value.ArchiveNonremovableSalesQuotation,",
						"          AssetValueDate = body.value.AssetValueDate,",
						"          AttachmentEntry = body.value.AttachmentEntry,",
						"          AuthorizationCode = body.value.AuthorizationCode,",
						"          AuthorizationStatus = body.value.AuthorizationStatus,",
						"          BPChannelCode = body.value.BPChannelCode,",
						"          BPChannelContact = body.value.BPChannelContact,",
						"          BPLName = body.value.BPLName,",
						"          BPL_IDAssignedToInvoice = body.value.BPL_IDAssignedToInvoice,",
						"          BaseAmount = body.value.BaseAmount,",
						"          BaseAmountFC = body.value.BaseAmountFC,",
						"          BaseAmountSC = body.value.BaseAmountSC,",
						"          BaseEntry = body.value.BaseEntry,",
						"          BaseType = body.value.BaseType,",
						"          BillOfExchangeReserved = body.value.BillOfExchangeReserved,",
						"          BlanketAgreementNumber = body.value.BlanketAgreementNumber,",
						"          BlockDunning = body.value.BlockDunning,",
						"          Box1099 = body.value.Box1099,",
						"          CancelDate = body.value.CancelDate,",
						"          CancelStatus = body.value.CancelStatus,",
						"          Cancelled = body.value.Cancelled,",
						"          CardCode = body.value.CardCode,",
						"          CardName = body.value.CardName,",
						"          CashDiscountDateOffset = body.value.CashDiscountDateOffset,",
						"          CentralBankIndicator = body.value.CentralBankIndicator,",
						"          CertificationNumber = body.value.CertificationNumber,",
						"          Cig = body.value.Cig,",
						"          ClosingDate = body.value.ClosingDate,",
						"          ClosingOption = body.value.ClosingOption,",
						"          ClosingRemarks = body.value.ClosingRemarks,",
						"          Comments = body.value.Comments,",
						"          CommissionTrade = body.value.CommissionTrade,",
						"          CommissionTradeReturn = body.value.CommissionTradeReturn,",
						"          Confirmed = body.value.Confirmed,",
						"          ContactPersonCode = body.value.ContactPersonCode,",
						"          ControlAccount = body.value.ControlAccount,",
						"          CreateOnlineQuotation = body.value.CreateOnlineQuotation,",
						"          CreateQRCodeFrom = body.value.CreateQRCodeFrom,",
						"          CreationDate = body.value.CreationDate,",
						"          Cup = body.value.Cup,",
						"          CustOffice = body.value.CustOffice,",
						"          DANFELgTxt = body.value.DANFELgTxt,",
						"          DataVersion = body.value.DataVersion,",
						"          DateOfReportingControlStatementVAT = body.value.DateOfReportingControlStatementVAT,",
						"          DeferredTax = body.value.DeferredTax,",
						"          DiscountPercent = body.value.DiscountPercent,",
						"          DocCurrency = body.value.DocCurrency,",
						"          DocDate = body.value.DocDate,",
						"          DocDueDate = body.value.DocDueDate,",
						"          DocEntry = body.value.DocEntry,",
						"          DocNum = body.value.DocNum,",
						"          DocObjectCode = body.value.DocObjectCode,",
						"          DocRate = body.value.DocRate,",
						"          DocTime = body.value.DocTime,",
						"          DocTotal = body.value.DocTotal,",
						"          DocTotalFc = body.value.DocTotalFc,",
						"          DocTotalSys = body.value.DocTotalSys,",
						"          DocType = body.value.DocType,",
						"          AdditionalExpenses_AquisitionTax = body.value.DocumentAdditionalExpenses.AquisitionTax,",
						"          AdditionalExpenses_BaseDocEntry = body.value.DocumentAdditionalExpenses.BaseDocEntry,",
						"          AdditionalExpenses_BaseDocLine = body.value.DocumentAdditionalExpenses.BaseDocLine,",
						"          AdditionalExpenses_BaseDocType = body.value.DocumentAdditionalExpenses.BaseDocType,",
						"          DocumentAddiAdditionalExpenses_BaseDocumentReference = body.value.DocumentAdditionalExpenses.BaseDocumentReference,",
						"          AdditionalExpenses_CUSplit = body.value.DocumentAdditionalExpenses.CUSplit,",
						"          AdditionalExpenses_DeductibleTaxSum = body.value.DocumentAdditionalExpenses.DeductibleTaxSum,",
						"          AdditionalExpenses_DeductibleTaxSumFC = body.value.DocumentAdditionalExpenses.DeductibleTaxSumFC,",
						"          AdditionalExpenses_DeductibleTaxSumSys = body.value.DocumentAdditionalExpenses.DeductibleTaxSumSys,",
						"          AdditionalExpenses_DistributionMethod = body.value.DocumentAdditionalExpenses.DistributionMethod,",
						"          AdditionalExpenses_DistributionRule = body.value.DocumentAdditionalExpenses.DistributionRule,",
						"          AdditionalExpenses_DistributionRule2 = body.value.DocumentAdditionalExpenses.DistributionRule2,",
						"          AdditionalExpenses_DistributionRule3 = body.value.DocumentAdditionalExpenses.DistributionRule3,",
						"          AdditionalExpenses_DistributionRule4 = body.value.DocumentAdditionalExpenses.DistributionRule4,",
						"          AdditionalExpenses_DistributionRule5 = body.value.DocumentAdditionalExpenses.DistributionRule5,",
						"          AdditionalExpenses_EqualizationTaxFC = body.value.DocumentAdditionalExpenses.EqualizationTaxFC,",
						"          AdditionalExpenses_EqualizationTaxPercent = body.value.DocumentAdditionalExpenses.EqualizationTaxPercent,",
						"          AdditionalExpenses_EqualizationTaxSum = body.value.DocumentAdditionalExpenses.EqualizationTaxSum,",
						"          AdditionalExpenses_EqualizationTaxSys = body.value.DocumentAdditionalExpenses.EqualizationTaxSys,",
						"          AdditionalExpenses_ExpenseCode = body.value.DocumentAdditionalExpenses.ExpenseCode,",
						"          AdditionalExpenses_ExternalCalcTaxAmount = body.value.DocumentAdditionalExpenses.ExternalCalcTaxAmount,",
						"          AdditionalExpenses_ExternalCalcTaxAmountFC = body.value.DocumentAdditionalExpenses.ExternalCalcTaxAmountFC,",
						"          AdditionalExpenses_ExternalCalcTaxAmountSC = body.value.DocumentAdditionalExpenses.ExternalCalcTaxAmountSC,",
						"          AdditionalExpenses_ExternalCalcTaxRate = body.value.DocumentAdditionalExpenses.ExternalCalcTaxRate,",
						"          AdditionalExpenses_LastPurchasePrice = body.value.DocumentAdditionalExpenses.LastPurchasePrice,",
						"          AdditionalExpenses_LineGross = body.value.DocumentAdditionalExpenses.LineGross,",
						"          AdditionalExpenses_LineGrossFC = body.value.DocumentAdditionalExpenses.LineGrossFC,",
						"          AdditionalExpenses_LineGrossSys = body.value.DocumentAdditionalExpenses.LineGrossSys,",
						"          AdditionalExpenses_LineNum = body.value.DocumentAdditionalExpenses.LineNum,",
						"          AdditionalExpenses_LineTotal = body.value.DocumentAdditionalExpenses.LineTotal,",
						"          AdditionalExpenses_LineTotalFC = body.value.DocumentAdditionalExpenses.LineTotalFC,",
						"          AdditionalExpenses_LineTotalSys = body.value.DocumentAdditionalExpenses.LineTotalSys,",
						"          AdditionalExpenses_PaidToDate = body.value.DocumentAdditionalExpenses.PaidToDate,",
						"          AdditionalExpenses_PaidToDateFC = body.value.DocumentAdditionalExpenses.PaidToDateFC,",
						"          AdditionalExpenses_PaidToDateSys = body.value.DocumentAdditionalExpenses.PaidToDateSys,",
						"          AdditionalExpenses_Project = body.value.DocumentAdditionalExpenses.Project,",
						"          AdditionalExpenses_Remarks = body.value.DocumentAdditionalExpenses.Remarks,",
						"          AdditionalExpenses_Status = body.value.DocumentAdditionalExpenses.Status,",
						"          AdditionalExpenses_Stock = body.value.DocumentAdditionalExpenses.Stock,",
						"          AdditionalExpenses_TargetAbsEntry = body.value.DocumentAdditionalExpenses.TargetAbsEntry,",
						"          AdditionalExpenses_TargetType = body.value.DocumentAdditionalExpenses.TargetType,",
						"          AdditionalExpenses_TaxCode = body.value.DocumentAdditionalExpenses.TaxCode,",
						"          AdditionalExpenses_TaxLiable = body.value.DocumentAdditionalExpenses.TaxLiable,",
						"          AdditionalExpenses_TaxPaid = body.value.DocumentAdditionalExpenses.TaxPaid,",
						"          AdditionalExpenses_TaxPaidFC = body.value.DocumentAdditionalExpenses.TaxPaidFC,",
						"          AdditionalExpenses_TaxPaidSys = body.value.DocumentAdditionalExpenses.TaxPaidSys,",
						"          AdditionalExpenses_TaxPercent = body.value.DocumentAdditionalExpenses.TaxPercent,",
						"          AdditionalExpenses_TaxSum = body.value.DocumentAdditionalExpenses.TaxSum,",
						"          AdditionalExpenses_TaxSumFC = body.value.DocumentAdditionalExpenses.TaxSumFC,",
						"          AdditionalExpenses_TaxSumSys = body.value.DocumentAdditionalExpenses.TaxSumSys,",
						"          AdditionalExpenses_TaxTotalSum = body.value.DocumentAdditionalExpenses.TaxTotalSum,",
						"          AdditionalExpenses_TaxTotalSumFC = body.value.DocumentAdditionalExpenses.TaxTotalSumFC,",
						"          AdditionalExpenses_TaxTotalSumSys = body.value.DocumentAdditionalExpenses.TaxTotalSumSys,",
						"          AdditionalExpenses_TaxType = body.value.DocumentAdditionalExpenses.TaxType,",
						"          AdditionalExpenses_VatGroup = body.value.DocumentAdditionalExpenses.VatGroup,",
						"          AdditionalExpenses_WTLiable = body.value.DocumentAdditionalExpenses.WTLiable,",
						"          DocumentStatus = body.value.DocumentStatus,",
						"          DocumentSubType = body.value.DocumentSubType,",
						"          DocumentTaxID = body.value.DocumentTaxID,",
						"          DocumentsOwner = body.value.DocumentsOwner,",
						"          ECommerceGSTIN = body.value.ECommerceGSTIN,",
						"          ECommerceOperator = body.value.ECommerceOperator,",
						"          EDocErrorCode = body.value.EDocErrorCode,",
						"          EDocErrorMessage = body.value.EDocErrorMessage,",
						"          EDocExportFormat = body.value.EDocExportFormat,",
						"          EDocGenerationType = body.value.EDocGenerationType,",
						"          EDocNum = body.value.EDocNum,",
						"          EDocSeries = body.value.EDocSeries,",
						"          EDocStatus = body.value.EDocStatus,",
						"          EDocType = body.value.EDocType,",
						"          ETaxNumber = body.value.ETaxNumber,",
						"          ETaxWebSite = body.value.ETaxWebSite,",
						"          ElecCommMessage = body.value.ElecCommMessage,",
						"          ElecCommStatus = body.value.ElecCommStatus,",
						"          EndDeliveryDate = body.value.EndDeliveryDate,",
						"          EndDeliveryTime = body.value.EndDeliveryTime,",
						"          ExcludeFromTaxReportControlStatementVAT = body.value.ExcludeFromTaxReportControlStatementVAT,",
						"          ExemptionValidityDateFrom = body.value.ExemptionValidityDateFrom,",
						"          ExemptionValidityDateTo = body.value.ExemptionValidityDateTo,",
						"          ExternalCorrectedDocNum = body.value.ExternalCorrectedDocNum,",
						"          ExtraDays = body.value.ExtraDays,",
						"          ExtraMonth = body.value.ExtraMonth,",
						"          FCEAsPaymentMeans = body.value.FCEAsPaymentMeans,",
						"          FCI = body.value.FCI,",
						"          FatherCard = body.value.FatherCard,",
						"          FatherType = body.value.FatherType,",
						"          FederalTaxID = body.value.FederalTaxID,",
						"          FinancialPeriod = body.value.FinancialPeriod,",
						"          FiscalDocNum = body.value.FiscalDocNum,",
						"          FolioNumber = body.value.FolioNumber,",
						"          FolioNumberFrom = body.value.FolioNumberFrom,",
						"          FolioNumberTo = body.value.FolioNumberTo,",
						"          FolioPrefixString = body.value.FolioPrefixString,",
						"          Form1099 = body.value.Form1099,",
						"          GSTTransactionType = body.value.GSTTransactionType,",
						"          GTSChecker = body.value.GTSChecker,",
						"          GTSPayee = body.value.GTSPayee,",
						"          GroupHandWritten = body.value.GroupHandWritten,",
						"          GroupNumber = body.value.GroupNumber,",
						"          GroupSeries = body.value.GroupSeries,",
						"          HandWritten = body.value.HandWritten,",
						"          ImportFileNum = body.value.ImportFileNum,",
						"          IndFinal = body.value.IndFinal,",
						"          Indicator = body.value.Indicator,",
						"          InsuranceOperation347 = body.value.InsuranceOperation347,",
						"          InterimType = body.value.InterimType,",
						"          InternalCorrectedDocNum = body.value.InternalCorrectedDocNum,",
						"          InvoicePayment = body.value.InvoicePayment,",
						"          IsAlteration = body.value.IsAlteration,",
						"          IsPayToBank = body.value.IsPayToBank,",
						"          IssuingReason = body.value.IssuingReason,",
						"          JournalMemo = body.value.JournalMemo,",
						"          LanguageCode = body.value.LanguageCode,",
						"          LastPageFolioNumber = body.value.LastPageFolioNumber,",
						"          LegTextF = body.value.LegTextF,",
						"          Letter = body.value.Letter,",
						"          ManualNumber = body.value.ManualNumber,",
						"          MaximumCashDiscount = body.value.MaximumCashDiscount,",
						"          NTSApproved = body.value.NTSApproved,",
						"          NTSApprovedNumber = body.value.NTSApprovedNumber,",
						"          NetProcedure = body.value.NetProcedure,",
						"          NextCorrectingDocument = body.value.NextCorrectingDocument,",
						"          NumAtCard = body.value.NumAtCard,",
						"          NumberOfInstallments = body.value.NumberOfInstallments,",
						"          OpenForLandedCosts = body.value.OpenForLandedCosts,",
						"          OpeningRemarks = body.value.OpeningRemarks,",
						"          OriginalCreditOrDebitDate = body.value.OriginalCreditOrDebitDate,",
						"          OriginalCreditOrDebitNo = body.value.OriginalCreditOrDebitNo,",
						"          OriginalRefDate = body.value.OriginalRefDate,",
						"          OriginalRefNo = body.value.OriginalRefNo,",
						"          POSCashierNumber = body.value.POSCashierNumber,",
						"          POSDailySummaryNo = body.value.POSDailySummaryNo,",
						"          POSEquipmentNumber = body.value.POSEquipmentNumber,",
						"          POSManufacturerSerialNumber = body.value.POSManufacturerSerialNumber,",
						"          POSReceiptNo = body.value.POSReceiptNo,",
						"          POS_CashRegister = body.value.POS_CashRegister,",
						"          PaidToDate = body.value.PaidToDate,",
						"          PaidToDateFC = body.value.PaidToDateFC,",
						"          PaidToDateSys = body.value.PaidToDateSys,",
						"          PartialSupply = body.value.PartialSupply,",
						"          PayToBankAccountNo = body.value.PayToBankAccountNo,",
						"          PayToBankBranch = body.value.PayToBankBranch,",
						"          PayToBankCode = body.value.PayToBankCode,",
						"          PayToBankCountry = body.value.PayToBankCountry,",
						"          PayToCode = body.value.PayToCode,",
						"          PaymentBlock = body.value.PaymentBlock,",
						"          PaymentBlockEntry = body.value.PaymentBlockEntry,",
						"          PaymentGroupCode = body.value.PaymentGroupCode,",
						"          PaymentMethod = body.value.PaymentMethod,",
						"          PaymentReference = body.value.PaymentReference,",
						"          PeriodIndicator = body.value.PeriodIndicator,",
						"          Pick = body.value.Pick,",
						"          PickRemark = body.value.PickRemark,",
						"          PickStatus = body.value.PickStatus,",
						"          PointOfIssueCode = body.value.PointOfIssueCode,",
						"          PriceMode = body.value.PriceMode,",
						"          PrintSEPADirect = body.value.PrintSEPADirect,",
						"          Printed = body.value.Printed,",
						"          PrivateKeyVersion = body.value.PrivateKeyVersion,",
						"          Project = body.value.Project,",
						"          Receiver = body.value.Receiver,",
						"          Reference1 = body.value.Reference1,",
						"          Reference2 = body.value.Reference2,",
						"          RelatedEntry = body.value.RelatedEntry,",
						"          RelatedType = body.value.RelatedType,",
						"          Releaser = body.value.Releaser,",
						"          RelevantToGTS = body.value.RelevantToGTS,",
						"          ReopenManuallyClosedOrCanceledDocument = body.value.ReopenManuallyClosedOrCanceledDocument,",
						"          ReopenOriginalDocument = body.value.ReopenOriginalDocument,",
						"          ReportingSectionControlStatementVAT = body.value.ReportingSectionControlStatementVAT,",
						"          RequriedDate = body.value.RequriedDate,",
						"          Reserve = body.value.Reserve,",
						"          ReserveInvoice = body.value.ReserveInvoice,",
						"          ReuseDocumentNum = body.value.ReuseDocumentNum,",
						"          ReuseNotaFiscalNum = body.value.ReuseNotaFiscalNum,",
						"          Revision = body.value.Revision,",
						"          RevisionPo = body.value.RevisionPo,",
						"          Rounding = body.value.Rounding,",
						"          RoundingDiffAmount = body.value.RoundingDiffAmount,",
						"          RoundingDiffAmountFC = body.value.RoundingDiffAmountFC,",
						"          RoundingDiffAmountSC = body.value.RoundingDiffAmountSC,",
						"          SAPPassport = body.value.SAPPassport,",
						"          SalesPersonCode = body.value.SalesPersonCode,",
						"          Segment = body.value.Segment,",
						"          SequenceCode = body.value.SequenceCode,",
						"          SequenceModel = body.value.SequenceModel,",
						"          SequenceSerial = body.value.SequenceSerial,",
						"          Series = body.value.Series,",
						"          SeriesString = body.value.SeriesString,",
						"          ServiceGrossProfitPercent = body.value.ServiceGrossProfitPercent,",
						"          ShipFrom = body.value.ShipFrom,",
						"          ShipPlace = body.value.ShipPlace,",
						"          ShipState = body.value.ShipState,",
						"          ShipToCode = body.value.ShipToCode,",
						"          ShowSCN = body.value.ShowSCN,",
						"          SignatureDigest = body.value.SignatureDigest,",
						"          SignatureInputMessage = body.value.SignatureInputMessage,",
						"          SpecifiedClosingDate = body.value.SpecifiedClosingDate,",
						"          StartDeliveryDate = body.value.StartDeliveryDate,",
						"          StartDeliveryTime = body.value.StartDeliveryTime,",
						"          StartFrom = body.value.StartFrom,",
						"          SubSeriesString = body.value.SubSeriesString,",
						"          Submitted = body.value.Submitted,",
						"          SummeryType = body.value.SummeryType,",
						"          Supplier = body.value.Supplier,",
						"          TaxDate = body.value.TaxDate,",
						"          TaxExemptionLetterNum = body.value.TaxExemptionLetterNum,",
						"          TotalDiscount = body.value.TotalDiscount,",
						"          TotalDiscountFC = body.value.TotalDiscountFC,",
						"          TotalDiscountSC = body.value.TotalDiscountSC,",
						"          TotalEqualizationTax = body.value.TotalEqualizationTax,",
						"          TotalEqualizationTaxFC = body.value.TotalEqualizationTaxFC,",
						"          TotalEqualizationTaxSC = body.value.TotalEqualizationTaxSC,",
						"          TrackingNumber = body.value.TrackingNumber,",
						"          TransNum = body.value.TransNum,",
						"          TransportationCode = body.value.TransportationCode,",
						"          U_AIG_KID = body.value.U_AIG_KID,",
						"          U_DSS_EHFBuyersRef = body.value.U_DSS_EHFBuyersRef,",
						"          U_DSS_SendStatus = body.value.U_DSS_SendStatus,",
						"          U_Levbet = body.value.U_Levbet,",
						"          U_Opperk = body.value.U_Opperk,",
						"          U_Ordrenummer = body.value.U_Ordrenummer,",
						"          U_Sted = body.value.U_Sted,",
						"          U_esurl = body.value.U_esurl,",
						"          U_sluttkunde = body.value.U_sluttkunde,",
						"          UpdateDate = body.value.UpdateDate,",
						"          UpdateTime = body.value.UpdateTime,",
						"          UseBillToAddrToDetermineTax = body.value.UseBillToAddrToDetermineTax,",
						"          UseCorrectionVATGroup = body.value.UseCorrectionVATGroup,",
						"          UseShpdGoodsAct = body.value.UseShpdGoodsAct,",
						"          UserSign = body.value.UserSign,",
						"          VATRegNum = body.value.VATRegNum,",
						"          VatDate = body.value.VatDate,",
						"          VatPercent = body.value.VatPercent,",
						"          VatSum = body.value.VatSum,",
						"          VatSumFc = body.value.VatSumFc,",
						"          VatSumSys = body.value.VatSumSys,",
						"          VehiclePlate = body.value.VehiclePlate,",
						"          WTAmount = body.value.WTAmount,",
						"          WTAmountFC = body.value.WTAmountFC,",
						"          WTAmountSC = body.value.WTAmountSC,",
						"          WTApplied = body.value.WTApplied,",
						"          WTAppliedFC = body.value.WTAppliedFC,",
						"          WTAppliedSC = body.value.WTAppliedSC,",
						"          WTExemptedAmount = body.value.WTExemptedAmount,",
						"          WTExemptedAmountFC = body.value.WTExemptedAmountFC,",
						"          WTExemptedAmountSC = body.value.WTExemptedAmountSC,",
						"          WTNonSubjectAmount = body.value.WTNonSubjectAmount,",
						"          WTNonSubjectAmountFC = body.value.WTNonSubjectAmountFC,",
						"          WTNonSubjectAmountSC = body.value.WTNonSubjectAmountSC,",
						"          WareHouseUpdateType = body.value.WareHouseUpdateType",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> FlattenOrders",
						"FlattenOrders derive(m_ds = 'Bondura') ~> dataSourceId",
						"dataSourceId sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SinkToSQLTable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bo_sap_invoices')]",
				"[concat(variables('factoryId'), '/datasets/sql_bo_sap_invoices')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_bo_invoices_doclines')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_bo_sap_invoices",
								"type": "DatasetReference"
							},
							"name": "apiOrders"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sql_bo_sap_invoices_lines",
								"type": "DatasetReference"
							},
							"name": "SinkToSQLTable"
						}
					],
					"transformations": [
						{
							"name": "FlattenDocumentLines"
						}
					],
					"scriptLines": [
						"source(output(",
						"          body as ({@odata.context} as string, {@odata.nextLink} as string, value as ({@odata.etag} as string, ATDocumentType as string, AddLegIn as string, Address as string, Address2 as string, AgentCode as string, AnnualInvoiceDeclarationReference as string, ApplyCurrentVATRatesForDownPaymentsToDraw as string, ApplyTaxOnFirstInstallment as string, ArchiveNonremovableSalesQuotation as string, AssetValueDate as string, AttachmentEntry as string, AuthorizationCode as string, AuthorizationStatus as string, BPChannelCode as string, BPChannelContact as string, BPLName as string, BPL_IDAssignedToInvoice as string, BaseAmount as double, BaseAmountFC as double, BaseAmountSC as double, BaseEntry as string, BaseType as short, BillOfExchangeReserved as string, BlanketAgreementNumber as string, BlockDunning as string, Box1099 as string, CancelDate as string, CancelStatus as string, Cancelled as string, CardCode as integer, CardName as string, CashDiscountDateOffset as boolean, CentralBankIndicator as string, CertificationNumber as string, Cig as string, ClosingDate as string, ClosingOption as string, ClosingRemarks as string, Comments as string, CommissionTrade as string, CommissionTradeReturn as string, Confirmed as string, ContactPersonCode as short, ControlAccount as short, CreateOnlineQuotation as string, CreateQRCodeFrom as string, CreationDate as date, Cup as string, CustOffice as string, DANFELgTxt as string, DataVersion as boolean, DateOfReportingControlStatementVAT as string, DeferredTax as string, DiscountPercent as double, DocCurrency as string, DocDate as date, DocDueDate as date, DocEntry as short, DocNum as short, DocObjectCode as string, DocRate as double, DocTime as string, DocTotal as double, DocTotalFc as double, DocTotalSys as double, DocType as string, DocumentAdditionalExpenses as (AquisitionTax as string, BaseDocEntry as short, BaseDocLine as string, BaseDocType as string, BaseDocumentReference as string, CUSplit as string, DeductibleTaxSum as double, DeductibleTaxSumFC as double, DeductibleTaxSumSys as double, DistributionMethod as string, DistributionRule as string, DistributionRule2 as string, DistributionRule3 as string, DistributionRule4 as string, DistributionRule5 as string, DocExpenseTaxJurisdictions as string[], DocFreightEBooksDetails as string[], EqualizationTaxFC as double, EqualizationTaxPercent as double, EqualizationTaxSum as double, EqualizationTaxSys as double, ExpenseCode as boolean, ExternalCalcTaxAmount as string, ExternalCalcTaxAmountFC as string, ExternalCalcTaxAmountSC as string, ExternalCalcTaxRate as string, LastPurchasePrice as string, LineGross as double, LineGrossFC as double, LineGrossSys as double, LineNum as boolean, LineTotal as double, LineTotalFC as double, LineTotalSys as double, PaidToDate as double, PaidToDateFC as double, PaidToDateSys as double, Project as string, Remarks as string, Status as string, Stock as string, TargetAbsEntry as short, TargetType as string, TaxCode as string, TaxLiable as string, TaxPaid as double, TaxPaidFC as double, TaxPaidSys as double, TaxPercent as double, TaxSum as double, TaxSumFC as double, TaxSumSys as double, TaxTotalSum as double, TaxTotalSumFC as double, TaxTotalSumSys as double, TaxType as string, VatGroup as string, WTLiable as string)[], DocumentDelivery as string, DocumentInstallments as (DueDate as date, DunningLevel as boolean, InstallmentId as boolean, LastDunningDate as date, PaymentOrdered as string, Percentage as double, Total as double, TotalFC as string)[], DocumentLines as (AccountCode as short, ActualBaseEntry as string, ActualBaseLine as string, ActualDeliveryDate as date, Address as string, AgreementNo as string, AgreementRowNumber as string, AppliedTax as double, AppliedTaxFC as double, AppliedTaxSC as double, BackOrder as string, BarCode as string, BaseEntry as short, BaseLine as short, BaseOpenQuantity as double, BaseType as short, BatchNumbers as string[], CCDNumbers as string[], CESTCode as string, CFOPCode as string, CNJPMan as string, COGSAccountCode as short, COGSCostingCode as string, COGSCostingCode2 as string, COGSCostingCode3 as string, COGSCostingCode4 as string, COGSCostingCode5 as string, CSTCode as string, CSTforCOFINS as string, CSTforIPI as string, CSTforPIS as string, CUSplit as string, ChangeAssemlyBoMWarehouse as boolean, ChangeInventoryQuantityIndependently as string, CommisionPercent as double, CommodityClassification as string, ConsiderQuantity as string, ConsumerSalesForecast as string, CorrInvAmountToDiffAcct as double, CorrInvAmountToStock as double, CorrectionInvoiceItem as string, CostingCode as string, CostingCode2 as string, CostingCode3 as string, CostingCode4 as string, CostingCode5 as string, CountryOrg as string, CreditOriginCode as string, CtrSealQty as string, Currency as string, DefectAndBreakup as string, DeferredTax as string, DestinationCountryForImport as string, DestinationRegionForImport as string, DiscountPercent as double, DistributeExpense as string, DocEntry as short, DocumentLineAdditionalExpenses as string[], DocumentLinesBinAllocations as string[], EBooksDetails as string[], EqualizationTaxPercent as double, ExLineNo as string, ExciseAmount as double, ExpenseOperationType as string, ExpenseType as string, ExportProcesses as string[], ExternalCalcTaxAmount as string, ExternalCalcTaxAmountFC as string, ExternalCalcTaxAmountSC as string, ExternalCalcTaxRate as string, Factor1 as double, Factor2 as double, Factor3 as double, Factor4 as double, FederalTaxID as string, FreeOfChargeBP as string, FreeText as string, GrossBase as short, GrossBuyPrice as double, GrossPrice as double, GrossProfit as double, GrossProfitFC as double, GrossProfitSC as double, GrossProfitTotalBasePrice as double, GrossTotal as double, GrossTotalFC as double, GrossTotalSC as double, HSNEntry as string, Height1 as double, Height2 as double, Height2Unit as string, Hight1Unit as string, Incoterms as boolean, IndEscala as string, InventoryQuantity as double, ItemCode as integer, ItemDescription as string, ItemDetails as string, ItemType as string, LastBuyDistributeSum as double, LastBuyDistributeSumFc as double, LastBuyDistributeSumSc as double, LastBuyInmPrice as double, Lengh1 as double, Lengh1Unit as string, Lengh2 as double, Lengh2Unit as string, LineNum as short, LineStatus as string, LineTaxJurisdictions as string[], LineTotal as double, LineType as string, LocationCode as string, MeasureUnit as string, NCMCode as short, NVECode as string, NatureOfTransaction as string, NetTaxAmount as double, NetTaxAmountFC as double, NetTaxAmountSC as double, OpenAmount as double, OpenAmountFC as double, OpenAmountSC as double, OriginCountryForExport as string, OriginRegionForExport as string, OriginalItem as integer, POTargetEntry as string, POTargetNum as string, POTargetRowNum as string, PackageQuantity as double, ParentLineNum as string, PartialRetirement as string, PickListIdNumber as string, PickQuantity as double, PickStatus as string, PickStatusEx as string, PoItmNum as string, PoNum as string, Price as double, PriceAfterVAT as double, PriceSource as string, ProjectCode as string, Quantity as double, Rate as double, ReceiptNumber as string, RemainingOpenInventoryQuantity as double, RemainingOpenQuantity as double, RequiredDate as string, RequiredQuantity as string, RetirementAPC as string, RetirementQuantity as string, ReverseCharge as string, RowTotalFC as double, RowTotalSC as double, SACEntry as string, SWW as string, SalesPersonCode as short, SerialNum as string, SerialNumbers as string[], ShipDate as date, ShipToCode as string, ShipToDescription as string, ShippingMethod as short, Shortages as string, StandardItemIdentification as string, StgDesc as string, StgEntry as string, StgSeqNum as string, StockDistributesum as double, StockDistributesumForeign as double, StockDistributesumSystem as double, StockInmPrice as double, SupplierCatNum as string, Surpluses as string, TaxBeforeDPM as double, TaxBeforeDPMFC as double, TaxBeforeDPMSC as double, TaxCode as string, TaxLiable as string, TaxOnly as string, TaxPerUnit as double, TaxPercentagePerRow as double, TaxTotal as double, TaxType as string, Text as string, ThirdParty as string, TotalEqualizationTax as double, TotalEqualizationTaxFC as double, TotalEqualizationTaxSC as double, TotalInclTax as double, TransactionType as string, TransportMode as boolean, TreeType as string, UFFiscalBenefitCode as string, U_AIG_DDate as string, U_AIG_IA as string, U_AIG_ID as string, U_AIG_IN as string, U_AIG_IR as string, U_AIG_PD as string, U_AIG_PDate as string, U_Codebars as string, U_DSS_Charge as string, U_DSS_ProdOrdr as string, U_Installasjon as string, U_PItemCode as string, U_ParentItem as string, U_PlannedQty as double, U_U_AIG_DDate as string, UnencumberedReason as string, UnitPrice as double, UnitsOfMeasurment as double, UoMCode as string, UoMEntry as short, Usage as string, UseBaseUnits as string, VatGroup as string, VendorNum as string, VisualOrder as short, Volume as double, VolumeUnit as short, WTLiable as string, WarehouseCode as short, Weight1 as double, Weight1Unit as short, Weight2 as double, Weight2Unit as string, Width1 as double, Width1Unit as string, Width2 as double, Width2Unit as string, WithholdingTaxLines as string[], WithoutInventoryMovement as string)[], DocumentPackages as string[], DocumentReferences as string[], DocumentSpecialLines as string[], DocumentStatus as string, DocumentSubType as string, DocumentTaxID as string, Document_ApprovalRequests as string[], DocumentsOwner as short, DownPayment as double, DownPaymentAmount as double, DownPaymentAmountFC as double, DownPaymentAmountSC as double, DownPaymentPercentage as double, DownPaymentStatus as string, DownPaymentType as string, DownPaymentsToDraw as string[], ECommerceGSTIN as string, ECommerceOperator as string, EDocErrorCode as string, EDocErrorMessage as string, EDocExportFormat as string, EDocGenerationType as string, EDocNum as string, EDocSeries as string, EDocStatus as string, EDocType as string, ETaxNumber as string, ETaxWebSite as string, ElecCommMessage as string, ElecCommStatus as string, ElectronicProtocols as string[], EndDeliveryDate as string, EndDeliveryTime as string, ExcludeFromTaxReportControlStatementVAT as string, ExemptionValidityDateFrom as string, ExemptionValidityDateTo as string, ExternalCorrectedDocNum as string, ExtraDays as short, ExtraMonth as boolean, FCEAsPaymentMeans as string, FCI as string, FatherCard as string, FatherType as string, FederalTaxID as string, FinancialPeriod as short, FiscalDocNum as string, FolioNumber as string, FolioNumberFrom as string, FolioNumberTo as string, FolioPrefixString as string, Form1099 as string, GSTTransactionType as string, GTSChecker as string, GTSPayee as string, GroupHandWritten as string, GroupNumber as string, GroupSeries as string, HandWritten as string, ImportFileNum as string, IndFinal as string, Indicator as string, InsuranceOperation347 as string, InterimType as string, InternalCorrectedDocNum as string, InvoicePayment as string, IsAlteration as string, IsPayToBank as string, IssuingReason as boolean, JournalMemo as string, LanguageCode as short, LastPageFolioNumber as string, LegTextF as string, Letter as string, ManualNumber as string, MaximumCashDiscount as string, NTSApproved as string, NTSApprovedNumber as string, NetProcedure as string, NextCorrectingDocument as string, NumAtCard as string, NumberOfInstallments as boolean, OpenForLandedCosts as string, OpeningRemarks as string, OriginalCreditOrDebitDate as string, OriginalCreditOrDebitNo as string, OriginalRefDate as string, OriginalRefNo as string, POSCashierNumber as string, POSDailySummaryNo as string, POSEquipmentNumber as string, POSManufacturerSerialNumber as string, POSReceiptNo as string, POS_CashRegister as string, PaidToDate as double, PaidToDateFC as double, PaidToDateSys as double, PartialSupply as string, PayToBankAccountNo as string, PayToBankBranch as string, PayToBankCode as string, PayToBankCountry as string, PayToCode as string, PaymentBlock as string, PaymentBlockEntry as string, PaymentGroupCode as boolean, PaymentMethod as string, PaymentReference as long, PeriodIndicator as string, Pick as string, PickRemark as string, PickStatus as string, PointOfIssueCode as string, PriceMode as string, PrintSEPADirect as string, Printed as string, PrivateKeyVersion as string, Project as string, Receiver as string, Reference1 as short, Reference2 as string, RelatedEntry as string, RelatedType as short, Releaser as string, RelevantToGTS as string, ReopenManuallyClosedOrCanceledDocument as string, ReopenOriginalDocument as string, ReportingSectionControlStatementVAT as string, RequriedDate as string, Reserve as string, ReserveInvoice as string, ReuseDocumentNum as string, ReuseNotaFiscalNum as string, Revision as string, RevisionPo as string, Rounding as string, RoundingDiffAmount as double, RoundingDiffAmountFC as double, RoundingDiffAmountSC as double, SAPPassport as string, SalesPersonCode as short, Segment as boolean, SequenceCode as string, SequenceModel as boolean, SequenceSerial as string, Series as short, SeriesString as string, ServiceGrossProfitPercent as string, ShipFrom as string, ShipPlace as string, ShipState as string, ShipToCode as string, ShowSCN as string, SignatureDigest as string, SignatureInputMessage as string, SpecifiedClosingDate as string, StartDeliveryDate as string, StartDeliveryTime as string, StartFrom as string, SubSeriesString as string, Submitted as string, SummeryType as string, Supplier as string, TaxDate as date, TaxExemptionLetterNum as string, TotalDiscount as double, TotalDiscountFC as double, TotalDiscountSC as double, TotalEqualizationTax as double, TotalEqualizationTaxFC as double, TotalEqualizationTaxSC as double, TrackingNumber as string, TransNum as short, TransportationCode as short, U_AIG_KID as string, U_DSS_EHFBuyersRef as string, U_DSS_SendStatus as short, U_Levbet as string, U_Opperk as string, U_Ordrenummer as string, U_Sted as string, U_esurl as string, U_sluttkunde as string, UpdateDate as date, UpdateTime as string, UseBillToAddrToDetermineTax as string, UseCorrectionVATGroup as string, UseShpdGoodsAct as string, UserSign as short, VATRegNum as string, VatDate as string, VatPercent as double, VatSum as double, VatSumFc as double, VatSumSys as double, VehiclePlate as string, WTAmount as double, WTAmountFC as double, WTAmountSC as double, WTApplied as double, WTAppliedFC as double, WTAppliedSC as double, WTExemptedAmount as double, WTExemptedAmountFC as double, WTExemptedAmountSC as double, WTNonSubjectAmount as double, WTNonSubjectAmountFC as double, WTNonSubjectAmountSC as double, WareHouseUpdateType as string, WithholdingTaxDataCollection as string[], WithholdingTaxDataWTXCollection as string[])[]),",
						"          headers as [string,string]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     httpMethod: 'GET',",
						"     timeout: 30,",
						"     requestInterval: 0,",
						"     paginationRules: ['supportRFC5988' -> 'true'],",
						"     responseFormat: ['type' -> 'json', 'documentForm' -> 'arrayOfDocuments']) ~> apiOrders",
						"apiOrders foldDown(unroll(body.value.DocumentLines),",
						"     mapColumn(",
						"          CardCode = body.value.CardCode,",
						"          CardName = body.value.CardName,",
						"          DocDate = body.value.DocDate,",
						"          DocDueDate = body.value.DocDueDate,",
						"          DocNum = body.value.DocNum,",
						"          AccountCode = body.value.DocumentLines.AccountCode,",
						"          ActualBaseEntry = body.value.DocumentLines.ActualBaseEntry,",
						"          ActualBaseLine = body.value.DocumentLines.ActualBaseLine,",
						"          ActualDeliveryDate = body.value.DocumentLines.ActualDeliveryDate,",
						"          Address = body.value.DocumentLines.Address,",
						"          AgreementNo = body.value.DocumentLines.AgreementNo,",
						"          AgreementRowNumber = body.value.DocumentLines.AgreementRowNumber,",
						"          AppliedTax = body.value.DocumentLines.AppliedTax,",
						"          AppliedTaxFC = body.value.DocumentLines.AppliedTaxFC,",
						"          AppliedTaxSC = body.value.DocumentLines.AppliedTaxSC,",
						"          BackOrder = body.value.DocumentLines.BackOrder,",
						"          BarCode = body.value.DocumentLines.BarCode,",
						"          BaseEntry = body.value.DocumentLines.BaseEntry,",
						"          BaseLine = body.value.DocumentLines.BaseLine,",
						"          BaseOpenQuantity = body.value.DocumentLines.BaseOpenQuantity,",
						"          BaseType = body.value.DocumentLines.BaseType,",
						"          CESTCode = body.value.DocumentLines.CESTCode,",
						"          CFOPCode = body.value.DocumentLines.CFOPCode,",
						"          CNJPMan = body.value.DocumentLines.CNJPMan,",
						"          COGSAccountCode = body.value.DocumentLines.COGSAccountCode,",
						"          COGSCostingCode = body.value.DocumentLines.COGSCostingCode,",
						"          COGSCostingCode2 = body.value.DocumentLines.COGSCostingCode2,",
						"          COGSCostingCode3 = body.value.DocumentLines.COGSCostingCode3,",
						"          COGSCostingCode4 = body.value.DocumentLines.COGSCostingCode4,",
						"          COGSCostingCode5 = body.value.DocumentLines.COGSCostingCode5,",
						"          CSTCode = body.value.DocumentLines.CSTCode,",
						"          CSTforCOFINS = body.value.DocumentLines.CSTforCOFINS,",
						"          CSTforIPI = body.value.DocumentLines.CSTforIPI,",
						"          CSTforPIS = body.value.DocumentLines.CSTforPIS,",
						"          CUSplit = body.value.DocumentLines.CUSplit,",
						"          ChangeAssemlyBoMWarehouse = body.value.DocumentLines.ChangeAssemlyBoMWarehouse,",
						"          ChangeInventoryQuantityIndependently = body.value.DocumentLines.ChangeInventoryQuantityIndependently,",
						"          CommisionPercent = body.value.DocumentLines.CommisionPercent,",
						"          CommodityClassification = body.value.DocumentLines.CommodityClassification,",
						"          ConsiderQuantity = body.value.DocumentLines.ConsiderQuantity,",
						"          ConsumerSalesForecast = body.value.DocumentLines.ConsumerSalesForecast,",
						"          CorrInvAmountToDiffAcct = body.value.DocumentLines.CorrInvAmountToDiffAcct,",
						"          CorrInvAmountToStock = body.value.DocumentLines.CorrInvAmountToStock,",
						"          CorrectionInvoiceItem = body.value.DocumentLines.CorrectionInvoiceItem,",
						"          CostingCode = body.value.DocumentLines.CostingCode,",
						"          CostingCode2 = body.value.DocumentLines.CostingCode2,",
						"          CostingCode3 = body.value.DocumentLines.CostingCode3,",
						"          CostingCode4 = body.value.DocumentLines.CostingCode4,",
						"          CostingCode5 = body.value.DocumentLines.CostingCode5,",
						"          CountryOrg = body.value.DocumentLines.CountryOrg,",
						"          CreditOriginCode = body.value.DocumentLines.CreditOriginCode,",
						"          CtrSealQty = body.value.DocumentLines.CtrSealQty,",
						"          Currency = body.value.DocumentLines.Currency,",
						"          DefectAndBreakup = body.value.DocumentLines.DefectAndBreakup,",
						"          DeferredTax = body.value.DocumentLines.DeferredTax,",
						"          DestinationCountryForImport = body.value.DocumentLines.DestinationCountryForImport,",
						"          DestinationRegionForImport = body.value.DocumentLines.DestinationRegionForImport,",
						"          DiscountPercent = body.value.DocumentLines.DiscountPercent,",
						"          DistributeExpense = body.value.DocumentLines.DistributeExpense,",
						"          DocEntry = body.value.DocumentLines.DocEntry,",
						"          EqualizationTaxPercent = body.value.DocumentLines.EqualizationTaxPercent,",
						"          ExLineNo = body.value.DocumentLines.ExLineNo,",
						"          ExciseAmount = body.value.DocumentLines.ExciseAmount,",
						"          ExpenseOperationType = body.value.DocumentLines.ExpenseOperationType,",
						"          ExpenseType = body.value.DocumentLines.ExpenseType,",
						"          ExternalCalcTaxAmount = body.value.DocumentLines.ExternalCalcTaxAmount,",
						"          ExternalCalcTaxAmountFC = body.value.DocumentLines.ExternalCalcTaxAmountFC,",
						"          ExternalCalcTaxAmountSC = body.value.DocumentLines.ExternalCalcTaxAmountSC,",
						"          ExternalCalcTaxRate = body.value.DocumentLines.ExternalCalcTaxRate,",
						"          Factor1 = body.value.DocumentLines.Factor1,",
						"          Factor2 = body.value.DocumentLines.Factor2,",
						"          Factor3 = body.value.DocumentLines.Factor3,",
						"          Factor4 = body.value.DocumentLines.Factor4,",
						"          FederalTaxID = body.value.DocumentLines.FederalTaxID,",
						"          FreeOfChargeBP = body.value.DocumentLines.FreeOfChargeBP,",
						"          FreeText = body.value.DocumentLines.FreeText,",
						"          GrossBase = body.value.DocumentLines.GrossBase,",
						"          GrossBuyPrice = body.value.DocumentLines.GrossBuyPrice,",
						"          GrossPrice = body.value.DocumentLines.GrossPrice,",
						"          GrossProfit = body.value.DocumentLines.GrossProfit,",
						"          GrossProfitFC = body.value.DocumentLines.GrossProfitFC,",
						"          GrossProfitSC = body.value.DocumentLines.GrossProfitSC,",
						"          GrossProfitTotalBasePrice = body.value.DocumentLines.GrossProfitTotalBasePrice,",
						"          GrossTotal = body.value.DocumentLines.GrossTotal,",
						"          GrossTotalFC = body.value.DocumentLines.GrossTotalFC,",
						"          GrossTotalSC = body.value.DocumentLines.GrossTotalSC,",
						"          HSNEntry = body.value.DocumentLines.HSNEntry,",
						"          Height1 = body.value.DocumentLines.Height1,",
						"          Height2 = body.value.DocumentLines.Height2,",
						"          Height2Unit = body.value.DocumentLines.Height2Unit,",
						"          Hight1Unit = body.value.DocumentLines.Hight1Unit,",
						"          Incoterms = body.value.DocumentLines.Incoterms,",
						"          IndEscala = body.value.DocumentLines.IndEscala,",
						"          InventoryQuantity = body.value.DocumentLines.InventoryQuantity,",
						"          ItemCode = body.value.DocumentLines.ItemCode,",
						"          ItemDescription = body.value.DocumentLines.ItemDescription,",
						"          ItemDetails = body.value.DocumentLines.ItemDetails,",
						"          ItemType = body.value.DocumentLines.ItemType,",
						"          LastBuyDistributeSum = body.value.DocumentLines.LastBuyDistributeSum,",
						"          LastBuyDistributeSumFc = body.value.DocumentLines.LastBuyDistributeSumFc,",
						"          LastBuyDistributeSumSc = body.value.DocumentLines.LastBuyDistributeSumSc,",
						"          LastBuyInmPrice = body.value.DocumentLines.LastBuyInmPrice,",
						"          Lengh1 = body.value.DocumentLines.Lengh1,",
						"          Lengh1Unit = body.value.DocumentLines.Lengh1Unit,",
						"          Lengh2 = body.value.DocumentLines.Lengh2,",
						"          Lengh2Unit = body.value.DocumentLines.Lengh2Unit,",
						"          LineNum = body.value.DocumentLines.LineNum,",
						"          LineStatus = body.value.DocumentLines.LineStatus,",
						"          LineTotal = body.value.DocumentLines.LineTotal,",
						"          LineType = body.value.DocumentLines.LineType,",
						"          LocationCode = body.value.DocumentLines.LocationCode,",
						"          MeasureUnit = body.value.DocumentLines.MeasureUnit,",
						"          NCMCode = body.value.DocumentLines.NCMCode,",
						"          NVECode = body.value.DocumentLines.NVECode,",
						"          NatureOfTransaction = body.value.DocumentLines.NatureOfTransaction,",
						"          NetTaxAmount = body.value.DocumentLines.NetTaxAmount,",
						"          NetTaxAmountFC = body.value.DocumentLines.NetTaxAmountFC,",
						"          NetTaxAmountSC = body.value.DocumentLines.NetTaxAmountSC,",
						"          OpenAmount = body.value.DocumentLines.OpenAmount,",
						"          OpenAmountFC = body.value.DocumentLines.OpenAmountFC,",
						"          OpenAmountSC = body.value.DocumentLines.OpenAmountSC,",
						"          OriginCountryForExport = body.value.DocumentLines.OriginCountryForExport,",
						"          OriginRegionForExport = body.value.DocumentLines.OriginRegionForExport,",
						"          OriginalItem = body.value.DocumentLines.OriginalItem,",
						"          POTargetEntry = body.value.DocumentLines.POTargetEntry,",
						"          POTargetNum = body.value.DocumentLines.POTargetNum,",
						"          POTargetRowNum = body.value.DocumentLines.POTargetRowNum,",
						"          PackageQuantity = body.value.DocumentLines.PackageQuantity,",
						"          ParentLineNum = body.value.DocumentLines.ParentLineNum,",
						"          PartialRetirement = body.value.DocumentLines.PartialRetirement,",
						"          PickListIdNumber = body.value.DocumentLines.PickListIdNumber,",
						"          PickQuantity = body.value.DocumentLines.PickQuantity,",
						"          PickStatus = body.value.DocumentLines.PickStatus,",
						"          PickStatusEx = body.value.DocumentLines.PickStatusEx,",
						"          PoItmNum = body.value.DocumentLines.PoItmNum,",
						"          PoNum = body.value.DocumentLines.PoNum,",
						"          Price = body.value.DocumentLines.Price,",
						"          PriceAfterVAT = body.value.DocumentLines.PriceAfterVAT,",
						"          PriceSource = body.value.DocumentLines.PriceSource,",
						"          ProjectCode = body.value.DocumentLines.ProjectCode,",
						"          Quantity = body.value.DocumentLines.Quantity,",
						"          Rate = body.value.DocumentLines.Rate,",
						"          ReceiptNumber = body.value.DocumentLines.ReceiptNumber,",
						"          RemainingOpenInventoryQuantity = body.value.DocumentLines.RemainingOpenInventoryQuantity,",
						"          RemainingOpenQuantity = body.value.DocumentLines.RemainingOpenQuantity,",
						"          RequiredDate = body.value.DocumentLines.RequiredDate,",
						"          RequiredQuantity = body.value.DocumentLines.RequiredQuantity,",
						"          RetirementAPC = body.value.DocumentLines.RetirementAPC,",
						"          RetirementQuantity = body.value.DocumentLines.RetirementQuantity,",
						"          ReverseCharge = body.value.DocumentLines.ReverseCharge,",
						"          RowTotalFC = body.value.DocumentLines.RowTotalFC,",
						"          RowTotalSC = body.value.DocumentLines.RowTotalSC,",
						"          SACEntry = body.value.DocumentLines.SACEntry,",
						"          SWW = body.value.DocumentLines.SWW,",
						"          SalesPersonCode = body.value.DocumentLines.SalesPersonCode,",
						"          SerialNum = body.value.DocumentLines.SerialNum,",
						"          ShipDate = body.value.DocumentLines.ShipDate,",
						"          ShipToCode = body.value.DocumentLines.ShipToCode,",
						"          ShipToDescription = body.value.DocumentLines.ShipToDescription,",
						"          ShippingMethod = body.value.DocumentLines.ShippingMethod,",
						"          Shortages = body.value.DocumentLines.Shortages,",
						"          StandardItemIdentification = body.value.DocumentLines.StandardItemIdentification,",
						"          StgDesc = body.value.DocumentLines.StgDesc,",
						"          StgEntry = body.value.DocumentLines.StgEntry,",
						"          StgSeqNum = body.value.DocumentLines.StgSeqNum,",
						"          StockDistributesum = body.value.DocumentLines.StockDistributesum,",
						"          StockDistributesumForeign = body.value.DocumentLines.StockDistributesumForeign,",
						"          StockDistributesumSystem = body.value.DocumentLines.StockDistributesumSystem,",
						"          StockInmPrice = body.value.DocumentLines.StockInmPrice,",
						"          SupplierCatNum = body.value.DocumentLines.SupplierCatNum,",
						"          Surpluses = body.value.DocumentLines.Surpluses,",
						"          TaxBeforeDPM = body.value.DocumentLines.TaxBeforeDPM,",
						"          TaxBeforeDPMFC = body.value.DocumentLines.TaxBeforeDPMFC,",
						"          TaxBeforeDPMSC = body.value.DocumentLines.TaxBeforeDPMSC,",
						"          TaxCode = body.value.DocumentLines.TaxCode,",
						"          TaxLiable = body.value.DocumentLines.TaxLiable,",
						"          TaxOnly = body.value.DocumentLines.TaxOnly,",
						"          TaxPerUnit = body.value.DocumentLines.TaxPerUnit,",
						"          TaxPercentagePerRow = body.value.DocumentLines.TaxPercentagePerRow,",
						"          TaxTotal = body.value.DocumentLines.TaxTotal,",
						"          TaxType = body.value.DocumentLines.TaxType,",
						"          Text = body.value.DocumentLines.Text,",
						"          ThirdParty = body.value.DocumentLines.ThirdParty,",
						"          TotalEqualizationTax = body.value.DocumentLines.TotalEqualizationTax,",
						"          TotalEqualizationTaxFC = body.value.DocumentLines.TotalEqualizationTaxFC,",
						"          TotalEqualizationTaxSC = body.value.DocumentLines.TotalEqualizationTaxSC,",
						"          TotalInclTax = body.value.DocumentLines.TotalInclTax,",
						"          TransactionType = body.value.DocumentLines.TransactionType,",
						"          TransportMode = body.value.DocumentLines.TransportMode,",
						"          TreeType = body.value.DocumentLines.TreeType,",
						"          UFFiscalBenefitCode = body.value.DocumentLines.UFFiscalBenefitCode,",
						"          U_AIG_DDate = body.value.DocumentLines.U_AIG_DDate,",
						"          U_AIG_IA = body.value.DocumentLines.U_AIG_IA,",
						"          U_AIG_ID = body.value.DocumentLines.U_AIG_ID,",
						"          U_AIG_IN = body.value.DocumentLines.U_AIG_IN,",
						"          U_AIG_IR = body.value.DocumentLines.U_AIG_IR,",
						"          U_AIG_PD = body.value.DocumentLines.U_AIG_PD,",
						"          U_AIG_PDate = body.value.DocumentLines.U_AIG_PDate,",
						"          U_Codebars = body.value.DocumentLines.U_Codebars,",
						"          U_DSS_Charge = body.value.DocumentLines.U_DSS_Charge,",
						"          U_DSS_ProdOrdr = body.value.DocumentLines.U_DSS_ProdOrdr,",
						"          U_Installasjon = body.value.DocumentLines.U_Installasjon,",
						"          U_PItemCode = body.value.DocumentLines.U_PItemCode,",
						"          U_ParentItem = body.value.DocumentLines.U_ParentItem,",
						"          U_PlannedQty = body.value.DocumentLines.U_PlannedQty,",
						"          U_U_AIG_DDate = body.value.DocumentLines.U_U_AIG_DDate,",
						"          UnencumberedReason = body.value.DocumentLines.UnencumberedReason,",
						"          UnitPrice = body.value.DocumentLines.UnitPrice,",
						"          UnitsOfMeasurment = body.value.DocumentLines.UnitsOfMeasurment,",
						"          UoMCode = body.value.DocumentLines.UoMCode,",
						"          UoMEntry = body.value.DocumentLines.UoMEntry,",
						"          Usage = body.value.DocumentLines.Usage,",
						"          UseBaseUnits = body.value.DocumentLines.UseBaseUnits,",
						"          VatGroup = body.value.DocumentLines.VatGroup,",
						"          VendorNum = body.value.DocumentLines.VendorNum,",
						"          VisualOrder = body.value.DocumentLines.VisualOrder,",
						"          Volume = body.value.DocumentLines.Volume,",
						"          VolumeUnit = body.value.DocumentLines.VolumeUnit,",
						"          WTLiable = body.value.DocumentLines.WTLiable,",
						"          WarehouseCode = body.value.DocumentLines.WarehouseCode,",
						"          Weight1 = body.value.DocumentLines.Weight1,",
						"          Weight1Unit = body.value.DocumentLines.Weight1Unit,",
						"          Weight2 = body.value.DocumentLines.Weight2,",
						"          Weight2Unit = body.value.DocumentLines.Weight2Unit,",
						"          Width1 = body.value.DocumentLines.Width1,",
						"          Width1Unit = body.value.DocumentLines.Width1Unit,",
						"          Width2 = body.value.DocumentLines.Width2,",
						"          Width2Unit = body.value.DocumentLines.Width2Unit",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> FlattenDocumentLines",
						"FlattenDocumentLines sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SinkToSQLTable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bo_sap_invoices')]",
				"[concat(variables('factoryId'), '/datasets/sql_bo_sap_invoices_lines')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_bo_orders')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_bo_sap_orders",
								"type": "DatasetReference"
							},
							"name": "ApiCall"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sql_bo_sap_orders",
								"type": "DatasetReference"
							},
							"name": "SinkToSQLTable"
						}
					],
					"transformations": [
						{
							"name": "FlattenOrders"
						},
						{
							"name": "dataSourceId"
						}
					],
					"scriptLines": [
						"source(output(",
						"          body as ({@odata.context} as string, {@odata.nextLink} as string, value as ({@odata.etag} as string, ATDocumentType as string, AddLegIn as string, Address as string, Address2 as string, AgentCode as string, AnnualInvoiceDeclarationReference as string, ApplyCurrentVATRatesForDownPaymentsToDraw as string, ApplyTaxOnFirstInstallment as string, ArchiveNonremovableSalesQuotation as string, AssetValueDate as string, AttachmentEntry as string, AuthorizationCode as string, AuthorizationStatus as string, BPChannelCode as string, BPChannelContact as string, BPLName as string, BPL_IDAssignedToInvoice as string, BaseAmount as double, BaseAmountFC as double, BaseAmountSC as double, BillOfExchangeReserved as string, BlanketAgreementNumber as string, BlockDunning as string, Box1099 as string, CancelDate as date, CancelStatus as string, Cancelled as string, CardCode as integer, CardName as string, CashDiscountDateOffset as boolean, CentralBankIndicator as string, CertificationNumber as string, Cig as string, ClosingDate as string, ClosingOption as string, ClosingRemarks as string, Comments as string, CommissionTrade as string, CommissionTradeReturn as string, Confirmed as string, ContactPersonCode as short, ControlAccount as short, CreateOnlineQuotation as string, CreateQRCodeFrom as string, CreationDate as date, Cup as string, CustOffice as string, DANFELgTxt as string, DataVersion as boolean, DateOfReportingControlStatementVAT as string, DeferredTax as string, DiscountPercent as double, DocCurrency as string, DocDate as date, DocDueDate as date, DocEntry as short, DocNum as integer, DocObjectCode as string, DocRate as double, DocTime as string, DocTotal as double, DocTotalFc as double, DocTotalSys as double, DocType as string, DocumentAdditionalExpenses as string[], DocumentDelivery as string, DocumentLines as (AccountCode as short, ActualBaseEntry as string, ActualBaseLine as string, ActualDeliveryDate as string, Address as string, AgreementNo as string, AgreementRowNumber as string, AppliedTax as double, AppliedTaxFC as double, AppliedTaxSC as double, BackOrder as string, BarCode as string, BaseEntry as string, BaseLine as string, BaseOpenQuantity as double, BaseType as short, BatchNumbers as string[], CESTCode as string, CFOPCode as string, CNJPMan as string, COGSAccountCode as short, COGSCostingCode as string, COGSCostingCode2 as string, COGSCostingCode3 as string, COGSCostingCode4 as string, COGSCostingCode5 as string, CSTCode as string, CSTforCOFINS as string, CSTforIPI as string, CSTforPIS as string, CUSplit as string, ChangeAssemlyBoMWarehouse as boolean, ChangeInventoryQuantityIndependently as string, CommisionPercent as double, CommodityClassification as string, ConsiderQuantity as string, ConsumerSalesForecast as string, CorrInvAmountToDiffAcct as double, CorrInvAmountToStock as double, CorrectionInvoiceItem as string, CostingCode as string, CostingCode2 as string, CostingCode3 as string, CostingCode4 as string, CostingCode5 as string, CountryOrg as string, CreditOriginCode as string, CtrSealQty as string, Currency as string, DefectAndBreakup as string, DeferredTax as string, DestinationCountryForImport as string, DestinationRegionForImport as string, DiscountPercent as double, DistributeExpense as string, DocEntry as short, DocumentLineAdditionalExpenses as string[], DocumentLinesBinAllocations as string[], EqualizationTaxPercent as double, ExLineNo as string, ExciseAmount as double, ExpenseOperationType as string, ExpenseType as string, ExternalCalcTaxAmount as string, ExternalCalcTaxAmountFC as string, ExternalCalcTaxAmountSC as string, ExternalCalcTaxRate as string, Factor1 as double, Factor2 as double, Factor3 as double, Factor4 as double, FederalTaxID as string, FreeOfChargeBP as string, FreeText as string, GrossBase as short, GrossBuyPrice as double, GrossPrice as double, GrossProfit as double, GrossProfitFC as double, GrossProfitSC as double, GrossProfitTotalBasePrice as double, GrossTotal as double, GrossTotalFC as double, GrossTotalSC as double, HSNEntry as string, Height1 as double, Height2 as double, Height2Unit as string, Hight1Unit as string, Incoterms as boolean, IndEscala as string, InventoryQuantity as double, ItemCode as integer, ItemDescription as string, ItemDetails as string, ItemType as string, LastBuyDistributeSum as double, LastBuyDistributeSumFc as double, LastBuyDistributeSumSc as double, LastBuyInmPrice as double, Lengh1 as double, Lengh1Unit as string, Lengh2 as double, Lengh2Unit as string, LineNum as short, LineStatus as string, LineTaxJurisdictions as string[], LineTotal as double, LineType as string, LocationCode as string, MeasureUnit as string, NCMCode as short, NVECode as string, NatureOfTransaction as string, NetTaxAmount as double, NetTaxAmountFC as double, NetTaxAmountSC as double, OpenAmount as double, OpenAmountFC as double, OpenAmountSC as double, OriginCountryForExport as string, OriginRegionForExport as string, OriginalItem as integer, OwnerCode as short, POTargetEntry as string, POTargetNum as string, POTargetRowNum as string, PackageQuantity as double, ParentLineNum as string, PartialRetirement as string, PickListIdNumber as string, PickQuantity as double, PickStatus as string, PickStatusEx as string, PoItmNum as string, PoNum as string, Price as double, PriceAfterVAT as double, PriceSource as string, ProjectCode as string, Quantity as double, Rate as double, ReceiptNumber as string, RemainingOpenInventoryQuantity as double, RemainingOpenQuantity as double, RequiredDate as string, RequiredQuantity as string, RetirementAPC as string, RetirementQuantity as string, ReverseCharge as string, RowTotalFC as double, RowTotalSC as double, SACEntry as string, SWW as string, SalesPersonCode as short, SerialNum as string, SerialNumbers as string[], ShipDate as date, ShipToCode as string, ShipToDescription as string, ShippingMethod as short, Shortages as string, StandardItemIdentification as string, StgDesc as string, StgEntry as string, StgSeqNum as string, StockDistributesum as double, StockDistributesumForeign as double, StockDistributesumSystem as double, StockInmPrice as double, SupplierCatNum as string, Surpluses as string, TaxBeforeDPM as double, TaxBeforeDPMFC as double, TaxBeforeDPMSC as double, TaxCode as string, TaxLiable as string, TaxOnly as string, TaxPerUnit as double, TaxPercentagePerRow as double, TaxTotal as double, TaxType as string, Text as string, ThirdParty as string, TotalEqualizationTax as double, TotalEqualizationTaxFC as double, TotalEqualizationTaxSC as double, TotalInclTax as double, TransactionType as string, TransportMode as boolean, TreeType as string, UFFiscalBenefitCode as string, U_AIG_DDate as string, U_AIG_IA as double, U_AIG_ID as string, U_AIG_IN as string, U_AIG_IR as string, U_AIG_PD as string, U_AIG_PDate as string, U_Codebars as string, U_DSS_Charge as string, U_DSS_ProdOrdr as string, U_Installasjon as string, U_PItemCode as string, U_ParentItem as string, U_PlannedQty as double, U_U_AIG_DDate as string, UnencumberedReason as string, UnitPrice as double, UnitsOfMeasurment as double, UoMCode as string, UoMEntry as short, Usage as string, UseBaseUnits as string, VatGroup as string, VendorNum as string, VisualOrder as short, Volume as double, VolumeUnit as short, WTLiable as string, WarehouseCode as short, Weight1 as double, Weight1Unit as short, Weight2 as double, Weight2Unit as string, Width1 as double, Width1Unit as string, Width2 as double, Width2Unit as string, WithholdingTaxLines as string[], WithoutInventoryMovement as string)[], DocumentReferences as string[], DocumentSpecialLines as string[], DocumentStatus as string, DocumentSubType as string, DocumentTaxID as string, Document_ApprovalRequests as string[], DocumentsOwner as short, DownPayment as double, DownPaymentAmount as double, DownPaymentAmountFC as double, DownPaymentAmountSC as double, DownPaymentPercentage as double, DownPaymentStatus as string, DownPaymentType as string, EDocErrorCode as string, EDocErrorMessage as string, EDocExportFormat as string, EDocGenerationType as string, EDocNum as string, EDocSeries as string, EDocStatus as string, ETaxNumber as string, ETaxWebSite as string, ElecCommMessage as string, ElecCommStatus as string, ElectronicProtocols as string[], EndDeliveryDate as string, EndDeliveryTime as string, ExcludeFromTaxReportControlStatementVAT as string, ExemptionValidityDateFrom as string, ExemptionValidityDateTo as string, ExternalCorrectedDocNum as string, ExtraDays as short, ExtraMonth as boolean, FCI as string, FatherCard as string, FatherType as string, FederalTaxID as string, FinancialPeriod as short, FiscalDocNum as string, FolioNumber as string, FolioNumberFrom as string, FolioNumberTo as string, FolioPrefixString as string, Form1099 as string, GTSChecker as string, GTSPayee as string, GroupHandWritten as string, GroupNumber as string, GroupSeries as string, HandWritten as string, ImportFileNum as string, IndFinal as string, Indicator as string, InsuranceOperation347 as string, InterimType as string, InternalCorrectedDocNum as string, IsAlteration as string, IsPayToBank as string, JournalMemo as string, LanguageCode as short, LastPageFolioNumber as string, LegTextF as string, Letter as string, ManualNumber as string, MaximumCashDiscount as string, NTSApproved as string, NTSApprovedNumber as string, NetProcedure as string, NextCorrectingDocument as string, NumAtCard as string, NumberOfInstallments as boolean, OpenForLandedCosts as string, OpeningRemarks as string, POSCashierNumber as string, POSDailySummaryNo as string, POSEquipmentNumber as string, POSManufacturerSerialNumber as string, POSReceiptNo as string, POS_CashRegister as string, PartialSupply as string, PayToBankAccountNo as string, PayToBankBranch as string, PayToBankCode as string, PayToBankCountry as string, PayToCode as string, PaymentBlock as string, PaymentBlockEntry as string, PaymentGroupCode as boolean, PaymentMethod as string, PaymentReference as long, PeriodIndicator as string, Pick as string, PickRemark as string, PickStatus as string, PointOfIssueCode as string, PriceMode as string, PrintSEPADirect as string, Printed as string, PrivateKeyVersion as string, Project as string, Receiver as string, Reference1 as integer, Reference2 as string, RelatedEntry as string, RelatedType as short, Releaser as string, RelevantToGTS as string, ReopenManuallyClosedOrCanceledDocument as string, ReopenOriginalDocument as string, ReportingSectionControlStatementVAT as string, RequriedDate as date, Reserve as string, ReserveInvoice as string, ReuseDocumentNum as string, ReuseNotaFiscalNum as string, RevisionPo as string, Rounding as string, RoundingDiffAmount as double, RoundingDiffAmountFC as double, RoundingDiffAmountSC as double, SAPPassport as string, SalesPersonCode as short, Segment as boolean, SequenceCode as string, SequenceModel as boolean, SequenceSerial as string, Series as short, SeriesString as string, ServiceGrossProfitPercent as string, ShipFrom as string, ShipPlace as string, ShipState as string, ShipToCode as string, ShowSCN as string, SignatureDigest as string, SignatureInputMessage as string, SpecifiedClosingDate as string, StartDeliveryDate as string, StartDeliveryTime as string, StartFrom as string, SubSeriesString as string, Submitted as string, SummeryType as string, Supplier as string, TaxDate as date, TaxExemptionLetterNum as string, TotalDiscount as double, TotalDiscountFC as double, TotalDiscountSC as double, TotalEqualizationTax as double, TotalEqualizationTaxFC as double, TotalEqualizationTaxSC as double, TrackingNumber as string, TransNum as string, TransportationCode as short, U_AIG_KID as string, U_DSS_EHFBuyersRef as string, U_DSS_SendStatus as boolean, U_Levbet as string, U_Opperk as string, U_Ordrenummer as short, U_Sted as string, U_esurl as string, U_sluttkunde as string, UpdateDate as date, UpdateTime as string, UseBillToAddrToDetermineTax as string, UseCorrectionVATGroup as string, UseShpdGoodsAct as string, UserSign as short, VATRegNum as string, VatDate as string, VatPercent as double, VatSum as double, VatSumFc as double, VatSumSys as double, VehiclePlate as string, WTAmount as double, WTAmountFC as double, WTAmountSC as double, WTApplied as double, WTAppliedFC as double, WTAppliedSC as double, WTExemptedAmount as double, WTExemptedAmountFC as double, WTExemptedAmountSC as double, WTNonSubjectAmount as double, WTNonSubjectAmountFC as double, WTNonSubjectAmountSC as double, WareHouseUpdateType as string, WithholdingTaxDataCollection as string[], WithholdingTaxDataWTXCollection as string[])[]),",
						"          headers as [string,string]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     httpMethod: 'GET',",
						"     timeout: 30,",
						"     requestInterval: 0,",
						"     responseFormat: ['type' -> 'json', 'documentForm' -> 'arrayOfDocuments']) ~> ApiCall",
						"ApiCall foldDown(unroll(body.value),",
						"     mapColumn(",
						"          ATDocumentType = body.value.ATDocumentType,",
						"          AddLegIn = body.value.AddLegIn,",
						"          Address = body.value.Address,",
						"          Address2 = body.value.Address2,",
						"          AgentCode = body.value.AgentCode,",
						"          AnnualInvoiceDeclarationReference = body.value.AnnualInvoiceDeclarationReference,",
						"          ApplyCurrentVATRatesForDownPaymentsToDraw = body.value.ApplyCurrentVATRatesForDownPaymentsToDraw,",
						"          ApplyTaxOnFirstInstallment = body.value.ApplyTaxOnFirstInstallment,",
						"          ArchiveNonremovableSalesQuotation = body.value.ArchiveNonremovableSalesQuotation,",
						"          AssetValueDate = body.value.AssetValueDate,",
						"          AttachmentEntry = body.value.AttachmentEntry,",
						"          AuthorizationCode = body.value.AuthorizationCode,",
						"          AuthorizationStatus = body.value.AuthorizationStatus,",
						"          BPChannelCode = body.value.BPChannelCode,",
						"          BPChannelContact = body.value.BPChannelContact,",
						"          BPLName = body.value.BPLName,",
						"          BPL_IDAssignedToInvoice = body.value.BPL_IDAssignedToInvoice,",
						"          BaseAmount = body.value.BaseAmount,",
						"          BaseAmountFC = body.value.BaseAmountFC,",
						"          BaseAmountSC = body.value.BaseAmountSC,",
						"          BillOfExchangeReserved = body.value.BillOfExchangeReserved,",
						"          BlanketAgreementNumber = body.value.BlanketAgreementNumber,",
						"          BlockDunning = body.value.BlockDunning,",
						"          Box1099 = body.value.Box1099,",
						"          CancelDate = body.value.CancelDate,",
						"          CancelStatus = body.value.CancelStatus,",
						"          Cancelled = body.value.Cancelled,",
						"          CardCode = body.value.CardCode,",
						"          CardName = body.value.CardName,",
						"          CashDiscountDateOffset = body.value.CashDiscountDateOffset,",
						"          CentralBankIndicator = body.value.CentralBankIndicator,",
						"          CertificationNumber = body.value.CertificationNumber,",
						"          Cig = body.value.Cig,",
						"          ClosingDate = body.value.ClosingDate,",
						"          ClosingOption = body.value.ClosingOption,",
						"          ClosingRemarks = body.value.ClosingRemarks,",
						"          Comments = body.value.Comments,",
						"          CommissionTrade = body.value.CommissionTrade,",
						"          CommissionTradeReturn = body.value.CommissionTradeReturn,",
						"          Confirmed = body.value.Confirmed,",
						"          ContactPersonCode = body.value.ContactPersonCode,",
						"          ControlAccount = body.value.ControlAccount,",
						"          CreateOnlineQuotation = body.value.CreateOnlineQuotation,",
						"          CreateQRCodeFrom = body.value.CreateQRCodeFrom,",
						"          CreationDate = body.value.CreationDate,",
						"          Cup = body.value.Cup,",
						"          CustOffice = body.value.CustOffice,",
						"          DANFELgTxt = body.value.DANFELgTxt,",
						"          DataVersion = body.value.DataVersion,",
						"          DateOfReportingControlStatementVAT = body.value.DateOfReportingControlStatementVAT,",
						"          DeferredTax = body.value.DeferredTax,",
						"          DiscountPercent = body.value.DiscountPercent,",
						"          DocCurrency = body.value.DocCurrency,",
						"          DocDate = body.value.DocDate,",
						"          DocDueDate = body.value.DocDueDate,",
						"          DocEntry = body.value.DocEntry,",
						"          DocNum = body.value.DocNum,",
						"          DocObjectCode = body.value.DocObjectCode,",
						"          DocRate = body.value.DocRate,",
						"          DocTime = body.value.DocTime,",
						"          DocTotal = body.value.DocTotal,",
						"          DocTotalFc = body.value.DocTotalFc,",
						"          DocTotalSys = body.value.DocTotalSys,",
						"          DocType = body.value.DocType,",
						"          DocumentDelivery = body.value.DocumentDelivery,",
						"          DocumentStatus = body.value.DocumentStatus,",
						"          DocumentSubType = body.value.DocumentSubType,",
						"          DocumentTaxID = body.value.DocumentTaxID,",
						"          DocumentsOwner = body.value.DocumentsOwner,",
						"          DownPayment = body.value.DownPayment,",
						"          DownPaymentAmount = body.value.DownPaymentAmount,",
						"          DownPaymentAmountFC = body.value.DownPaymentAmountFC,",
						"          DownPaymentAmountSC = body.value.DownPaymentAmountSC,",
						"          DownPaymentPercentage = body.value.DownPaymentPercentage,",
						"          DownPaymentStatus = body.value.DownPaymentStatus,",
						"          DownPaymentType = body.value.DownPaymentType,",
						"          EDocErrorCode = body.value.EDocErrorCode,",
						"          EDocErrorMessage = body.value.EDocErrorMessage,",
						"          EDocExportFormat = body.value.EDocExportFormat,",
						"          EDocGenerationType = body.value.EDocGenerationType,",
						"          EDocNum = body.value.EDocNum,",
						"          EDocSeries = body.value.EDocSeries,",
						"          EDocStatus = body.value.EDocStatus,",
						"          ETaxNumber = body.value.ETaxNumber,",
						"          ETaxWebSite = body.value.ETaxWebSite,",
						"          ElecCommMessage = body.value.ElecCommMessage,",
						"          ElecCommStatus = body.value.ElecCommStatus,",
						"          EndDeliveryDate = body.value.EndDeliveryDate,",
						"          EndDeliveryTime = body.value.EndDeliveryTime,",
						"          ExcludeFromTaxReportControlStatementVAT = body.value.ExcludeFromTaxReportControlStatementVAT,",
						"          ExemptionValidityDateFrom = body.value.ExemptionValidityDateFrom,",
						"          ExemptionValidityDateTo = body.value.ExemptionValidityDateTo,",
						"          ExternalCorrectedDocNum = body.value.ExternalCorrectedDocNum,",
						"          ExtraDays = body.value.ExtraDays,",
						"          ExtraMonth = body.value.ExtraMonth,",
						"          FCI = body.value.FCI,",
						"          FatherCard = body.value.FatherCard,",
						"          FatherType = body.value.FatherType,",
						"          FederalTaxID = body.value.FederalTaxID,",
						"          FinancialPeriod = body.value.FinancialPeriod,",
						"          FiscalDocNum = body.value.FiscalDocNum,",
						"          FolioNumber = body.value.FolioNumber,",
						"          FolioNumberFrom = body.value.FolioNumberFrom,",
						"          FolioNumberTo = body.value.FolioNumberTo,",
						"          FolioPrefixString = body.value.FolioPrefixString,",
						"          Form1099 = body.value.Form1099,",
						"          GTSChecker = body.value.GTSChecker,",
						"          GTSPayee = body.value.GTSPayee,",
						"          GroupHandWritten = body.value.GroupHandWritten,",
						"          GroupNumber = body.value.GroupNumber,",
						"          GroupSeries = body.value.GroupSeries,",
						"          HandWritten = body.value.HandWritten,",
						"          ImportFileNum = body.value.ImportFileNum,",
						"          IndFinal = body.value.IndFinal,",
						"          Indicator = body.value.Indicator,",
						"          InsuranceOperation347 = body.value.InsuranceOperation347,",
						"          InterimType = body.value.InterimType,",
						"          InternalCorrectedDocNum = body.value.InternalCorrectedDocNum,",
						"          IsAlteration = body.value.IsAlteration,",
						"          IsPayToBank = body.value.IsPayToBank,",
						"          JournalMemo = body.value.JournalMemo,",
						"          LanguageCode = body.value.LanguageCode,",
						"          LastPageFolioNumber = body.value.LastPageFolioNumber,",
						"          LegTextF = body.value.LegTextF,",
						"          Letter = body.value.Letter,",
						"          ManualNumber = body.value.ManualNumber,",
						"          MaximumCashDiscount = body.value.MaximumCashDiscount,",
						"          NTSApproved = body.value.NTSApproved,",
						"          NTSApprovedNumber = body.value.NTSApprovedNumber,",
						"          NetProcedure = body.value.NetProcedure,",
						"          NextCorrectingDocument = body.value.NextCorrectingDocument,",
						"          NumAtCard = body.value.NumAtCard,",
						"          NumberOfInstallments = body.value.NumberOfInstallments,",
						"          OpenForLandedCosts = body.value.OpenForLandedCosts,",
						"          OpeningRemarks = body.value.OpeningRemarks,",
						"          POSCashierNumber = body.value.POSCashierNumber,",
						"          POSDailySummaryNo = body.value.POSDailySummaryNo,",
						"          POSEquipmentNumber = body.value.POSEquipmentNumber,",
						"          POSManufacturerSerialNumber = body.value.POSManufacturerSerialNumber,",
						"          POSReceiptNo = body.value.POSReceiptNo,",
						"          POS_CashRegister = body.value.POS_CashRegister,",
						"          PartialSupply = body.value.PartialSupply,",
						"          PayToBankAccountNo = body.value.PayToBankAccountNo,",
						"          PayToBankBranch = body.value.PayToBankBranch,",
						"          PayToBankCode = body.value.PayToBankCode,",
						"          PayToBankCountry = body.value.PayToBankCountry,",
						"          PayToCode = body.value.PayToCode,",
						"          PaymentBlock = body.value.PaymentBlock,",
						"          PaymentBlockEntry = body.value.PaymentBlockEntry,",
						"          PaymentGroupCode = body.value.PaymentGroupCode,",
						"          PaymentMethod = body.value.PaymentMethod,",
						"          PaymentReference = body.value.PaymentReference,",
						"          PeriodIndicator = body.value.PeriodIndicator,",
						"          Pick = body.value.Pick,",
						"          PickRemark = body.value.PickRemark,",
						"          PickStatus = body.value.PickStatus,",
						"          PointOfIssueCode = body.value.PointOfIssueCode,",
						"          PriceMode = body.value.PriceMode,",
						"          PrintSEPADirect = body.value.PrintSEPADirect,",
						"          Printed = body.value.Printed,",
						"          PrivateKeyVersion = body.value.PrivateKeyVersion,",
						"          Project = body.value.Project,",
						"          Receiver = body.value.Receiver,",
						"          Reference1 = body.value.Reference1,",
						"          Reference2 = body.value.Reference2,",
						"          RelatedEntry = body.value.RelatedEntry,",
						"          RelatedType = body.value.RelatedType,",
						"          Releaser = body.value.Releaser,",
						"          RelevantToGTS = body.value.RelevantToGTS,",
						"          ReopenManuallyClosedOrCanceledDocument = body.value.ReopenManuallyClosedOrCanceledDocument,",
						"          ReopenOriginalDocument = body.value.ReopenOriginalDocument,",
						"          ReportingSectionControlStatementVAT = body.value.ReportingSectionControlStatementVAT,",
						"          RequriedDate = body.value.RequriedDate,",
						"          Reserve = body.value.Reserve,",
						"          ReserveInvoice = body.value.ReserveInvoice,",
						"          ReuseDocumentNum = body.value.ReuseDocumentNum,",
						"          ReuseNotaFiscalNum = body.value.ReuseNotaFiscalNum,",
						"          RevisionPo = body.value.RevisionPo,",
						"          Rounding = body.value.Rounding,",
						"          RoundingDiffAmount = body.value.RoundingDiffAmount,",
						"          RoundingDiffAmountFC = body.value.RoundingDiffAmountFC,",
						"          RoundingDiffAmountSC = body.value.RoundingDiffAmountSC,",
						"          SAPPassport = body.value.SAPPassport,",
						"          SalesPersonCode = body.value.SalesPersonCode,",
						"          Segment = body.value.Segment,",
						"          SequenceCode = body.value.SequenceCode,",
						"          SequenceModel = body.value.SequenceModel,",
						"          SequenceSerial = body.value.SequenceSerial,",
						"          Series = body.value.Series,",
						"          SeriesString = body.value.SeriesString,",
						"          ServiceGrossProfitPercent = body.value.ServiceGrossProfitPercent,",
						"          ShipFrom = body.value.ShipFrom,",
						"          ShipPlace = body.value.ShipPlace,",
						"          ShipState = body.value.ShipState,",
						"          ShipToCode = body.value.ShipToCode,",
						"          ShowSCN = body.value.ShowSCN,",
						"          SignatureDigest = body.value.SignatureDigest,",
						"          SignatureInputMessage = body.value.SignatureInputMessage,",
						"          SpecifiedClosingDate = body.value.SpecifiedClosingDate,",
						"          StartDeliveryDate = body.value.StartDeliveryDate,",
						"          StartDeliveryTime = body.value.StartDeliveryTime,",
						"          StartFrom = body.value.StartFrom,",
						"          SubSeriesString = body.value.SubSeriesString,",
						"          Submitted = body.value.Submitted,",
						"          SummeryType = body.value.SummeryType,",
						"          Supplier = body.value.Supplier,",
						"          TaxDate = body.value.TaxDate,",
						"          TaxExemptionLetterNum = body.value.TaxExemptionLetterNum,",
						"          TotalDiscount = body.value.TotalDiscount,",
						"          TotalDiscountFC = body.value.TotalDiscountFC,",
						"          TotalDiscountSC = body.value.TotalDiscountSC,",
						"          TotalEqualizationTax = body.value.TotalEqualizationTax,",
						"          TotalEqualizationTaxFC = body.value.TotalEqualizationTaxFC,",
						"          TotalEqualizationTaxSC = body.value.TotalEqualizationTaxSC,",
						"          TrackingNumber = body.value.TrackingNumber,",
						"          TransNum = body.value.TransNum,",
						"          TransportationCode = body.value.TransportationCode,",
						"          U_AIG_KID = body.value.U_AIG_KID,",
						"          U_DSS_EHFBuyersRef = body.value.U_DSS_EHFBuyersRef,",
						"          U_DSS_SendStatus = body.value.U_DSS_SendStatus,",
						"          U_Levbet = body.value.U_Levbet,",
						"          U_Opperk = body.value.U_Opperk,",
						"          U_Ordrenummer = body.value.U_Ordrenummer,",
						"          U_Sted = body.value.U_Sted,",
						"          U_esurl = body.value.U_esurl,",
						"          U_sluttkunde = body.value.U_sluttkunde,",
						"          UpdateDate = body.value.UpdateDate,",
						"          UpdateTime = body.value.UpdateTime,",
						"          UseBillToAddrToDetermineTax = body.value.UseBillToAddrToDetermineTax,",
						"          UseCorrectionVATGroup = body.value.UseCorrectionVATGroup,",
						"          UseShpdGoodsAct = body.value.UseShpdGoodsAct,",
						"          UserSign = body.value.UserSign,",
						"          VATRegNum = body.value.VATRegNum,",
						"          VatDate = body.value.VatDate,",
						"          VatPercent = body.value.VatPercent,",
						"          VatSum = body.value.VatSum,",
						"          VatSumFc = body.value.VatSumFc,",
						"          VatSumSys = body.value.VatSumSys,",
						"          VehiclePlate = body.value.VehiclePlate,",
						"          WTAmount = body.value.WTAmount,",
						"          WTAmountFC = body.value.WTAmountFC,",
						"          WTAmountSC = body.value.WTAmountSC,",
						"          WTApplied = body.value.WTApplied,",
						"          WTAppliedFC = body.value.WTAppliedFC,",
						"          WTAppliedSC = body.value.WTAppliedSC,",
						"          WTExemptedAmount = body.value.WTExemptedAmount,",
						"          WTExemptedAmountFC = body.value.WTExemptedAmountFC,",
						"          WTExemptedAmountSC = body.value.WTExemptedAmountSC,",
						"          WTNonSubjectAmount = body.value.WTNonSubjectAmount,",
						"          WTNonSubjectAmountFC = body.value.WTNonSubjectAmountFC,",
						"          WTNonSubjectAmountSC = body.value.WTNonSubjectAmountSC,",
						"          WareHouseUpdateType = body.value.WareHouseUpdateType",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> FlattenOrders",
						"FlattenOrders derive(m_ds = 'Bondura') ~> dataSourceId",
						"dataSourceId sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SinkToSQLTable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bo_sap_orders')]",
				"[concat(variables('factoryId'), '/datasets/sql_bo_sap_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_bo_orders_doclines')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_bo_sap_orders",
								"type": "DatasetReference"
							},
							"name": "apiOrders"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sql_bo_orders_lines",
								"type": "DatasetReference"
							},
							"name": "SinkToSQLTable"
						}
					],
					"transformations": [
						{
							"name": "FlattenDocumentLines"
						}
					],
					"scriptLines": [
						"source(output(",
						"          body as ({@odata.context} as string, {@odata.nextLink} as string, value as ({@odata.etag} as string, ATDocumentType as string, AddLegIn as string, Address as string, Address2 as string, AgentCode as string, AnnualInvoiceDeclarationReference as string, ApplyCurrentVATRatesForDownPaymentsToDraw as string, ApplyTaxOnFirstInstallment as string, ArchiveNonremovableSalesQuotation as string, AssetValueDate as string, AttachmentEntry as string, AuthorizationCode as string, AuthorizationStatus as string, BPChannelCode as string, BPChannelContact as string, BPLName as string, BPL_IDAssignedToInvoice as string, BaseAmount as double, BaseAmountFC as double, BaseAmountSC as double, BillOfExchangeReserved as string, BlanketAgreementNumber as string, BlockDunning as string, Box1099 as string, CancelDate as date, CancelStatus as string, Cancelled as string, CardCode as integer, CardName as string, CashDiscountDateOffset as boolean, CentralBankIndicator as string, CertificationNumber as string, Cig as string, ClosingDate as string, ClosingOption as string, ClosingRemarks as string, Comments as string, CommissionTrade as string, CommissionTradeReturn as string, Confirmed as string, ContactPersonCode as short, ControlAccount as short, CreateOnlineQuotation as string, CreateQRCodeFrom as string, CreationDate as date, Cup as string, CustOffice as string, DANFELgTxt as string, DataVersion as boolean, DateOfReportingControlStatementVAT as string, DeferredTax as string, DiscountPercent as double, DocCurrency as string, DocDate as date, DocDueDate as date, DocEntry as short, DocNum as integer, DocObjectCode as string, DocRate as double, DocTime as string, DocTotal as double, DocTotalFc as double, DocTotalSys as double, DocType as string, DocumentAdditionalExpenses as string[], DocumentDelivery as string, DocumentLines as (AccountCode as short, ActualBaseEntry as string, ActualBaseLine as string, ActualDeliveryDate as string, Address as string, AgreementNo as string, AgreementRowNumber as string, AppliedTax as double, AppliedTaxFC as double, AppliedTaxSC as double, BackOrder as string, BarCode as string, BaseEntry as string, BaseLine as string, BaseOpenQuantity as double, BaseType as short, BatchNumbers as string[], CESTCode as string, CFOPCode as string, CNJPMan as string, COGSAccountCode as short, COGSCostingCode as string, COGSCostingCode2 as string, COGSCostingCode3 as string, COGSCostingCode4 as string, COGSCostingCode5 as string, CSTCode as string, CSTforCOFINS as string, CSTforIPI as string, CSTforPIS as string, CUSplit as string, ChangeAssemlyBoMWarehouse as boolean, ChangeInventoryQuantityIndependently as string, CommisionPercent as double, CommodityClassification as string, ConsiderQuantity as string, ConsumerSalesForecast as string, CorrInvAmountToDiffAcct as double, CorrInvAmountToStock as double, CorrectionInvoiceItem as string, CostingCode as string, CostingCode2 as string, CostingCode3 as string, CostingCode4 as string, CostingCode5 as string, CountryOrg as string, CreditOriginCode as string, CtrSealQty as string, Currency as string, DefectAndBreakup as string, DeferredTax as string, DestinationCountryForImport as string, DestinationRegionForImport as string, DiscountPercent as double, DistributeExpense as string, DocEntry as short, DocumentLineAdditionalExpenses as string[], DocumentLinesBinAllocations as string[], EqualizationTaxPercent as double, ExLineNo as string, ExciseAmount as double, ExpenseOperationType as string, ExpenseType as string, ExternalCalcTaxAmount as string, ExternalCalcTaxAmountFC as string, ExternalCalcTaxAmountSC as string, ExternalCalcTaxRate as string, Factor1 as double, Factor2 as double, Factor3 as double, Factor4 as double, FederalTaxID as string, FreeOfChargeBP as string, FreeText as string, GrossBase as short, GrossBuyPrice as double, GrossPrice as double, GrossProfit as double, GrossProfitFC as double, GrossProfitSC as double, GrossProfitTotalBasePrice as double, GrossTotal as double, GrossTotalFC as double, GrossTotalSC as double, HSNEntry as string, Height1 as double, Height2 as double, Height2Unit as string, Hight1Unit as string, Incoterms as boolean, IndEscala as string, InventoryQuantity as double, ItemCode as integer, ItemDescription as string, ItemDetails as string, ItemType as string, LastBuyDistributeSum as double, LastBuyDistributeSumFc as double, LastBuyDistributeSumSc as double, LastBuyInmPrice as double, Lengh1 as double, Lengh1Unit as string, Lengh2 as double, Lengh2Unit as string, LineNum as short, LineStatus as string, LineTaxJurisdictions as string[], LineTotal as double, LineType as string, LocationCode as string, MeasureUnit as string, NCMCode as short, NVECode as string, NatureOfTransaction as string, NetTaxAmount as double, NetTaxAmountFC as double, NetTaxAmountSC as double, OpenAmount as double, OpenAmountFC as double, OpenAmountSC as double, OriginCountryForExport as string, OriginRegionForExport as string, OriginalItem as integer, OwnerCode as short, POTargetEntry as string, POTargetNum as string, POTargetRowNum as string, PackageQuantity as double, ParentLineNum as string, PartialRetirement as string, PickListIdNumber as string, PickQuantity as double, PickStatus as string, PickStatusEx as string, PoItmNum as string, PoNum as string, Price as double, PriceAfterVAT as double, PriceSource as string, ProjectCode as string, Quantity as double, Rate as double, ReceiptNumber as string, RemainingOpenInventoryQuantity as double, RemainingOpenQuantity as double, RequiredDate as string, RequiredQuantity as string, RetirementAPC as string, RetirementQuantity as string, ReverseCharge as string, RowTotalFC as double, RowTotalSC as double, SACEntry as string, SWW as string, SalesPersonCode as short, SerialNum as string, SerialNumbers as string[], ShipDate as date, ShipToCode as string, ShipToDescription as string, ShippingMethod as short, Shortages as string, StandardItemIdentification as string, StgDesc as string, StgEntry as string, StgSeqNum as string, StockDistributesum as double, StockDistributesumForeign as double, StockDistributesumSystem as double, StockInmPrice as double, SupplierCatNum as string, Surpluses as string, TaxBeforeDPM as double, TaxBeforeDPMFC as double, TaxBeforeDPMSC as double, TaxCode as string, TaxLiable as string, TaxOnly as string, TaxPerUnit as double, TaxPercentagePerRow as double, TaxTotal as double, TaxType as string, Text as string, ThirdParty as string, TotalEqualizationTax as double, TotalEqualizationTaxFC as double, TotalEqualizationTaxSC as double, TotalInclTax as double, TransactionType as string, TransportMode as boolean, TreeType as string, UFFiscalBenefitCode as string, U_AIG_DDate as string, U_AIG_IA as double, U_AIG_ID as string, U_AIG_IN as string, U_AIG_IR as string, U_AIG_PD as string, U_AIG_PDate as string, U_Codebars as string, U_DSS_Charge as string, U_DSS_ProdOrdr as string, U_Installasjon as string, U_PItemCode as string, U_ParentItem as string, U_PlannedQty as double, U_U_AIG_DDate as string, UnencumberedReason as string, UnitPrice as double, UnitsOfMeasurment as double, UoMCode as string, UoMEntry as short, Usage as string, UseBaseUnits as string, VatGroup as string, VendorNum as string, VisualOrder as short, Volume as double, VolumeUnit as short, WTLiable as string, WarehouseCode as short, Weight1 as double, Weight1Unit as short, Weight2 as double, Weight2Unit as string, Width1 as double, Width1Unit as string, Width2 as double, Width2Unit as string, WithholdingTaxLines as string[], WithoutInventoryMovement as string)[], DocumentReferences as string[], DocumentSpecialLines as string[], DocumentStatus as string, DocumentSubType as string, DocumentTaxID as string, Document_ApprovalRequests as string[], DocumentsOwner as short, DownPayment as double, DownPaymentAmount as double, DownPaymentAmountFC as double, DownPaymentAmountSC as double, DownPaymentPercentage as double, DownPaymentStatus as string, DownPaymentType as string, EDocErrorCode as string, EDocErrorMessage as string, EDocExportFormat as string, EDocGenerationType as string, EDocNum as string, EDocSeries as string, EDocStatus as string, ETaxNumber as string, ETaxWebSite as string, ElecCommMessage as string, ElecCommStatus as string, ElectronicProtocols as string[], EndDeliveryDate as string, EndDeliveryTime as string, ExcludeFromTaxReportControlStatementVAT as string, ExemptionValidityDateFrom as string, ExemptionValidityDateTo as string, ExternalCorrectedDocNum as string, ExtraDays as short, ExtraMonth as boolean, FCI as string, FatherCard as string, FatherType as string, FederalTaxID as string, FinancialPeriod as short, FiscalDocNum as string, FolioNumber as string, FolioNumberFrom as string, FolioNumberTo as string, FolioPrefixString as string, Form1099 as string, GTSChecker as string, GTSPayee as string, GroupHandWritten as string, GroupNumber as string, GroupSeries as string, HandWritten as string, ImportFileNum as string, IndFinal as string, Indicator as string, InsuranceOperation347 as string, InterimType as string, InternalCorrectedDocNum as string, IsAlteration as string, IsPayToBank as string, JournalMemo as string, LanguageCode as short, LastPageFolioNumber as string, LegTextF as string, Letter as string, ManualNumber as string, MaximumCashDiscount as string, NTSApproved as string, NTSApprovedNumber as string, NetProcedure as string, NextCorrectingDocument as string, NumAtCard as string, NumberOfInstallments as boolean, OpenForLandedCosts as string, OpeningRemarks as string, POSCashierNumber as string, POSDailySummaryNo as string, POSEquipmentNumber as string, POSManufacturerSerialNumber as string, POSReceiptNo as string, POS_CashRegister as string, PartialSupply as string, PayToBankAccountNo as string, PayToBankBranch as string, PayToBankCode as string, PayToBankCountry as string, PayToCode as string, PaymentBlock as string, PaymentBlockEntry as string, PaymentGroupCode as boolean, PaymentMethod as string, PaymentReference as long, PeriodIndicator as string, Pick as string, PickRemark as string, PickStatus as string, PointOfIssueCode as string, PriceMode as string, PrintSEPADirect as string, Printed as string, PrivateKeyVersion as string, Project as string, Receiver as string, Reference1 as integer, Reference2 as string, RelatedEntry as string, RelatedType as short, Releaser as string, RelevantToGTS as string, ReopenManuallyClosedOrCanceledDocument as string, ReopenOriginalDocument as string, ReportingSectionControlStatementVAT as string, RequriedDate as date, Reserve as string, ReserveInvoice as string, ReuseDocumentNum as string, ReuseNotaFiscalNum as string, RevisionPo as string, Rounding as string, RoundingDiffAmount as double, RoundingDiffAmountFC as double, RoundingDiffAmountSC as double, SAPPassport as string, SalesPersonCode as short, Segment as boolean, SequenceCode as string, SequenceModel as boolean, SequenceSerial as string, Series as short, SeriesString as string, ServiceGrossProfitPercent as string, ShipFrom as string, ShipPlace as string, ShipState as string, ShipToCode as string, ShowSCN as string, SignatureDigest as string, SignatureInputMessage as string, SpecifiedClosingDate as string, StartDeliveryDate as string, StartDeliveryTime as string, StartFrom as string, SubSeriesString as string, Submitted as string, SummeryType as string, Supplier as string, TaxDate as date, TaxExemptionLetterNum as string, TotalDiscount as double, TotalDiscountFC as double, TotalDiscountSC as double, TotalEqualizationTax as double, TotalEqualizationTaxFC as double, TotalEqualizationTaxSC as double, TrackingNumber as string, TransNum as string, TransportationCode as short, U_AIG_KID as string, U_DSS_EHFBuyersRef as string, U_DSS_SendStatus as boolean, U_Levbet as string, U_Opperk as string, U_Ordrenummer as short, U_Sted as string, U_esurl as string, U_sluttkunde as string, UpdateDate as date, UpdateTime as string, UseBillToAddrToDetermineTax as string, UseCorrectionVATGroup as string, UseShpdGoodsAct as string, UserSign as short, VATRegNum as string, VatDate as string, VatPercent as double, VatSum as double, VatSumFc as double, VatSumSys as double, VehiclePlate as string, WTAmount as double, WTAmountFC as double, WTAmountSC as double, WTApplied as double, WTAppliedFC as double, WTAppliedSC as double, WTExemptedAmount as double, WTExemptedAmountFC as double, WTExemptedAmountSC as double, WTNonSubjectAmount as double, WTNonSubjectAmountFC as double, WTNonSubjectAmountSC as double, WareHouseUpdateType as string, WithholdingTaxDataCollection as string[], WithholdingTaxDataWTXCollection as string[])[]),",
						"          headers as [string,string]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     httpMethod: 'GET',",
						"     timeout: 30,",
						"     requestInterval: 0,",
						"     responseFormat: ['type' -> 'json', 'documentForm' -> 'arrayOfDocuments']) ~> apiOrders",
						"apiOrders foldDown(unroll(body.value.DocumentLines),",
						"     mapColumn(",
						"          CardCode = body.value.CardCode,",
						"          CardName = body.value.CardName,",
						"          DocDate = body.value.DocDate,",
						"          DocDueDate = body.value.DocDueDate,",
						"          DocNum = body.value.DocNum,",
						"          DocTime = body.value.DocTime,",
						"          AccountCode = body.value.DocumentLines.AccountCode,",
						"          ActualBaseEntry = body.value.DocumentLines.ActualBaseEntry,",
						"          ActualBaseLine = body.value.DocumentLines.ActualBaseLine,",
						"          ActualDeliveryDate = body.value.DocumentLines.ActualDeliveryDate,",
						"          Address = body.value.DocumentLines.Address,",
						"          AgreementNo = body.value.DocumentLines.AgreementNo,",
						"          AgreementRowNumber = body.value.DocumentLines.AgreementRowNumber,",
						"          AppliedTax = body.value.DocumentLines.AppliedTax,",
						"          AppliedTaxFC = body.value.DocumentLines.AppliedTaxFC,",
						"          AppliedTaxSC = body.value.DocumentLines.AppliedTaxSC,",
						"          BackOrder = body.value.DocumentLines.BackOrder,",
						"          BarCode = body.value.DocumentLines.BarCode,",
						"          BaseEntry = body.value.DocumentLines.BaseEntry,",
						"          BaseLine = body.value.DocumentLines.BaseLine,",
						"          BaseOpenQuantity = body.value.DocumentLines.BaseOpenQuantity,",
						"          BaseType = body.value.DocumentLines.BaseType,",
						"          CESTCode = body.value.DocumentLines.CESTCode,",
						"          CFOPCode = body.value.DocumentLines.CFOPCode,",
						"          CNJPMan = body.value.DocumentLines.CNJPMan,",
						"          COGSAccountCode = body.value.DocumentLines.COGSAccountCode,",
						"          COGSCostingCode = body.value.DocumentLines.COGSCostingCode,",
						"          COGSCostingCode2 = body.value.DocumentLines.COGSCostingCode2,",
						"          COGSCostingCode3 = body.value.DocumentLines.COGSCostingCode3,",
						"          COGSCostingCode4 = body.value.DocumentLines.COGSCostingCode4,",
						"          COGSCostingCode5 = body.value.DocumentLines.COGSCostingCode5,",
						"          CSTCode = body.value.DocumentLines.CSTCode,",
						"          CSTforCOFINS = body.value.DocumentLines.CSTforCOFINS,",
						"          CSTforIPI = body.value.DocumentLines.CSTforIPI,",
						"          CSTforPIS = body.value.DocumentLines.CSTforPIS,",
						"          CUSplit = body.value.DocumentLines.CUSplit,",
						"          ChangeAssemlyBoMWarehouse = body.value.DocumentLines.ChangeAssemlyBoMWarehouse,",
						"          ChangeInventoryQuantityIndependently = body.value.DocumentLines.ChangeInventoryQuantityIndependently,",
						"          CommisionPercent = body.value.DocumentLines.CommisionPercent,",
						"          CommodityClassification = body.value.DocumentLines.CommodityClassification,",
						"          ConsiderQuantity = body.value.DocumentLines.ConsiderQuantity,",
						"          ConsumerSalesForecast = body.value.DocumentLines.ConsumerSalesForecast,",
						"          CorrInvAmountToDiffAcct = body.value.DocumentLines.CorrInvAmountToDiffAcct,",
						"          CorrInvAmountToStock = body.value.DocumentLines.CorrInvAmountToStock,",
						"          CorrectionInvoiceItem = body.value.DocumentLines.CorrectionInvoiceItem,",
						"          CostingCode = body.value.DocumentLines.CostingCode,",
						"          CostingCode2 = body.value.DocumentLines.CostingCode2,",
						"          CostingCode3 = body.value.DocumentLines.CostingCode3,",
						"          CostingCode4 = body.value.DocumentLines.CostingCode4,",
						"          CostingCode5 = body.value.DocumentLines.CostingCode5,",
						"          CountryOrg = body.value.DocumentLines.CountryOrg,",
						"          CreditOriginCode = body.value.DocumentLines.CreditOriginCode,",
						"          CtrSealQty = body.value.DocumentLines.CtrSealQty,",
						"          Currency = body.value.DocumentLines.Currency,",
						"          DefectAndBreakup = body.value.DocumentLines.DefectAndBreakup,",
						"          DeferredTax = body.value.DocumentLines.DeferredTax,",
						"          DestinationCountryForImport = body.value.DocumentLines.DestinationCountryForImport,",
						"          DestinationRegionForImport = body.value.DocumentLines.DestinationRegionForImport,",
						"          DiscountPercent = body.value.DocumentLines.DiscountPercent,",
						"          DistributeExpense = body.value.DocumentLines.DistributeExpense,",
						"          DocEntry = body.value.DocumentLines.DocEntry,",
						"          EqualizationTaxPercent = body.value.DocumentLines.EqualizationTaxPercent,",
						"          ExLineNo = body.value.DocumentLines.ExLineNo,",
						"          ExciseAmount = body.value.DocumentLines.ExciseAmount,",
						"          ExpenseOperationType = body.value.DocumentLines.ExpenseOperationType,",
						"          ExpenseType = body.value.DocumentLines.ExpenseType,",
						"          ExternalCalcTaxAmount = body.value.DocumentLines.ExternalCalcTaxAmount,",
						"          ExternalCalcTaxAmountFC = body.value.DocumentLines.ExternalCalcTaxAmountFC,",
						"          ExternalCalcTaxAmountSC = body.value.DocumentLines.ExternalCalcTaxAmountSC,",
						"          ExternalCalcTaxRate = body.value.DocumentLines.ExternalCalcTaxRate,",
						"          Factor1 = body.value.DocumentLines.Factor1,",
						"          Factor2 = body.value.DocumentLines.Factor2,",
						"          Factor3 = body.value.DocumentLines.Factor3,",
						"          Factor4 = body.value.DocumentLines.Factor4,",
						"          FederalTaxID = body.value.DocumentLines.FederalTaxID,",
						"          FreeOfChargeBP = body.value.DocumentLines.FreeOfChargeBP,",
						"          FreeText = body.value.DocumentLines.FreeText,",
						"          GrossBase = body.value.DocumentLines.GrossBase,",
						"          GrossBuyPrice = body.value.DocumentLines.GrossBuyPrice,",
						"          GrossPrice = body.value.DocumentLines.GrossPrice,",
						"          GrossProfit = body.value.DocumentLines.GrossProfit,",
						"          GrossProfitFC = body.value.DocumentLines.GrossProfitFC,",
						"          GrossProfitSC = body.value.DocumentLines.GrossProfitSC,",
						"          GrossProfitTotalBasePrice = body.value.DocumentLines.GrossProfitTotalBasePrice,",
						"          GrossTotal = body.value.DocumentLines.GrossTotal,",
						"          GrossTotalFC = body.value.DocumentLines.GrossTotalFC,",
						"          GrossTotalSC = body.value.DocumentLines.GrossTotalSC,",
						"          HSNEntry = body.value.DocumentLines.HSNEntry,",
						"          Height1 = body.value.DocumentLines.Height1,",
						"          Height2 = body.value.DocumentLines.Height2,",
						"          Height2Unit = body.value.DocumentLines.Height2Unit,",
						"          Hight1Unit = body.value.DocumentLines.Hight1Unit,",
						"          Incoterms = body.value.DocumentLines.Incoterms,",
						"          IndEscala = body.value.DocumentLines.IndEscala,",
						"          InventoryQuantity = body.value.DocumentLines.InventoryQuantity,",
						"          ItemCode = body.value.DocumentLines.ItemCode,",
						"          ItemDescription = body.value.DocumentLines.ItemDescription,",
						"          ItemDetails = body.value.DocumentLines.ItemDetails,",
						"          ItemType = body.value.DocumentLines.ItemType,",
						"          LastBuyDistributeSum = body.value.DocumentLines.LastBuyDistributeSum,",
						"          LastBuyDistributeSumFc = body.value.DocumentLines.LastBuyDistributeSumFc,",
						"          LastBuyDistributeSumSc = body.value.DocumentLines.LastBuyDistributeSumSc,",
						"          LastBuyInmPrice = body.value.DocumentLines.LastBuyInmPrice,",
						"          Lengh1 = body.value.DocumentLines.Lengh1,",
						"          Lengh1Unit = body.value.DocumentLines.Lengh1Unit,",
						"          Lengh2 = body.value.DocumentLines.Lengh2,",
						"          Lengh2Unit = body.value.DocumentLines.Lengh2Unit,",
						"          LineNum = body.value.DocumentLines.LineNum,",
						"          LineStatus = body.value.DocumentLines.LineStatus,",
						"          LineTotal = body.value.DocumentLines.LineTotal,",
						"          LineType = body.value.DocumentLines.LineType,",
						"          LocationCode = body.value.DocumentLines.LocationCode,",
						"          MeasureUnit = body.value.DocumentLines.MeasureUnit,",
						"          NCMCode = body.value.DocumentLines.NCMCode,",
						"          NVECode = body.value.DocumentLines.NVECode,",
						"          NatureOfTransaction = body.value.DocumentLines.NatureOfTransaction,",
						"          NetTaxAmount = body.value.DocumentLines.NetTaxAmount,",
						"          NetTaxAmountFC = body.value.DocumentLines.NetTaxAmountFC,",
						"          NetTaxAmountSC = body.value.DocumentLines.NetTaxAmountSC,",
						"          OpenAmount = body.value.DocumentLines.OpenAmount,",
						"          OpenAmountFC = body.value.DocumentLines.OpenAmountFC,",
						"          OpenAmountSC = body.value.DocumentLines.OpenAmountSC,",
						"          OriginCountryForExport = body.value.DocumentLines.OriginCountryForExport,",
						"          OriginRegionForExport = body.value.DocumentLines.OriginRegionForExport,",
						"          OriginalItem = body.value.DocumentLines.OriginalItem,",
						"          OwnerCode = body.value.DocumentLines.OwnerCode,",
						"          POTargetEntry = body.value.DocumentLines.POTargetEntry,",
						"          POTargetNum = body.value.DocumentLines.POTargetNum,",
						"          POTargetRowNum = body.value.DocumentLines.POTargetRowNum,",
						"          PackageQuantity = body.value.DocumentLines.PackageQuantity,",
						"          ParentLineNum = body.value.DocumentLines.ParentLineNum,",
						"          PartialRetirement = body.value.DocumentLines.PartialRetirement,",
						"          PickListIdNumber = body.value.DocumentLines.PickListIdNumber,",
						"          PickQuantity = body.value.DocumentLines.PickQuantity,",
						"          PickStatus = body.value.DocumentLines.PickStatus,",
						"          PickStatusEx = body.value.DocumentLines.PickStatusEx,",
						"          PoItmNum = body.value.DocumentLines.PoItmNum,",
						"          PoNum = body.value.DocumentLines.PoNum,",
						"          Price = body.value.DocumentLines.Price,",
						"          PriceAfterVAT = body.value.DocumentLines.PriceAfterVAT,",
						"          PriceSource = body.value.DocumentLines.PriceSource,",
						"          ProjectCode = body.value.DocumentLines.ProjectCode,",
						"          Quantity = body.value.DocumentLines.Quantity,",
						"          Rate = body.value.DocumentLines.Rate,",
						"          ReceiptNumber = body.value.DocumentLines.ReceiptNumber,",
						"          RemainingOpenInventoryQuantity = body.value.DocumentLines.RemainingOpenInventoryQuantity,",
						"          RemainingOpenQuantity = body.value.DocumentLines.RemainingOpenQuantity,",
						"          RequiredDate = body.value.DocumentLines.RequiredDate,",
						"          RequiredQuantity = body.value.DocumentLines.RequiredQuantity,",
						"          RetirementAPC = body.value.DocumentLines.RetirementAPC,",
						"          RetirementQuantity = body.value.DocumentLines.RetirementQuantity,",
						"          ReverseCharge = body.value.DocumentLines.ReverseCharge,",
						"          RowTotalFC = body.value.DocumentLines.RowTotalFC,",
						"          RowTotalSC = body.value.DocumentLines.RowTotalSC,",
						"          SACEntry = body.value.DocumentLines.SACEntry,",
						"          SWW = body.value.DocumentLines.SWW,",
						"          SalesPersonCode = body.value.DocumentLines.SalesPersonCode,",
						"          SerialNum = body.value.DocumentLines.SerialNum,",
						"          ShipDate = body.value.DocumentLines.ShipDate,",
						"          ShipToCode = body.value.DocumentLines.ShipToCode,",
						"          ShipToDescription = body.value.DocumentLines.ShipToDescription,",
						"          ShippingMethod = body.value.DocumentLines.ShippingMethod,",
						"          Shortages = body.value.DocumentLines.Shortages,",
						"          StandardItemIdentification = body.value.DocumentLines.StandardItemIdentification,",
						"          StgDesc = body.value.DocumentLines.StgDesc,",
						"          StgEntry = body.value.DocumentLines.StgEntry,",
						"          StgSeqNum = body.value.DocumentLines.StgSeqNum,",
						"          StockDistributesum = body.value.DocumentLines.StockDistributesum,",
						"          StockDistributesumForeign = body.value.DocumentLines.StockDistributesumForeign,",
						"          StockDistributesumSystem = body.value.DocumentLines.StockDistributesumSystem,",
						"          StockInmPrice = body.value.DocumentLines.StockInmPrice,",
						"          SupplierCatNum = body.value.DocumentLines.SupplierCatNum,",
						"          Surpluses = body.value.DocumentLines.Surpluses,",
						"          TaxBeforeDPM = body.value.DocumentLines.TaxBeforeDPM,",
						"          TaxBeforeDPMFC = body.value.DocumentLines.TaxBeforeDPMFC,",
						"          TaxBeforeDPMSC = body.value.DocumentLines.TaxBeforeDPMSC,",
						"          TaxCode = body.value.DocumentLines.TaxCode,",
						"          TaxLiable = body.value.DocumentLines.TaxLiable,",
						"          TaxOnly = body.value.DocumentLines.TaxOnly,",
						"          TaxPerUnit = body.value.DocumentLines.TaxPerUnit,",
						"          TaxPercentagePerRow = body.value.DocumentLines.TaxPercentagePerRow,",
						"          TaxTotal = body.value.DocumentLines.TaxTotal,",
						"          TaxType = body.value.DocumentLines.TaxType,",
						"          Text = body.value.DocumentLines.Text,",
						"          ThirdParty = body.value.DocumentLines.ThirdParty,",
						"          TotalEqualizationTax = body.value.DocumentLines.TotalEqualizationTax,",
						"          TotalEqualizationTaxFC = body.value.DocumentLines.TotalEqualizationTaxFC,",
						"          TotalEqualizationTaxSC = body.value.DocumentLines.TotalEqualizationTaxSC,",
						"          TotalInclTax = body.value.DocumentLines.TotalInclTax,",
						"          TransactionType = body.value.DocumentLines.TransactionType,",
						"          TransportMode = body.value.DocumentLines.TransportMode,",
						"          TreeType = body.value.DocumentLines.TreeType,",
						"          UFFiscalBenefitCode = body.value.DocumentLines.UFFiscalBenefitCode,",
						"          U_AIG_DDate = body.value.DocumentLines.U_AIG_DDate,",
						"          U_AIG_IA = body.value.DocumentLines.U_AIG_IA,",
						"          U_AIG_ID = body.value.DocumentLines.U_AIG_ID,",
						"          U_AIG_IN = body.value.DocumentLines.U_AIG_IN,",
						"          U_AIG_IR = body.value.DocumentLines.U_AIG_IR,",
						"          U_AIG_PD = body.value.DocumentLines.U_AIG_PD,",
						"          U_AIG_PDate = body.value.DocumentLines.U_AIG_PDate,",
						"          U_Codebars = body.value.DocumentLines.U_Codebars,",
						"          U_DSS_Charge = body.value.DocumentLines.U_DSS_Charge,",
						"          U_DSS_ProdOrdr = body.value.DocumentLines.U_DSS_ProdOrdr,",
						"          U_Installasjon = body.value.DocumentLines.U_Installasjon,",
						"          U_PItemCode = body.value.DocumentLines.U_PItemCode,",
						"          U_ParentItem = body.value.DocumentLines.U_ParentItem,",
						"          U_PlannedQty = body.value.DocumentLines.U_PlannedQty,",
						"          U_U_AIG_DDate = body.value.DocumentLines.U_U_AIG_DDate,",
						"          UnencumberedReason = body.value.DocumentLines.UnencumberedReason,",
						"          UnitPrice = body.value.DocumentLines.UnitPrice,",
						"          UnitsOfMeasurment = body.value.DocumentLines.UnitsOfMeasurment,",
						"          UoMCode = body.value.DocumentLines.UoMCode,",
						"          UoMEntry = body.value.DocumentLines.UoMEntry,",
						"          Usage = body.value.DocumentLines.Usage,",
						"          UseBaseUnits = body.value.DocumentLines.UseBaseUnits,",
						"          VatGroup = body.value.DocumentLines.VatGroup,",
						"          VendorNum = body.value.DocumentLines.VendorNum,",
						"          VisualOrder = body.value.DocumentLines.VisualOrder,",
						"          Volume = body.value.DocumentLines.Volume,",
						"          VolumeUnit = body.value.DocumentLines.VolumeUnit,",
						"          WTLiable = body.value.DocumentLines.WTLiable,",
						"          WarehouseCode = body.value.DocumentLines.WarehouseCode,",
						"          Weight1 = body.value.DocumentLines.Weight1,",
						"          Weight1Unit = body.value.DocumentLines.Weight1Unit,",
						"          Weight2 = body.value.DocumentLines.Weight2,",
						"          Weight2Unit = body.value.DocumentLines.Weight2Unit,",
						"          Width1 = body.value.DocumentLines.Width1,",
						"          Width1Unit = body.value.DocumentLines.Width1Unit,",
						"          Width2 = body.value.DocumentLines.Width2,",
						"          Width2Unit = body.value.DocumentLines.Width2Unit,",
						"          WithoutInventoryMovement = body.value.DocumentLines.WithoutInventoryMovement",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> FlattenDocumentLines",
						"FlattenDocumentLines sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SinkToSQLTable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_bo_sap_orders')]",
				"[concat(variables('factoryId'), '/datasets/sql_bo_orders_lines')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_jsonParse_Sql')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_blob_sap",
								"type": "DatasetReference"
							},
							"name": "ReadJsonFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sql_bo_sap_invoices",
								"type": "DatasetReference"
							},
							"name": "SinkSQL"
						}
					],
					"transformations": [
						{
							"name": "Flatten"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {@odata.context} as string,",
						"          value as ({@odata.etag} as string, DocEntry as integer, DocNum as integer, DocType as string, HandWritten as string, Printed as string, DocDate as string, DocDueDate as string, CardCode as string, CardName as string, Address as string, NumAtCard as string, DocTotal as double, AttachmentEntry as string, DocCurrency as string, DocRate as double, Reference1 as string, Reference2 as string, Comments as string, JournalMemo as string, PaymentGroupCode as integer, DocTime as string, SalesPersonCode as integer, TransportationCode as integer, Confirmed as string, ImportFileNum as string, SummeryType as string, ContactPersonCode as integer, ShowSCN as string, Series as integer, TaxDate as string, PartialSupply as string, DocObjectCode as string, ShipToCode as string, Indicator as string, FederalTaxID as string, DiscountPercent as double, PaymentReference as string, CreationDate as string, UpdateDate as string, FinancialPeriod as integer, UserSign as integer, TransNum as integer, VatSum as double, VatSumSys as double, VatSumFc as double, NetProcedure as string, DocTotalFc as double, DocTotalSys as double, Form1099 as string, Box1099 as string, RevisionPo as string, RequriedDate as string, CancelDate as string, BlockDunning as string, Submitted as string, Segment as integer, PickStatus as string, Pick as string, PaymentMethod as string, PaymentBlock as string, PaymentBlockEntry as string, CentralBankIndicator as string, MaximumCashDiscount as string, Reserve as string, Project as string, ExemptionValidityDateFrom as string, ExemptionValidityDateTo as string, WareHouseUpdateType as string, Rounding as string, ExternalCorrectedDocNum as string, InternalCorrectedDocNum as string, NextCorrectingDocument as string, DeferredTax as string, TaxExemptionLetterNum as string, WTApplied as double, WTAppliedFC as double, BillOfExchangeReserved as string, AgentCode as string, WTAppliedSC as double, TotalEqualizationTax as double, TotalEqualizationTaxFC as double, TotalEqualizationTaxSC as double, NumberOfInstallments as integer, ApplyTaxOnFirstInstallment as string, WTNonSubjectAmount as double, WTNonSubjectAmountSC as double, WTNonSubjectAmountFC as double, WTExemptedAmount as double, WTExemptedAmountSC as double, WTExemptedAmountFC as double, BaseAmount as double, BaseAmountSC as double, BaseAmountFC as double, WTAmount as double, WTAmountSC as double, WTAmountFC as double, VatDate as string, DocumentsOwner as integer, FolioPrefixString as string, FolioNumber as string, DocumentSubType as string, BPChannelCode as string, BPChannelContact as string, Address2 as string, DocumentStatus as string, PeriodIndicator as string, PayToCode as string, ManualNumber as string, UseShpdGoodsAct as string, IsPayToBank as string, PayToBankCountry as string, PayToBankCode as string, PayToBankAccountNo as string, PayToBankBranch as string, BPL_IDAssignedToInvoice as string, DownPayment as double, ReserveInvoice as string, LanguageCode as integer, TrackingNumber as string, PickRemark as string, ClosingDate as string, SequenceCode as string, SequenceSerial as string, SeriesString as string, SubSeriesString as string, SequenceModel as string, UseCorrectionVATGroup as string, TotalDiscount as double, DownPaymentAmount as double, DownPaymentPercentage as double, DownPaymentType as string, DownPaymentAmountSC as double, DownPaymentAmountFC as double, VatPercent as double, ServiceGrossProfitPercent as string, OpeningRemarks as string, ClosingRemarks as string, RoundingDiffAmount as double, RoundingDiffAmountFC as double, RoundingDiffAmountSC as double, Cancelled as string, SignatureInputMessage as string, SignatureDigest as string, CertificationNumber as string, PrivateKeyVersion as string, ControlAccount as string, InsuranceOperation347 as string, ArchiveNonremovableSalesQuotation as string, GTSChecker as string, GTSPayee as string, ExtraMonth as integer, ExtraDays as integer, CashDiscountDateOffset as integer, StartFrom as string, NTSApproved as string, ETaxWebSite as string, ETaxNumber as string, NTSApprovedNumber as string, EDocGenerationType as string, EDocSeries as string, EDocNum as string, EDocExportFormat as string, EDocStatus as string, EDocErrorCode as string, EDocErrorMessage as string, DownPaymentStatus as string, GroupSeries as string, GroupNumber as string, GroupHandWritten as string, ReopenOriginalDocument as string, ReopenManuallyClosedOrCanceledDocument as string, CreateOnlineQuotation as string, POSEquipmentNumber as string, POSManufacturerSerialNumber as string, POSCashierNumber as string, ApplyCurrentVATRatesForDownPaymentsToDraw as string, ClosingOption as string, SpecifiedClosingDate as string, OpenForLandedCosts as string, AuthorizationStatus as string, TotalDiscountFC as double, TotalDiscountSC as double, RelevantToGTS as string, BPLName as string, VATRegNum as string, AnnualInvoiceDeclarationReference as string, Supplier as string, Releaser as string, Receiver as string, BlanketAgreementNumber as string, IsAlteration as string, CancelStatus as string, AssetValueDate as string, InvoicePayment as string, DocumentDelivery as string, AuthorizationCode as string, StartDeliveryDate as string, StartDeliveryTime as string, EndDeliveryDate as string, EndDeliveryTime as string, VehiclePlate as string, ATDocumentType as string, ElecCommStatus as string, ElecCommMessage as string, ReuseDocumentNum as string, ReuseNotaFiscalNum as string, PrintSEPADirect as string, FiscalDocNum as string, POSDailySummaryNo as string, POSReceiptNo as string, PointOfIssueCode as string, Letter as string, FolioNumberFrom as string, FolioNumberTo as string, InterimType as string, RelatedType as integer, RelatedEntry as string, SAPPassport as string, DocumentTaxID as string, DateOfReportingControlStatementVAT as string, ReportingSectionControlStatementVAT as string, ExcludeFromTaxReportControlStatementVAT as string, POS_CashRegister as string, UpdateTime as string, CreateQRCodeFrom as string, PriceMode as string, Revision as string, OriginalRefNo as string, OriginalRefDate as string, GSTTransactionType as string, OriginalCreditOrDebitNo as string, OriginalCreditOrDebitDate as string, ECommerceOperator as string, ECommerceGSTIN as string, ShipFrom as string, CommissionTrade as string, CommissionTradeReturn as string, UseBillToAddrToDetermineTax as string, IssuingReason as integer, Cig as string, Cup as string, EDocType as string, FCEAsPaymentMeans as string, PaidToDate as double, PaidToDateFC as double, PaidToDateSys as double, BaseType as integer, BaseEntry as string, FatherCard as string, FatherType as string, ShipState as string, ShipPlace as string, CustOffice as string, FCI as string, AddLegIn as string, LegTextF as string, DANFELgTxt as string, IndFinal as string, DataVersion as integer, LastPageFolioNumber as string, U_AIG_KID as string, U_Ordrenummer as string, U_esurl as string, U_sluttkunde as string, U_Levbet as string, U_Sted as string, U_Opperk as string, U_DSS_SendStatus as integer, U_DSS_EHFBuyersRef as string, Document_ApprovalRequests as string[], DocumentLines as (LineNum as integer, ItemCode as string, ItemDescription as string, Quantity as double, ShipDate as string, Price as double, PriceAfterVAT as double, Currency as string, Rate as double, DiscountPercent as double, VendorNum as string, SerialNum as string, WarehouseCode as string, SalesPersonCode as integer, CommisionPercent as double, TreeType as string, AccountCode as string, UseBaseUnits as string, SupplierCatNum as string, CostingCode as string, ProjectCode as string, BarCode as string, VatGroup as string, Height1 as double, Hight1Unit as string, Height2 as double, Height2Unit as string, Lengh1 as double, Lengh1Unit as string, Lengh2 as double, Lengh2Unit as string, Weight1 as double, Weight1Unit as string, Weight2 as double, Weight2Unit as string, Factor1 as double, Factor2 as double, Factor3 as double, Factor4 as double, BaseType as integer, BaseEntry as integer, BaseLine as integer, Volume as double, VolumeUnit as integer, Width1 as double, Width1Unit as string, Width2 as double, Width2Unit as string, Address as string, TaxCode as string, TaxType as string, TaxLiable as string, PickStatus as string, PickQuantity as double, PickListIdNumber as string, OriginalItem as string, BackOrder as string, FreeText as string, ShippingMethod as integer, POTargetNum as string, POTargetEntry as string, POTargetRowNum as string, CorrectionInvoiceItem as string, CorrInvAmountToStock as double, CorrInvAmountToDiffAcct as double, AppliedTax as double, AppliedTaxFC as double, AppliedTaxSC as double, WTLiable as string, DeferredTax as string, EqualizationTaxPercent as double, TotalEqualizationTax as double, TotalEqualizationTaxFC as double, TotalEqualizationTaxSC as double, NetTaxAmount as double, NetTaxAmountFC as double, NetTaxAmountSC as double, MeasureUnit as string, UnitsOfMeasurment as double, LineTotal as double, TaxPercentagePerRow as double, TaxTotal as double, ConsumerSalesForecast as string, ExciseAmount as double, TaxPerUnit as double, TotalInclTax as double, CountryOrg as string, SWW as string, TransactionType as string, DistributeExpense as string, RowTotalFC as double, RowTotalSC as double, LastBuyInmPrice as double, LastBuyDistributeSumFc as double, LastBuyDistributeSumSc as double, LastBuyDistributeSum as double, StockDistributesumForeign as double, StockDistributesumSystem as double, StockDistributesum as double, StockInmPrice as double, PickStatusEx as string, TaxBeforeDPM as double, TaxBeforeDPMFC as double, TaxBeforeDPMSC as double, CFOPCode as string, CSTCode as string, Usage as string, TaxOnly as string, VisualOrder as integer, BaseOpenQuantity as double, UnitPrice as double, LineStatus as string, PackageQuantity as double, Text as string, LineType as string, COGSCostingCode as string, COGSAccountCode as string, ChangeAssemlyBoMWarehouse as string, GrossBuyPrice as double, GrossBase as integer, GrossProfitTotalBasePrice as double, CostingCode2 as string, CostingCode3 as string, CostingCode4 as string, CostingCode5 as string, ItemDetails as string, LocationCode as string, ActualDeliveryDate as string, RemainingOpenQuantity as double, OpenAmount as double, OpenAmountFC as double, OpenAmountSC as double, ExLineNo as string, RequiredDate as string, RequiredQuantity as string, COGSCostingCode2 as string, COGSCostingCode3 as string, COGSCostingCode4 as string, COGSCostingCode5 as string, CSTforIPI as string, CSTforPIS as string, CSTforCOFINS as string, CreditOriginCode as string, WithoutInventoryMovement as string, AgreementNo as string, AgreementRowNumber as string, ActualBaseEntry as string, ActualBaseLine as string, DocEntry as integer, Surpluses as string, DefectAndBreakup as string, Shortages as string, ConsiderQuantity as string, PartialRetirement as string, RetirementQuantity as string, RetirementAPC as string, ThirdParty as string, PoNum as string, PoItmNum as string, ExpenseType as string, ReceiptNumber as string, ExpenseOperationType as string, FederalTaxID as string, GrossProfit as double, GrossProfitFC as double, GrossProfitSC as double, PriceSource as string, StgSeqNum as string, StgEntry as string, StgDesc as string, UoMEntry as integer, UoMCode as string, InventoryQuantity as double, RemainingOpenInventoryQuantity as double, ParentLineNum as string, Incoterms as integer, TransportMode as integer, NatureOfTransaction as string, DestinationCountryForImport as string, DestinationRegionForImport as string, OriginCountryForExport as string, OriginRegionForExport as string, ItemType as string, ChangeInventoryQuantityIndependently as string, FreeOfChargeBP as string, SACEntry as string, HSNEntry as string, GrossPrice as double, GrossTotal as double, GrossTotalFC as double, GrossTotalSC as double, NCMCode as integer, NVECode as string, IndEscala as string, CtrSealQty as string, CNJPMan as string, CESTCode as string, UFFiscalBenefitCode as string, ReverseCharge as string, ShipToCode as string, ShipToDescription as string, ExternalCalcTaxRate as string, ExternalCalcTaxAmount as string, ExternalCalcTaxAmountFC as string, ExternalCalcTaxAmountSC as string, StandardItemIdentification as string, CommodityClassification as string, UnencumberedReason as string, CUSplit as string, U_Installasjon as string, U_ParentItem as string, U_Codebars as string, U_PlannedQty as double, U_AIG_IN as string, U_AIG_IA as string, U_AIG_PD as string, U_AIG_PDate as string, U_AIG_ID as string, U_PItemCode as string, U_AIG_IR as string, U_AIG_DDate as string, U_U_AIG_DDate as string, U_DSS_Charge as string, U_DSS_ProdOrdr as string, LineTaxJurisdictions as string[], ExportProcesses as string[], EBooksDetails as string[], DocumentLineAdditionalExpenses as string[], WithholdingTaxLines as string[], SerialNumbers as string[], BatchNumbers as string[], CCDNumbers as string[], DocumentLinesBinAllocations as string[])[], EWayBillDetails as ({} as string), ElectronicProtocols as string[], DocumentAdditionalExpenses as string[], WithholdingTaxDataWTXCollection as string[], WithholdingTaxDataCollection as string[], DocumentPackages as string[], DocumentSpecialLines as string[], DocumentInstallments as (DueDate as string, Percentage as double, Total as double, LastDunningDate as string, DunningLevel as integer, TotalFC as string, InstallmentId as integer, PaymentOrdered as string)[], DownPaymentsToDraw as string[], TaxExtension as ({} as string), AddressExtension as ({} as string), DocumentReferences as string[])[],",
						"          {@odata.nextLink} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> ReadJsonFile",
						"ReadJsonFile foldDown(unroll(value.DocumentLines, value),",
						"     mapColumn(",
						"          DocNum = value.DocNum,",
						"          DocDate = value.DocDate,",
						"          DocDueDate = value.DocDueDate,",
						"          CardCode = value.CardCode,",
						"          LineNum = value.DocumentLines.LineNum,",
						"          ItemCode = value.DocumentLines.ItemCode,",
						"          ItemDescription = value.DocumentLines.ItemDescription,",
						"          Quantity = value.DocumentLines.Quantity,",
						"          ShipDate = value.DocumentLines.ShipDate,",
						"          Price = value.DocumentLines.Price,",
						"          PriceAfterVAT = value.DocumentLines.PriceAfterVAT,",
						"          Currency = value.DocumentLines.Currency,",
						"          Rate = value.DocumentLines.Rate,",
						"          DiscountPercent = value.DocumentLines.DiscountPercent,",
						"          VendorNum = value.DocumentLines.VendorNum,",
						"          SerialNum = value.DocumentLines.SerialNum,",
						"          WarehouseCode = value.DocumentLines.WarehouseCode,",
						"          SalesPersonCode = value.DocumentLines.SalesPersonCode,",
						"          CommisionPercent = value.DocumentLines.CommisionPercent,",
						"          TreeType = value.DocumentLines.TreeType,",
						"          AccountCode = value.DocumentLines.AccountCode,",
						"          UseBaseUnits = value.DocumentLines.UseBaseUnits,",
						"          SupplierCatNum = value.DocumentLines.SupplierCatNum,",
						"          CostingCode = value.DocumentLines.CostingCode,",
						"          ProjectCode = value.DocumentLines.ProjectCode,",
						"          BarCode = value.DocumentLines.BarCode,",
						"          VatGroup = value.DocumentLines.VatGroup,",
						"          Height1 = value.DocumentLines.Height1,",
						"          Hight1Unit = value.DocumentLines.Hight1Unit,",
						"          Height2 = value.DocumentLines.Height2,",
						"          Height2Unit = value.DocumentLines.Height2Unit,",
						"          Lengh1 = value.DocumentLines.Lengh1,",
						"          Lengh1Unit = value.DocumentLines.Lengh1Unit,",
						"          Lengh2 = value.DocumentLines.Lengh2,",
						"          Lengh2Unit = value.DocumentLines.Lengh2Unit,",
						"          Weight1 = value.DocumentLines.Weight1,",
						"          Weight1Unit = value.DocumentLines.Weight1Unit,",
						"          Weight2 = value.DocumentLines.Weight2,",
						"          Weight2Unit = value.DocumentLines.Weight2Unit,",
						"          Factor1 = value.DocumentLines.Factor1,",
						"          Factor2 = value.DocumentLines.Factor2,",
						"          Factor3 = value.DocumentLines.Factor3,",
						"          Factor4 = value.DocumentLines.Factor4,",
						"          BaseType = value.DocumentLines.BaseType,",
						"          BaseEntry = value.DocumentLines.BaseEntry,",
						"          BaseLine = value.DocumentLines.BaseLine,",
						"          Volume = value.DocumentLines.Volume,",
						"          VolumeUnit = value.DocumentLines.VolumeUnit,",
						"          Width1 = value.DocumentLines.Width1,",
						"          Width1Unit = value.DocumentLines.Width1Unit,",
						"          Width2 = value.DocumentLines.Width2,",
						"          Width2Unit = value.DocumentLines.Width2Unit,",
						"          Address = value.DocumentLines.Address,",
						"          TaxCode = value.DocumentLines.TaxCode,",
						"          TaxType = value.DocumentLines.TaxType,",
						"          TaxLiable = value.DocumentLines.TaxLiable,",
						"          PickStatus = value.DocumentLines.PickStatus,",
						"          PickQuantity = value.DocumentLines.PickQuantity,",
						"          PickListIdNumber = value.DocumentLines.PickListIdNumber,",
						"          OriginalItem = value.DocumentLines.OriginalItem,",
						"          BackOrder = value.DocumentLines.BackOrder,",
						"          FreeText = value.DocumentLines.FreeText,",
						"          ShippingMethod = value.DocumentLines.ShippingMethod,",
						"          POTargetNum = value.DocumentLines.POTargetNum,",
						"          POTargetEntry = value.DocumentLines.POTargetEntry,",
						"          POTargetRowNum = value.DocumentLines.POTargetRowNum,",
						"          CorrectionInvoiceItem = value.DocumentLines.CorrectionInvoiceItem,",
						"          CorrInvAmountToStock = value.DocumentLines.CorrInvAmountToStock,",
						"          CorrInvAmountToDiffAcct = value.DocumentLines.CorrInvAmountToDiffAcct,",
						"          AppliedTax = value.DocumentLines.AppliedTax,",
						"          AppliedTaxFC = value.DocumentLines.AppliedTaxFC,",
						"          AppliedTaxSC = value.DocumentLines.AppliedTaxSC,",
						"          WTLiable = value.DocumentLines.WTLiable,",
						"          DeferredTax = value.DocumentLines.DeferredTax,",
						"          EqualizationTaxPercent = value.DocumentLines.EqualizationTaxPercent,",
						"          TotalEqualizationTax = value.DocumentLines.TotalEqualizationTax,",
						"          TotalEqualizationTaxFC = value.DocumentLines.TotalEqualizationTaxFC,",
						"          TotalEqualizationTaxSC = value.DocumentLines.TotalEqualizationTaxSC,",
						"          NetTaxAmount = value.DocumentLines.NetTaxAmount,",
						"          NetTaxAmountFC = value.DocumentLines.NetTaxAmountFC,",
						"          NetTaxAmountSC = value.DocumentLines.NetTaxAmountSC,",
						"          MeasureUnit = value.DocumentLines.MeasureUnit,",
						"          UnitsOfMeasurment = value.DocumentLines.UnitsOfMeasurment,",
						"          LineTotal = value.DocumentLines.LineTotal,",
						"          TaxPercentagePerRow = value.DocumentLines.TaxPercentagePerRow,",
						"          TaxTotal = value.DocumentLines.TaxTotal,",
						"          ConsumerSalesForecast = value.DocumentLines.ConsumerSalesForecast,",
						"          ExciseAmount = value.DocumentLines.ExciseAmount,",
						"          TaxPerUnit = value.DocumentLines.TaxPerUnit,",
						"          TotalInclTax = value.DocumentLines.TotalInclTax,",
						"          CountryOrg = value.DocumentLines.CountryOrg,",
						"          SWW = value.DocumentLines.SWW,",
						"          TransactionType = value.DocumentLines.TransactionType,",
						"          DistributeExpense = value.DocumentLines.DistributeExpense,",
						"          RowTotalFC = value.DocumentLines.RowTotalFC,",
						"          RowTotalSC = value.DocumentLines.RowTotalSC,",
						"          LastBuyInmPrice = value.DocumentLines.LastBuyInmPrice,",
						"          LastBuyDistributeSumFc = value.DocumentLines.LastBuyDistributeSumFc,",
						"          LastBuyDistributeSumSc = value.DocumentLines.LastBuyDistributeSumSc,",
						"          LastBuyDistributeSum = value.DocumentLines.LastBuyDistributeSum,",
						"          StockDistributesumForeign = value.DocumentLines.StockDistributesumForeign,",
						"          StockDistributesumSystem = value.DocumentLines.StockDistributesumSystem,",
						"          StockDistributesum = value.DocumentLines.StockDistributesum,",
						"          StockInmPrice = value.DocumentLines.StockInmPrice,",
						"          PickStatusEx = value.DocumentLines.PickStatusEx,",
						"          TaxBeforeDPM = value.DocumentLines.TaxBeforeDPM,",
						"          TaxBeforeDPMFC = value.DocumentLines.TaxBeforeDPMFC,",
						"          TaxBeforeDPMSC = value.DocumentLines.TaxBeforeDPMSC,",
						"          CFOPCode = value.DocumentLines.CFOPCode,",
						"          CSTCode = value.DocumentLines.CSTCode,",
						"          Usage = value.DocumentLines.Usage,",
						"          TaxOnly = value.DocumentLines.TaxOnly,",
						"          VisualOrder = value.DocumentLines.VisualOrder,",
						"          BaseOpenQuantity = value.DocumentLines.BaseOpenQuantity,",
						"          UnitPrice = value.DocumentLines.UnitPrice,",
						"          LineStatus = value.DocumentLines.LineStatus,",
						"          PackageQuantity = value.DocumentLines.PackageQuantity,",
						"          Text = value.DocumentLines.Text,",
						"          LineType = value.DocumentLines.LineType,",
						"          COGSCostingCode = value.DocumentLines.COGSCostingCode,",
						"          COGSAccountCode = value.DocumentLines.COGSAccountCode,",
						"          ChangeAssemlyBoMWarehouse = value.DocumentLines.ChangeAssemlyBoMWarehouse,",
						"          GrossBuyPrice = value.DocumentLines.GrossBuyPrice,",
						"          GrossBase = value.DocumentLines.GrossBase,",
						"          GrossProfitTotalBasePrice = value.DocumentLines.GrossProfitTotalBasePrice,",
						"          CostingCode2 = value.DocumentLines.CostingCode2,",
						"          CostingCode3 = value.DocumentLines.CostingCode3,",
						"          CostingCode4 = value.DocumentLines.CostingCode4,",
						"          CostingCode5 = value.DocumentLines.CostingCode5,",
						"          ItemDetails = value.DocumentLines.ItemDetails,",
						"          LocationCode = value.DocumentLines.LocationCode,",
						"          ActualDeliveryDate = value.DocumentLines.ActualDeliveryDate,",
						"          RemainingOpenQuantity = value.DocumentLines.RemainingOpenQuantity,",
						"          OpenAmount = value.DocumentLines.OpenAmount,",
						"          OpenAmountFC = value.DocumentLines.OpenAmountFC,",
						"          OpenAmountSC = value.DocumentLines.OpenAmountSC,",
						"          ExLineNo = value.DocumentLines.ExLineNo,",
						"          RequiredDate = value.DocumentLines.RequiredDate,",
						"          RequiredQuantity = value.DocumentLines.RequiredQuantity,",
						"          COGSCostingCode2 = value.DocumentLines.COGSCostingCode2,",
						"          COGSCostingCode3 = value.DocumentLines.COGSCostingCode3,",
						"          COGSCostingCode4 = value.DocumentLines.COGSCostingCode4,",
						"          COGSCostingCode5 = value.DocumentLines.COGSCostingCode5,",
						"          CSTforIPI = value.DocumentLines.CSTforIPI,",
						"          CSTforPIS = value.DocumentLines.CSTforPIS,",
						"          CSTforCOFINS = value.DocumentLines.CSTforCOFINS,",
						"          CreditOriginCode = value.DocumentLines.CreditOriginCode,",
						"          WithoutInventoryMovement = value.DocumentLines.WithoutInventoryMovement,",
						"          AgreementNo = value.DocumentLines.AgreementNo,",
						"          AgreementRowNumber = value.DocumentLines.AgreementRowNumber,",
						"          ActualBaseEntry = value.DocumentLines.ActualBaseEntry,",
						"          ActualBaseLine = value.DocumentLines.ActualBaseLine,",
						"          DocEntry = value.DocumentLines.DocEntry,",
						"          Surpluses = value.DocumentLines.Surpluses,",
						"          DefectAndBreakup = value.DocumentLines.DefectAndBreakup,",
						"          Shortages = value.DocumentLines.Shortages,",
						"          ConsiderQuantity = value.DocumentLines.ConsiderQuantity,",
						"          PartialRetirement = value.DocumentLines.PartialRetirement,",
						"          RetirementQuantity = value.DocumentLines.RetirementQuantity,",
						"          RetirementAPC = value.DocumentLines.RetirementAPC,",
						"          ThirdParty = value.DocumentLines.ThirdParty,",
						"          PoNum = value.DocumentLines.PoNum,",
						"          PoItmNum = value.DocumentLines.PoItmNum,",
						"          ExpenseType = value.DocumentLines.ExpenseType,",
						"          ReceiptNumber = value.DocumentLines.ReceiptNumber,",
						"          ExpenseOperationType = value.DocumentLines.ExpenseOperationType,",
						"          FederalTaxID = value.DocumentLines.FederalTaxID,",
						"          GrossProfit = value.DocumentLines.GrossProfit,",
						"          GrossProfitFC = value.DocumentLines.GrossProfitFC,",
						"          GrossProfitSC = value.DocumentLines.GrossProfitSC,",
						"          PriceSource = value.DocumentLines.PriceSource,",
						"          StgSeqNum = value.DocumentLines.StgSeqNum,",
						"          StgEntry = value.DocumentLines.StgEntry,",
						"          StgDesc = value.DocumentLines.StgDesc,",
						"          UoMEntry = value.DocumentLines.UoMEntry,",
						"          UoMCode = value.DocumentLines.UoMCode,",
						"          InventoryQuantity = value.DocumentLines.InventoryQuantity,",
						"          RemainingOpenInventoryQuantity = value.DocumentLines.RemainingOpenInventoryQuantity,",
						"          ParentLineNum = value.DocumentLines.ParentLineNum,",
						"          Incoterms = value.DocumentLines.Incoterms,",
						"          TransportMode = value.DocumentLines.TransportMode,",
						"          NatureOfTransaction = value.DocumentLines.NatureOfTransaction,",
						"          DestinationCountryForImport = value.DocumentLines.DestinationCountryForImport,",
						"          DestinationRegionForImport = value.DocumentLines.DestinationRegionForImport,",
						"          OriginCountryForExport = value.DocumentLines.OriginCountryForExport,",
						"          OriginRegionForExport = value.DocumentLines.OriginRegionForExport,",
						"          ItemType = value.DocumentLines.ItemType,",
						"          ChangeInventoryQuantityIndependently = value.DocumentLines.ChangeInventoryQuantityIndependently,",
						"          FreeOfChargeBP = value.DocumentLines.FreeOfChargeBP,",
						"          SACEntry = value.DocumentLines.SACEntry,",
						"          HSNEntry = value.DocumentLines.HSNEntry,",
						"          GrossPrice = value.DocumentLines.GrossPrice,",
						"          GrossTotal = value.DocumentLines.GrossTotal,",
						"          GrossTotalFC = value.DocumentLines.GrossTotalFC,",
						"          GrossTotalSC = value.DocumentLines.GrossTotalSC,",
						"          NCMCode = value.DocumentLines.NCMCode,",
						"          NVECode = value.DocumentLines.NVECode,",
						"          IndEscala = value.DocumentLines.IndEscala,",
						"          CtrSealQty = value.DocumentLines.CtrSealQty,",
						"          CNJPMan = value.DocumentLines.CNJPMan,",
						"          CESTCode = value.DocumentLines.CESTCode,",
						"          UFFiscalBenefitCode = value.DocumentLines.UFFiscalBenefitCode,",
						"          ReverseCharge = value.DocumentLines.ReverseCharge,",
						"          ShipToCode = value.DocumentLines.ShipToCode,",
						"          ShipToDescription = value.DocumentLines.ShipToDescription,",
						"          ExternalCalcTaxRate = value.DocumentLines.ExternalCalcTaxRate,",
						"          ExternalCalcTaxAmount = value.DocumentLines.ExternalCalcTaxAmount,",
						"          ExternalCalcTaxAmountFC = value.DocumentLines.ExternalCalcTaxAmountFC,",
						"          ExternalCalcTaxAmountSC = value.DocumentLines.ExternalCalcTaxAmountSC,",
						"          StandardItemIdentification = value.DocumentLines.StandardItemIdentification,",
						"          CommodityClassification = value.DocumentLines.CommodityClassification,",
						"          UnencumberedReason = value.DocumentLines.UnencumberedReason,",
						"          CUSplit = value.DocumentLines.CUSplit,",
						"          U_Installasjon = value.DocumentLines.U_Installasjon,",
						"          U_ParentItem = value.DocumentLines.U_ParentItem,",
						"          U_Codebars = value.DocumentLines.U_Codebars,",
						"          U_PlannedQty = value.DocumentLines.U_PlannedQty,",
						"          U_AIG_IN = value.DocumentLines.U_AIG_IN,",
						"          U_AIG_IA = value.DocumentLines.U_AIG_IA,",
						"          U_AIG_PD = value.DocumentLines.U_AIG_PD,",
						"          U_AIG_PDate = value.DocumentLines.U_AIG_PDate,",
						"          U_AIG_ID = value.DocumentLines.U_AIG_ID,",
						"          U_PItemCode = value.DocumentLines.U_PItemCode,",
						"          U_AIG_IR = value.DocumentLines.U_AIG_IR,",
						"          U_AIG_DDate = value.DocumentLines.U_AIG_DDate,",
						"          U_U_AIG_DDate = value.DocumentLines.U_U_AIG_DDate,",
						"          U_DSS_Charge = value.DocumentLines.U_DSS_Charge,",
						"          U_DSS_ProdOrdr = value.DocumentLines.U_DSS_ProdOrdr",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> Flatten",
						"Flatten sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SinkSQL"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_sap')]",
				"[concat(variables('factoryId'), '/datasets/sql_bo_sap_invoices')]"
			]
		}
	]
}